{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-ee2067dfb1c303f41003aea7d82d51e0",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AlertComponent",
            "id": "component-AlertComponent-24a9533fa23044919c9cb12e469aa1f5",
            "file": "src/app/alert/alert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-alert",
            "styleUrls": [
                "./alert.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./alert.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "closeText",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "line": 29
                },
                {
                    "name": "info",
                    "defaultValue": "false",
                    "line": 23
                },
                {
                    "name": "leftIcon",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "outline",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "rightIcon",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "success",
                    "defaultValue": "false",
                    "line": 32
                },
                {
                    "name": "warning",
                    "defaultValue": "false",
                    "line": 26
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss']\n})\nexport class AlertComponent {\n  @Input()\n  rightIcon= false;\n\n  @Input()\n  leftIcon= false;\n\n  @Input()\n  closeText= false;\n\n  @Input()\n  outline= false;\n\n  //Types\n  @Input()\n  info= false;\n\n  @Input()\n  warning= false;\n\n  @Input()\n  error= false;\n\n  @Input()\n  success= false;\n\n  public get classes(): string[] {\n    let mode = this.outline ? 'outline' : '';\n    if(this.info){\n      mode += ' info';\n    }else if(this.warning){\n      mode += ' warning';\n    }else if(this.error){\n      mode += ' error';\n    }else if(this.success){\n      mode += ' success';\n    }\n    return ['alert', mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".alert {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 16px 18px;\n  background: #f5f5f5;\n  border-radius: 4px;\n  color: #595959;\n  font-size: 16px;\n  &.outline {\n    box-shadow: inset 1px 0px 0px #d9d9d9, inset 0px 1px 0px #d9d9d9,\n      inset -1px 0px 0px #d9d9d9, inset 0px -1px 0px #d9d9d9;\n  }\n  &.info {\n    background: #e6f7ff;\n    &.outline {\n      box-shadow: inset 1px 0px 0px #91d5ff, inset 0px 1px 0px #91d5ff,\n        inset -1px 0px 0px #91d5ff, inset 0px -1px 0px #91d5ff;\n    }\n    svg,\n    span {\n      color: #1890ff;\n    }\n  }\n  &.warning {\n    background: #fefae6;\n    &.outline {\n      box-shadow: inset 1px 0px 0px #fff08f, inset 0px 1px 0px #fff08f,\n        inset -1px 0px 0px #fff08f, inset 0px -1px 0px #fff08f;\n    }\n    svg,\n    span {\n      color: #faad14;\n    }\n  }\n  &.error {\n    background: #fff1f0;\n    &.outline {\n      box-shadow: inset 1px 0px 0px #ffa39e, inset 0px 1px 0px #ffa39e,\n        inset -1px 0px 0px #ffa39e, inset 0px -1px 0px #ffa39e;\n    }\n    svg,\n    span {\n      color: #f5222d;\n    }\n  }\n  &.success {\n    background: #f6ffed;\n    &.outline {\n      box-shadow: inset 1px 0px 0px #b7eb8f, inset 0px 1px 0px #b7eb8f,\n        inset -1px 0px 0px #b7eb8f, inset 0px -1px 0px #b7eb8f;\n    }\n    svg,\n    span {\n      color: #52c41a;\n    }\n  }\n  svg {\n    margin: -3px 5px;\n  }\n  p {\n    margin: 0;\n  }\n  .closebtn {\n    margin-left: 15px;\n    color: white;\n    font-weight: bold;\n    float: right;\n    font-size: 22px;\n    line-height: 20px;\n    cursor: pointer;\n    transition: 0.3s;\n    &:hover {\n      color: black;\n    }\n  }\n}\n",
                    "styleUrl": "./alert.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 34
                    }
                }
            },
            "templateData": "<div [ngClass]=\"classes\">\n  <p>\n    <svg *ngIf=\"leftIcon\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M9.00002 0.666016C4.39169 0.666016 0.666687 4.39102 0.666687 8.99935C0.666687 13.6077 4.39169 17.3327 9.00002 17.3327C13.6084 17.3327 17.3334 13.6077 17.3334 8.99935C17.3334 4.39102 13.6084 0.666016 9.00002 0.666016ZM13.1667 11.991L11.9917 13.166L9.00002 10.1743L6.00835 13.166L4.83335 11.991L7.82502 8.99935L4.83335 6.00768L6.00835 4.83268L9.00002 7.82435L11.9917 4.83268L13.1667 6.00768L10.175 8.99935L13.1667 11.991Z\" />\n    </svg>\n    Basic Alert\n  </p>\n  <div onclick=\"this.parentElement.style.display='none';\">\n    <svg *ngIf=\"rightIcon\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" />\n    </svg>\n    <span *ngIf=\"closeText\">Close now</span>\n  </div>\n</div>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-1fe5c674461a6a42bdaaf7c0eb183e78",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'storybook'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  title = 'storybook';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": ""
        },
        {
            "name": "AppTopbarComponent",
            "id": "component-AppTopbarComponent-8132d064c0184323019b10b27ae4c03c",
            "file": "src/app/app-topbar/app-topbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-app-topbar",
            "styleUrls": [
                "./app-topbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app-topbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "logo",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "role",
                    "defaultValue": "'Role'",
                    "line": 16
                },
                {
                    "name": "searchIcon",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "searchInput",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "username",
                    "defaultValue": "'Username'",
                    "line": 13
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-app-topbar',\n  templateUrl: './app-topbar.component.html',\n  styleUrls: ['./app-topbar.component.scss']\n})\nexport class AppTopbarComponent implements OnInit {\n  @Input()\n  logo = false;\n  \n  @Input()\n  username= 'Username';\n\n  @Input()\n  role= 'Role';\n\n  @Input()\n  searchIcon = false;\n\n  @Input()\n  searchInput  = false;\n\n  public get SearchIcon(): string[]{\n    let mode = '';\n    if(this.searchIcon){\n      mode = 'visibility';\n    }else{\n      mode = 'hidden';\n    }\n    return [ mode ];\n  }\n\n  public get SearchInput(): string[]{\n    let mode = '';\n    if(this.searchInput){\n      mode = 'visibility';\n    }else{\n      mode = 'hidden';\n    }\n    return [ mode ];\n  }\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "nav {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  background-color: #fff;\n  padding: 10px 50px;\n  .icon {\n    margin: 10px;\n    svg{\n      margin: 0 5px;\n    }\n  }\n  .controls {\n    display: flex;\n    flex-direction: row-reverse;\n    .user {\n      display: flex;\n      flex-direction: row;\n      img {\n        border-radius: 50%;\n      }\n      .dropdown {\n        position: relative;\n        display: inline-block;\n        .dropbtn {\n          font-size: 14px;\n          border: none;\n          cursor: pointer;\n          margin: 0 5px;\n          color: #595959;\n          span {\n            color: #bbb;\n            font-size: 12px;\n          }\n        }\n        .dropdown-content {\n          display: none;\n          position: absolute;\n          background-color: #f9f9f9;\n          min-width: 130px;\n          box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n          z-index: 1;\n          a {\n            color: black;\n            padding: 12px 16px;\n            text-decoration: none;\n            display: block;\n            &:hover {\n              background-color: #f1f1f1;\n            }\n          }\n        }\n        &:hover {\n          .dropdown-content {\n            display: block;\n          }\n        }\n      }\n    }\n    .icons {\n      display: flex;\n      flex-direction: row;\n      svg {\n        margin: 8px 8px;\n      }\n      .searchBox {\n        position: relative;\n        &:hover {\n          .searchInput {\n            width: 240px;\n            padding: 10px 10px 10px 30px;\n          }\n          .search-btn{\n            svg {\n              display: none;\n            }\n          }\n\n        }\n        .searchInput {\n          width: 0px;\n          outline: none;\n          border: none;\n          background: #f5f5f5;\n          border-radius: 100px;\n          float: left;\n          transition: 0.4s;\n          padding: 0;\n          ::placeholder {\n            color: #bfbfbf;\n            font-size: 14px;\n          }\n          &:focus{\n            width: 240px;\n            padding: 10px 10px 10px 30px;\n          }\n        }\n        .search-btn{\n          background-color: transparent;\n          outline: none;\n          border: none;\n          float: right;\n          transition: 0.4s;\n        }\n      }\n      .search {\n        position: relative;\n        input {\n          outline: none;\n          border: none;\n          background: #f5f5f5;\n          border-radius: 100px;\n          padding: 10px 10px 10px 30px;\n          ::placeholder {\n            color: #bfbfbf;\n            font-size: 14px;\n          }\n        }\n        svg {\n          position: absolute;\n          margin-top: 10px;\n        }\n      }\n    }\n  }\n}\n.hidden {\n  display: none;\n}\n.visibility {\n  display: inline-block;\n}\n",
                    "styleUrl": "./app-topbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 42
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "SearchIcon": {
                    "name": "SearchIcon",
                    "getSignature": {
                        "name": "SearchIcon",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 24
                    }
                },
                "SearchInput": {
                    "name": "SearchInput",
                    "getSignature": {
                        "name": "SearchInput",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 34
                    }
                }
            },
            "templateData": "<nav>\n  <div class=\"icon\">\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M4 18H15C15.55 18 16 17.55 16 17C16 16.45 15.55 16 15 16H4C3.45 16 3 16.45 3 17C3 17.55 3.45 18 4 18ZM4 13H12C12.55 13 13 12.55 13 12C13 11.45 12.55 11 12 11H4C3.45 11 3 11.45 3 12C3 12.55 3.45 13 4 13ZM3 7C3 7.55 3.45 8 4 8H15C15.55 8 16 7.55 16 7C16 6.45 15.55 6 15 6H4C3.45 6 3 6.45 3 7ZM20.3 14.88L17.42 12L20.3 9.12C20.69 8.73 20.69 8.1 20.3 7.71C19.91 7.32 19.28 7.32 18.89 7.71L15.3 11.3C14.91 11.69 14.91 12.32 15.3 12.71L18.89 16.3C19.28 16.69 19.91 16.69 20.3 16.3C20.68 15.91 20.69 15.27 20.3 14.88Z\"\n        fill=\"#85A5FF\" />\n      <rect x=\"3\" y=\"2\" width=\"17\" height=\"2\" rx=\"1\" fill=\"#85A5FF\" />\n      <rect x=\"3\" y=\"20\" width=\"17\" height=\"2\" rx=\"1\" fill=\"#85A5FF\" />\n    </svg>\n    <svg *ngIf=\"logo\" width=\"155\" height=\"26\" viewBox=\"0 0 155 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.3425 3.57346C6.57456 3.57346 1.08778 9.0896 1.08778 15.8938C1.08778 16.999 1.23524 18.0714 1.50719 19.0918C0.545805 17.2743 0 15.2007 0 13C0 5.82035 5.78936 0 12.9308 0C20.0722 0 25.8616 5.82035 25.8635 13C25.8635 13.9126 25.7697 14.8021 25.5916 15.6608C25.4671 8.96445 20.032 3.57346 13.3425 3.57346ZM24.5302 18.745C22.4197 23.0424 18.0207 25.9997 12.9304 25.9997C8.05833 25.9997 3.81637 23.2888 1.61208 19.2822C2.3111 19.2109 3.42569 18.8798 4.66859 17.6764C4.99363 17.3428 5.391 16.8301 5.86394 16.2198C7.92953 13.5543 11.4368 9.02843 16.6572 9.44359C18.9917 9.69967 20.3437 11.4806 20.6808 12.3586C20.6808 12.3586 19.1047 10.7471 17.36 12.1044C16.389 12.813 15.7302 14.9289 17.6128 16.6887C19.2694 18.2367 21.4392 19.0665 24.5302 18.745Z\" fill=\"#1890FF\"/>\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.7148 10.1773V3.08813H33.8635V22.5573H37.5252V20.7571H37.5788C37.9944 21.5388 38.6092 22.0933 39.4231 22.4206C40.2351 22.7479 41.1582 22.9116 42.1885 22.9116C42.8932 22.9116 43.5884 22.7653 44.276 22.4745C44.9635 22.1838 45.5821 21.7391 46.1336 21.1383C46.6852 20.5376 47.1333 19.7694 47.4761 18.8337C47.8189 17.898 47.9913 16.7851 47.9913 15.4951C47.9913 14.2032 47.8189 13.0904 47.4761 12.1546C47.1314 11.2189 46.6852 10.4526 46.1336 9.85191C45.5821 9.2512 44.9635 8.80644 44.276 8.51571C43.5884 8.22498 42.8932 8.07866 42.1885 8.07866C41.3209 8.07866 40.484 8.24616 39.6797 8.5831C38.8754 8.91811 38.2376 9.45144 37.7684 10.1773H37.7148ZM43.3529 12.3587C43.6248 12.7765 43.824 13.2579 43.9504 13.8027C44.0768 14.3476 44.1419 14.9194 44.14 15.5202C44.14 16.1016 44.0768 16.6657 43.9504 17.2106C43.8221 17.7574 43.6248 18.2388 43.3529 18.6566C43.0809 19.0744 42.742 19.4074 42.3359 19.652C41.928 19.8965 41.4358 20.0197 40.8575 20.0197C40.2964 20.0197 39.808 19.8965 39.3924 19.652C38.9769 19.4055 38.6341 19.0744 38.3621 18.6566C38.0902 18.2368 37.891 17.7555 37.7646 17.2106C37.6382 16.6657 37.575 16.1016 37.575 15.5202C37.575 14.9214 37.6382 14.3476 37.7646 13.8027C37.891 13.2579 38.0902 12.7765 38.3621 12.3587C38.6341 11.9409 38.9769 11.6078 39.3924 11.3633C39.808 11.1188 40.2964 10.9956 40.8575 10.9956C41.4358 10.9956 41.9299 11.1188 42.3359 11.3633C42.742 11.6098 43.0809 11.9409 43.3529 12.3587ZM53.3052 3.08813V22.5535H49.4539V3.08813H53.3052ZM76.8707 20.0176C75.7848 20.0176 74.9537 19.7365 74.3753 19.1723C73.797 18.6101 73.481 17.7014 73.4254 16.446H83.541C83.6119 15.3563 83.5219 14.3108 83.2691 13.3116C83.0163 12.3123 82.6045 11.4209 82.0357 10.6392C81.467 9.85747 80.7373 9.23558 79.8525 8.77157C78.9678 8.30756 77.9279 8.07652 76.7347 8.07652C75.668 8.07652 74.6971 8.26713 73.82 8.64835C72.9428 9.02957 72.1883 9.55327 71.5563 10.2156C70.9224 10.8798 70.4341 11.6654 70.0912 12.5742C69.7484 13.4829 69.5761 14.4648 69.5761 15.518C69.5761 16.6097 69.7427 17.609 70.0778 18.5177C70.4111 19.4265 70.886 20.2082 71.5008 20.8628C72.1155 21.5174 72.8643 22.0219 73.751 22.3761C74.6377 22.7304 75.6316 22.9075 76.7347 22.9075C78.3262 22.9075 79.6821 22.5456 80.8024 21.8178C81.9247 21.0919 82.7558 19.8828 83.2978 18.1923H79.9081C79.7817 18.6275 79.4389 19.0414 78.8777 19.4323C78.3166 19.8231 77.6482 20.0176 76.8707 20.0176ZM76.6275 10.9934C77.5659 10.9934 78.2668 11.2495 78.7284 11.7578C79.1899 12.2661 79.5097 13.0112 79.6917 13.9912H73.4274C73.4446 13.7197 73.504 13.4098 73.6035 13.0651C73.7031 12.7205 73.8755 12.3932 74.1187 12.0832C74.3638 11.7751 74.6894 11.5171 75.0954 11.3073C75.5014 11.0974 76.0127 10.9934 76.6275 10.9934ZM64.7505 20.5909V22.5528H68.4103V8.45732H64.559V15.8449C64.559 17.2812 64.3234 18.3113 63.8542 18.939C63.385 19.5666 62.6247 19.8805 61.5772 19.8805C60.656 19.8805 60.0144 19.5936 59.6525 19.0217C59.2905 18.4499 59.1105 17.5816 59.1105 16.4187V8.45732H55.2592V17.1272C55.2592 17.9994 55.3358 18.7946 55.489 19.5127C55.6422 20.2309 55.9104 20.8393 56.2896 21.3399C56.6687 21.8405 57.1877 22.2255 57.8484 22.4989C58.5092 22.7704 59.3537 22.9071 60.3841 22.9071C61.198 22.9071 61.9927 22.7261 62.7703 22.3622C63.5478 22.0003 64.1798 21.4092 64.6681 20.5909H64.7505Z\" fill=\"#1890FF\"/>\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M116.731 22.5477C116.333 22.7865 115.781 22.9058 115.077 22.9058C114.479 22.9058 114.006 22.7383 113.654 22.4014C113.301 22.0645 113.125 21.5157 113.125 20.7514C112.493 21.5157 111.756 22.0645 110.915 22.4014C110.074 22.7383 109.167 22.9058 108.19 22.9058C107.558 22.9058 106.957 22.8327 106.386 22.6883C105.817 22.5439 105.323 22.3167 104.908 22.0067C104.492 21.6986 104.163 21.2943 103.917 20.7937C103.674 20.2931 103.552 19.6886 103.552 18.98C103.552 18.181 103.688 17.5264 103.958 17.0181C104.23 16.5098 104.586 16.0959 105.028 15.7782C105.471 15.4605 105.978 15.2198 106.547 15.0562C107.116 14.8925 107.7 14.7558 108.295 14.648C108.927 14.5209 109.529 14.4266 110.099 14.3611C110.668 14.2976 111.17 14.2071 111.605 14.0877C112.039 13.9703 112.382 13.797 112.635 13.5698C112.888 13.3426 113.014 13.0114 113.014 12.5744C113.014 12.0661 112.918 11.656 112.729 11.3479C112.539 11.0399 112.294 10.8031 111.997 10.6394C111.698 10.4757 111.365 10.366 110.994 10.3121C110.622 10.2582 110.256 10.2312 109.896 10.2312C108.92 10.2312 108.106 10.418 107.457 10.7896C106.805 11.1631 106.453 11.8659 106.399 12.9017H104.094C104.13 12.0295 104.31 11.294 104.636 10.6933C104.961 10.0926 105.394 9.60741 105.938 9.23389C106.48 8.8623 107.098 8.59275 107.796 8.42909C108.491 8.26544 109.238 8.18457 110.032 8.18457C110.664 8.18457 111.292 8.23078 111.917 8.32127C112.541 8.41176 113.106 8.59852 113.612 8.87962C114.117 9.16073 114.525 9.55542 114.832 10.0637C115.138 10.572 115.293 11.2343 115.293 12.0488V19.2862C115.293 19.831 115.324 20.2296 115.389 20.4837C115.452 20.7379 115.665 20.865 116.027 20.865C116.226 20.865 116.461 20.8207 116.731 20.7283V22.5477ZM112.987 15.3007C112.698 15.5183 112.319 15.6781 111.848 15.7782C111.377 15.8783 110.885 15.9592 110.369 16.0227C109.854 16.0862 109.333 16.1594 108.811 16.2403C108.286 16.3211 107.817 16.454 107.401 16.635C106.985 16.8159 106.646 17.0759 106.384 17.4109C106.122 17.7478 105.991 18.206 105.991 18.7875C105.991 19.1687 106.068 19.4922 106.221 19.756C106.375 20.0197 106.574 20.2334 106.819 20.3971C107.062 20.5608 107.347 20.6782 107.673 20.7514C107.999 20.8245 108.341 20.8611 108.703 20.8611C109.462 20.8611 110.113 20.7571 110.655 20.5473C111.197 20.3393 111.639 20.0756 111.984 19.756C112.327 19.4383 112.581 19.0936 112.744 18.7201C112.907 18.3485 112.987 17.9981 112.987 17.6708V15.3007ZM140.187 21.7084C139.137 22.5074 137.818 22.9079 136.228 22.9079C135.108 22.9079 134.135 22.7269 133.314 22.363C132.49 21.9991 131.799 21.4908 131.24 20.8362C130.678 20.1816 130.259 19.3999 129.979 18.4911C129.7 17.5823 129.541 16.5927 129.505 15.5203C129.505 14.4479 129.667 13.4659 129.993 12.5764C130.318 11.6869 130.774 10.9129 131.362 10.2583C131.95 9.60367 132.645 9.09538 133.45 8.73148C134.254 8.36759 135.135 8.18661 136.094 8.18661C137.341 8.18661 138.377 8.44653 139.199 8.96445C140.022 9.48237 140.681 10.1408 141.179 10.9418C141.675 11.7408 142.02 12.6149 142.209 13.5584C142.399 14.5037 142.476 15.4028 142.439 16.2577H131.944C131.927 16.8757 131.998 17.461 132.161 18.0155C132.324 18.5701 132.586 19.061 132.948 19.4884C133.31 19.9159 133.771 20.2567 134.331 20.5108C134.89 20.765 135.551 20.892 136.311 20.892C137.288 20.892 138.086 20.6648 138.71 20.2105C139.335 19.7561 139.745 19.0649 139.944 18.1388H142.223C141.912 19.7176 141.235 20.9094 140.187 21.7084ZM139.63 12.6573C139.421 12.1663 139.141 11.7447 138.789 11.3904C138.437 11.0361 138.021 10.755 137.542 10.5452C137.063 10.3372 136.535 10.2313 135.957 10.2313C135.359 10.2313 134.821 10.3353 134.342 10.5452C133.863 10.755 133.452 11.04 133.109 11.4039C132.766 11.7678 132.494 12.1894 132.295 12.6708C132.096 13.1521 131.979 13.6662 131.942 14.211H139.995C139.959 13.6662 139.838 13.1482 139.63 12.6573ZM145.5 19.4594C145.717 19.8137 146.002 20.0967 146.354 20.3047C146.707 20.5145 147.105 20.6628 147.548 20.7552C147.99 20.8457 148.448 20.8919 148.917 20.8919C149.279 20.8919 149.658 20.8649 150.056 20.811C150.455 20.7571 150.82 20.657 151.154 20.5107C151.489 20.3663 151.765 20.1526 151.981 19.8695C152.197 19.5884 152.307 19.2284 152.307 18.7933C152.307 18.1925 152.081 17.7401 151.629 17.4301C151.177 17.122 150.612 16.8717 149.934 16.6811C149.256 16.4905 148.519 16.3172 147.724 16.1632C146.927 16.0092 146.192 15.7916 145.514 15.5086C144.836 15.2275 144.271 14.8309 143.819 14.3226C143.367 13.8143 143.141 13.1058 143.141 12.197C143.141 11.4885 143.298 10.88 143.616 10.3698C143.932 9.86153 144.338 9.44758 144.836 9.12989C145.332 8.81221 145.893 8.57539 146.517 8.42136C147.142 8.26733 147.76 8.19032 148.375 8.19032C149.17 8.19032 149.903 8.25771 150.572 8.39441C151.24 8.53111 151.832 8.76793 152.347 9.10294C152.862 9.43988 153.274 9.89426 153.58 10.4661C153.887 11.0379 154.068 11.7522 154.122 12.6071H151.816C151.78 12.1527 151.663 11.7753 151.464 11.475C151.265 11.1746 151.012 10.934 150.706 10.753C150.397 10.572 150.058 10.4391 149.689 10.3583C149.317 10.2774 148.944 10.235 148.563 10.235C148.218 10.235 147.871 10.262 147.519 10.3159C147.166 10.3698 146.845 10.4661 146.556 10.6028C146.266 10.7395 146.031 10.9205 145.851 11.1477C145.669 11.3749 145.579 11.6694 145.579 12.0333C145.579 12.4338 145.719 12.765 145.998 13.0287C146.278 13.2925 146.636 13.5101 147.069 13.6834C147.504 13.8566 147.99 14.001 148.534 14.1204C149.076 14.2398 149.618 14.3611 150.162 14.4882C150.74 14.6152 151.305 14.7693 151.857 14.9522C152.408 15.1332 152.896 15.3738 153.322 15.6742C153.747 15.9745 154.09 16.3519 154.352 16.8063C154.614 17.2607 154.745 17.8248 154.745 18.4967C154.745 19.3516 154.568 20.0601 154.216 20.6223C153.864 21.1865 153.402 21.6409 152.833 21.9855C152.264 22.3301 151.621 22.5708 150.909 22.7075C150.194 22.8442 149.486 22.9116 148.779 22.9116C148.001 22.9116 147.26 22.8307 146.556 22.6671C145.851 22.5034 145.226 22.2358 144.684 21.8623C144.142 21.4907 143.708 20.9997 143.382 20.3894C143.057 19.781 142.877 19.0397 142.84 18.1675H145.146C145.165 18.672 145.282 19.1052 145.5 19.4594ZM116.429 8.51155L121.636 22.6071H124.103L129.228 8.51155H126.814L122.99 20.262H122.936L119.005 8.51155H116.429ZM93.4349 11.4015L96.2827 22.6071H98.7244L103.198 8.51155H100.812L97.6654 20.0444H97.6117L94.6836 8.51155H92.1614L89.3404 20.0444H89.2868L86.1135 8.51155H83.5645L88.065 22.6071H90.5603L93.3813 11.4015H93.4349Z\" fill=\"#595959\"/>\n    </svg>\n  </div>\n  <div class=\"controls\">\n    <div class=\"user\">\n      <div class=\"image\">\n        <img src=\"https://via.placeholder.com/40\" alt=\"\">\n      </div>\n      <div class=\"dropdown\">\n        <p class=\"dropbtn\">\n          {{username}}\n          <svg width=\"8\" height=\"6\" viewBox=\"0 0 8 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M7.06 0.726562L4 3.7799L0.94 0.726562L0 1.66656L4 5.66656L8 1.66656L7.06 0.726562Z\"\n              fill=\"#85A5FF\" />\n          </svg>\n          <br>\n          <span>{{role}}</span>\n        </p>\n        <div class=\"dropdown-content\">\n          <a href=\"#\">Link 1</a>\n          <a href=\"#\">Link 2</a>\n          <a href=\"#\">Link 3</a>\n        </div>\n      </div>\n    </div>\n    <div class=\"icons\">\n      <div class=\"searchBox\" *ngIf=\"searchIcon\">\n        <input class=\"searchInput\" type=\"search\" placeholder=\"Search\">\n        <button class=\"search-btn\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M11.2204 9.93396H10.5429L10.3027 9.7024C11.1432 8.7247 11.6492 7.4554 11.6492 6.07461C11.6492 2.99571 9.15352 0.5 6.07461 0.5C2.99571 0.5 0.5 2.99571 0.5 6.07461C0.5 9.15352 2.99571 11.6492 6.07461 11.6492C7.4554 11.6492 8.7247 11.1432 9.7024 10.3027L9.93396 10.5429V11.2204L14.2221 15.5L15.5 14.2221L11.2204 9.93396ZM6.07461 9.93396C3.93911 9.93396 2.21527 8.21012 2.21527 6.07461C2.21527 3.93911 3.93911 2.21527 6.07461 2.21527C8.21012 2.21527 9.93396 3.93911 9.93396 6.07461C9.93396 8.21012 8.21012 9.93396 6.07461 9.93396Z\"\n              fill=\"#85A5FF\" />\n          </svg>\n        </button>\n      </div>\n\n      <div class=\"search\" [ngClass]=\"SearchInput\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M11.2204 9.93396H10.5429L10.3027 9.7024C11.1432 8.7247 11.6492 7.4554 11.6492 6.07461C11.6492 2.99571 9.15352 0.5 6.07461 0.5C2.99571 0.5 0.5 2.99571 0.5 6.07461C0.5 9.15352 2.99571 11.6492 6.07461 11.6492C7.4554 11.6492 8.7247 11.1432 9.7024 10.3027L9.93396 10.5429V11.2204L14.2221 15.5L15.5 14.2221L11.2204 9.93396ZM6.07461 9.93396C3.93911 9.93396 2.21527 8.21012 2.21527 6.07461C2.21527 3.93911 3.93911 2.21527 6.07461 2.21527C8.21012 2.21527 9.93396 3.93911 9.93396 6.07461C9.93396 8.21012 8.21012 9.93396 6.07461 9.93396Z\"\n            fill=\"#85A5FF\" />\n        </svg>\n        <input type=\"search\" placeholder=\"Search\">\n      </div>\n\n      <svg width=\"14\" height=\"17\" viewBox=\"0 0 14 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M5.5075 14.7575C5.5075 15.5825 6.175 16.25 7 16.25C7.825 16.25 8.4925 15.5825 8.4925 14.7575H5.5075ZM7 3.5C9.07 3.5 10.75 5.18 10.75 7.25V12.5H3.25V7.25C3.25 5.18 4.93 3.5 7 3.5ZM7 0.125C6.3775 0.125 5.875 0.6275 5.875 1.25V2.1275C3.52 2.6375 1.75 4.7375 1.75 7.25V11.75L0.25 13.25V14H13.75V13.25L12.25 11.75V7.25C12.25 4.7375 10.48 2.6375 8.125 2.1275V1.25C8.125 0.6275 7.6225 0.125 7 0.125Z\"\n          fill=\"#85A5FF\" />\n      </svg>\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M2.64286 10.1429H0.5V15.5H5.85714V13.3571H2.64286V10.1429ZM0.5 5.85714H2.64286V2.64286H5.85714V0.5H0.5V5.85714ZM13.3571 13.3571H10.1429V15.5H15.5V10.1429H13.3571V13.3571ZM10.1429 0.5V2.64286H13.3571V5.85714H15.5V0.5H10.1429Z\"\n          fill=\"#85A5FF\" />\n      </svg>\n    </div>\n  </div>\n</nav>\n"
        },
        {
            "name": "AvatarComponent",
            "id": "component-AvatarComponent-b1909e1f1c177a6ef7643ff7d8cf2e19",
            "file": "src/app/avatar/avatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar",
            "styleUrls": [
                "./avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./avatar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "check",
                    "defaultValue": "false",
                    "line": 36
                },
                {
                    "name": "close",
                    "defaultValue": "false",
                    "line": 39
                },
                {
                    "name": "ellipse",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "image",
                    "defaultValue": "false",
                    "line": 26
                },
                {
                    "name": "label",
                    "defaultValue": "'MS'",
                    "line": 19
                },
                {
                    "name": "more",
                    "defaultValue": "false",
                    "line": 42
                },
                {
                    "name": "presence",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "project",
                    "defaultValue": "false",
                    "line": 32
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "line": 22,
                    "type": "\"mini\" | \"small\" | \"medium\" | \"large\" | \"custom\""
                },
                {
                    "name": "status",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "text",
                    "defaultValue": "false",
                    "line": 29
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.component.scss'],\n})\nexport class AvatarComponent {\n  @Input()\n  status = false;\n\n  @Input()\n  presence = false;\n\n  @Input()\n  ellipse = false;\n\n  @Input()\n  label = 'MS';\n\n  @Input()\n  size: 'mini' | 'small' | 'medium' | 'large' | 'custom' = 'large';\n\n  //Types\n  @Input()\n  image = false;\n\n  @Input()\n  text = false;\n\n  @Input()\n  project = false;\n\n  //Identifier\n  @Input()\n  check = false;\n\n  @Input()\n  close = false;\n\n  @Input()\n  more = false;\n  \n  public get classes(): string[] {\n    let mode = ''; /*\n    if(this.status){\n      mode = 'status';\n    }*/\n    return ['avatar', this.size, mode];\n  }\n\n  public get Ellipse(): string[] {\n    let mode = '';\n    if (this.ellipse) {\n      mode = 'ellipse';\n    }\n    return [mode , this.size];\n  }\n\n  public get Status(): string[] {\n    let mode = '';\n    if (this.status) {\n      mode = 'status';\n      if (this.check) {\n        mode += ' check';\n      } else if (this.close) {\n        mode += ' close';\n      } else if (this.more) {\n        mode += ' more';\n      }\n    }\n\n    return [mode];\n  }\n\n  public get Presence(): string[] {\n    let mode = '';\n    if(this.image){\n      if (this.presence) {\n        mode = 'presence';\n        if (this.ellipse) {\n          mode += ' ellipseImage';\n        } else {\n          mode += ' squareImage';\n        }\n      }\n    }\n    if(this.text){\n      if (this.presence) {\n        mode = 'presence';\n        if (this.ellipse) {\n          mode += ' ellipseText';\n        } else {\n          mode += ' squareText';\n        }\n      }\n    }\n    return [mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".avatar {\n  position: relative;\n  display: inline-block;\n  img {\n    &.ellipse {\n      border-radius: 50%;\n    }\n  }\n  p{\n    font-size: 14px;\n    color: #FFFFFF;\n    background: #D9D9D9;\n    text-align: center;\n    &.ellipse {\n      border-radius: 50%;\n    }\n    &.custom {\n      padding: 25px;\n    }\n    &.large {\n      padding: 20px;\n    }\n    &.medium {\n      padding: 15px;\n    }\n    &.small {\n      padding: 10px;\n      font-size: 12px;\n    }\n    &.mini {\n      padding: 5px;\n      font-size: 7px;\n    }\n  }\n  .status {\n    border-radius: 50%;\n    position: absolute;\n    top: 2%;\n    right: 0%;\n    border: 3px solid #fff;\n    &.check {\n      background: #389e0d;\n      padding: 1px 2px;\n    }\n    &.close {\n      background: #f5222d;\n      padding: 0px 4px 1px;\n    }\n    &.more {\n      background: #bfbfbf;\n      padding: 0px 3px;\n      svg {\n        margin: 3px auto;\n      }\n    }\n  }\n  .presence {\n    padding: 6px;\n    border-radius: 50%;\n    background: #389e0d;\n    border: 3px solid white;\n    position: absolute;\n    &.ellipseImage {\n      bottom: 8%;\n      right: 3%;\n    }\n    &.squareImage {\n      bottom: 3%;\n      right: -5%;\n    }\n    &.ellipseText {\n      bottom: 12%;\n      right: 3%;\n    }\n    &.squareText {\n      bottom: 9%;\n      right: -8%;\n    }\n  }\n}\n",
                    "styleUrl": "./avatar.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 44
                    }
                },
                "Ellipse": {
                    "name": "Ellipse",
                    "getSignature": {
                        "name": "Ellipse",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 52
                    }
                },
                "Status": {
                    "name": "Status",
                    "getSignature": {
                        "name": "Status",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 60
                    }
                },
                "Presence": {
                    "name": "Presence",
                    "getSignature": {
                        "name": "Presence",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 76
                    }
                }
            },
            "templateData": "<div [ngClass]='classes'>\n  <img [ngClass]='Ellipse' *ngIf='image' src=\"./../../assets/Rectangle.png\" alt=\"\">\n  <p *ngIf='text' [ngClass]='Ellipse'> {{label}} </p>\n  <span *ngIf='status' [ngClass]='Status' >\n    <svg *ngIf='check' width=\"12\" height=\"9\" viewBox=\"0 0 12 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M4.24979 6.14926L2.36697 4.26644C2.06136 3.96084 1.56723 3.96084 1.26163 4.26644C0.956021 4.57205 0.956021 5.06618 1.26163 5.37179L3.69996 7.81012C4.00556 8.11573 4.4997 8.11573 4.8053 7.81012L10.977 1.63845C11.2826 1.33285 11.2826 0.838715 10.977 0.53311C10.6714 0.227505 10.1772 0.227505 9.87163 0.53311L4.24979 6.14926Z\"\n        fill=\"white\" stroke=\"white\" stroke-width=\"0.4\" />\n    </svg>\n    <svg *ngIf='close' width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M7.67492 0.330755C7.44742 0.103255 7.07992 0.103255 6.85242 0.330755L3.99992 3.17742L1.14742 0.324922C0.919922 0.0974219 0.552422 0.0974219 0.324922 0.324922C0.0974219 0.552422 0.0974219 0.919922 0.324922 1.14742L3.17742 3.99992L0.324922 6.85242C0.0974219 7.07992 0.0974219 7.44742 0.324922 7.67492C0.552422 7.90242 0.919922 7.90242 1.14742 7.67492L3.99992 4.82242L6.85242 7.67492C7.07992 7.90242 7.44742 7.90242 7.67492 7.67492C7.90242 7.44742 7.90242 7.07992 7.67492 6.85242L4.82242 3.99992L7.67492 1.14742C7.89659 0.925755 7.89659 0.552422 7.67492 0.330755Z\"\n        fill=\"white\" />\n    </svg>\n    <svg *ngIf='more' width=\"10\" height=\"4\" viewBox=\"0 0 10 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M1.50065 0.833984C0.858984 0.833984 0.333984 1.35898 0.333984 2.00065C0.333984 2.64232 0.858984 3.16732 1.50065 3.16732C2.14232 3.16732 2.66732 2.64232 2.66732 2.00065C2.66732 1.35898 2.14232 0.833984 1.50065 0.833984ZM8.50065 0.833984C7.85898 0.833984 7.33398 1.35898 7.33398 2.00065C7.33398 2.64232 7.85898 3.16732 8.50065 3.16732C9.14232 3.16732 9.66732 2.64232 9.66732 2.00065C9.66732 1.35898 9.14232 0.833984 8.50065 0.833984ZM5.00065 0.833984C4.35898 0.833984 3.83398 1.35898 3.83398 2.00065C3.83398 2.64232 4.35898 3.16732 5.00065 3.16732C5.64232 3.16732 6.16732 2.64232 6.16732 2.00065C6.16732 1.35898 5.64232 0.833984 5.00065 0.833984Z\" fill=\"white\"/>\n    </svg>\n  </span>\n  <span *ngIf='presence' [ngClass]='Presence'></span>\n</div>\n"
        },
        {
            "name": "BadgesComponent",
            "id": "component-BadgesComponent-84289acc4b26225e21c2534bae0e66fe",
            "file": "src/app/badges/badges.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badges",
            "styleUrls": [
                "./badges.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./badges.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 25
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "icon",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "label",
                    "defaultValue": "'Status'",
                    "line": 28
                },
                {
                    "name": "proccess",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "line": 31,
                    "type": "\"small\" | \"large\""
                },
                {
                    "name": "success",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "warning",
                    "defaultValue": "false",
                    "line": 19
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-badges',\n  templateUrl: './badges.component.html',\n  styleUrls: ['./badges.component.scss']\n})\nexport class BadgesComponent {\n  @Input()\n  icon = false;\n\n  @Input()\n  proccess = false;\n\n  @Input()\n  success = false;\n\n  @Input()\n  warning = false;\n\n  @Input()\n  error = false;\n\n  @Input()\n  disabled = false;\n\n  @Input()\n  label = 'Status';\n\n  @Input()\n  size: 'small' | 'large' = 'large';\n\n  public get classes(): string[] {\n    let mode = '';\n    if(this.proccess){\n      mode = 'proccess';\n    }else if(this.success){\n      mode = 'success';\n    }else if(this.warning){\n      mode = 'warning';\n    }else if(this.error){\n      mode = 'error';\n    }else if(this.disabled){\n      mode = 'disabled';\n    }\n    return ['badges',this.size, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".badges{\n  margin: 10px 0px;\n  border-radius: 100px;\n  color: #FFFFFF;\n  text-align: center;\n  &.proccess{\n    background: #1890FF;\n  }\n  &.success{\n    background: #52C41A;\n  }\n  &.warning{\n    background: #FA8C16;\n  }\n  &.error{\n    background: #F5222D;\n  }\n  &.disabled{\n    background: #F5F5F5;\n    color: #BFBFBF;\n  }\n  &.small{\n    padding: 4px 6px ;\n    font-size: 14px;\n  }\n  &.large{\n    padding: 6px 8px;\n    font-size: 16px;\n  }svg{\n    margin: -3px 2px;\n  }\n}\n",
                    "styleUrl": "./badges.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 33
                    }
                }
            },
            "templateData": "<span [ngClass]='classes'>\n  <svg *ngIf='icon' width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M7.33398 4.66732H8.66732V6.00065H7.33398V4.66732ZM7.33398 7.33398H8.66732V11.334H7.33398V7.33398ZM8.00065 1.33398C4.32065 1.33398 1.33398 4.32065 1.33398 8.00065C1.33398 11.6807 4.32065 14.6673 8.00065 14.6673C11.6807 14.6673 14.6673 11.6807 14.6673 8.00065C14.6673 4.32065 11.6807 1.33398 8.00065 1.33398ZM8.00065 13.334C5.06065 13.334 2.66732 10.9407 2.66732 8.00065C2.66732 5.06065 5.06065 2.66732 8.00065 2.66732C10.9407 2.66732 13.334 5.06065 13.334 8.00065C13.334 10.9407 10.9407 13.334 8.00065 13.334Z\" />\n  </svg>\n  {{label}}\n</span>\n"
        },
        {
            "name": "BreadcrumbComponent",
            "id": "component-BreadcrumbComponent-40aa4220543b4e4f3e7260e42b2e9d66",
            "file": "src/app/breadcrumb/breadcrumb.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-breadcrumb",
            "styleUrls": [
                "./breadcrumb.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./breadcrumb.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "line": 25
                },
                {
                    "name": "dropdown",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "icon",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "label",
                    "defaultValue": "'Breadcrumb Link'",
                    "line": 22
                },
                {
                    "name": "link",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "size",
                    "defaultValue": "'small'",
                    "line": 28,
                    "type": "\"small\" | \"large\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent{\n  @Input()\n  icon = false;\n\n  @Input()\n  link = false;\n\n  @Input()\n  primary = false;\n\n  @Input()\n  dropdown = false;\n\n  @Input()\n  label = 'Breadcrumb Link';\n\n  @Input()\n  active = false;\n\n  @Input()\n  size: 'small' | 'large' = 'small';\n\n  public get Classes(): string[]{\n    //let mode = '';\n    return [ this.size ];\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "a {\n  text-decoration: none;\n  color: #8c8c8c;\n  text-align: center;\n  margin: 0px 10px;\n  padding: 5px;\n  &.small {\n    font-size: 14px;\n  }\n  &.large {\n    font-size: 20px;\n  }\n  svg {\n    margin: 0 5px;\n  }\n  &:hover {\n    color: #40a9ff;\n  }\n  &.active {\n    color: #595959;\n  }\n}\n.dropdown {\n  position: relative;\n  display: inline-block;\n  margin: 0px 10px;\n  .dropbtn {\n    color: #8c8c8c;\n    text-align: center;\n    padding: 5px;\n    border: none;\n    background-color: transparent;\n    &.small {\n      font-size: 14px;\n    }\n    &.large {\n      font-size: 20px;\n    }\n    cursor: pointer;\n    &:hover {\n      color: #40a9ff;\n    }\n  }\n  .dropdown-content {\n    display: none;\n    position: absolute;\n    background-color: #f9f9f9;\n    min-width: 160px;\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n    z-index: 1;\n    a {\n      color: #8c8c8c;\n      padding: 12px 16px;\n      text-decoration: none;\n      display: block;\n      &:hover {\n        background-color: #f1f1f1;\n        color: #40a9ff;\n      }\n    }\n  }\n  &:hover {\n    .dropdown-content {\n      display: block;\n    }\n  }\n}\n\n",
                    "styleUrl": "./breadcrumb.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "Classes": {
                    "name": "Classes",
                    "getSignature": {
                        "name": "Classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 30
                    }
                }
            },
            "templateData": "<a href=\"\" *ngIf=\"primary\" [ngClass]=\"Classes\">\n  <svg *ngIf=\"icon\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\" fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M10.0007 3.21583L14.584 7.34083V14.5H12.7507V9H7.25065V14.5H5.41732V7.34083L10.0007 3.21583ZM10.0007 0.75L0.833984 9H3.58398V16.3333H9.08398V10.8333H10.9173V16.3333H16.4173V9H19.1673L10.0007 0.75Z\" />\n  </svg>\n  <span *ngIf=\"link\">{{ label }}</span>\n</a>\n<div *ngIf=\"dropdown\" [ngClass]=\"Classes\" class=\"dropdown\">\n  <a type=\"button\">\n    <span>{{label}}</span>\n    <svg width=\"10\" height=\"7\" viewBox=\"0 0 10 7\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M8.825 0.158203L5 3.97487L1.175 0.158203L0 1.3332L5 6.3332L10 1.3332L8.825 0.158203Z\"/>\n    </svg>\n  </a>\n  <div class=\"dropdown-content\">\n    <a href=\"#\">Link 1</a>\n    <a href=\"#\">Link 2</a>\n    <a href=\"#\">Link 3</a>\n  </div>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ButtonGroupComponent",
            "id": "component-ButtonGroupComponent-6d4f5f4d7c9889741107ae7e456978cd",
            "file": "src/app/button-group/button-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-group",
            "styleUrls": [
                "./button-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "centerLabel",
                    "defaultValue": "'Label'",
                    "line": 25
                },
                {
                    "name": "icon",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "LeftLabel",
                    "defaultValue": "'Label'",
                    "line": 22
                },
                {
                    "name": "outline",
                    "defaultValue": "false",
                    "line": 31
                },
                {
                    "name": "rightLabel",
                    "defaultValue": "'Label'",
                    "line": 28
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 16,
                    "type": "\"small\" | \"medium\" | \"large\""
                },
                {
                    "name": "text",
                    "defaultValue": "false",
                    "line": 13
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button-group',\n  templateUrl: './button-group.component.html',\n  styleUrls: ['./button-group.component.scss']\n})\nexport class ButtonGroupComponent{\n  @Input()\n  icon = false;\n\n  @Input()\n  text = false;\n  \n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  @Input()\n  backgroundColor?: string;\n\n  @Input()\n  LeftLabel = 'Label';\n\n  @Input()\n  centerLabel = 'Label';\n\n  @Input()\n  rightLabel = 'Label';\n\n  @Input()\n  outline = false;\n\n  public get LeftClasses(): string[]{\n    const mode = this.outline ? 'outline-button' : 'primary-button ';\n    return ['button', `leftButton-${this.size}`, mode]\n  }\n\n  public get centerClasses(): string[]{\n    const mode = this.outline ? 'outline-button' : 'primary-button ';\n    return ['button', `button-${this.size}`, mode]\n  }\n\n  public get rightClasses(): string[]{\n    const mode = this.outline ? 'outline-button' : 'primary-button ';\n    return ['button', `rightButton-${this.size}`, mode]\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".grouped-btn {\n  button {\n    cursor: pointer;\n    outline: none;\n    margin: 0 5px;\n    border: none;\n    box-shadow: 0px 2px 4px #bae7ff, 0px 4px 8px #e6f7ff;\n    &.primary-button {\n      border: none;\n      color: #ffffff;\n      background-color: #1890ff;\n      box-shadow: inset -1px 0px 0px #ffffff;\n      &:hover {\n        background: #40a9ff;\n      }\n      &:focus {\n        background: #69c0ff;\n      }\n      &:checked {\n        background: #096dd9;\n      }\n      &:disabled {\n        color: #BFBFBF;\n        background: #f5f5f5;\n        border: 1px solid #d9d9d9;\n      }\n    }\n    &.outline-button {\n      color: #1890ff;\n      background: #ffffff;\n      border: 1px solid #1890ff;\n      &:hover {\n        border: 1px solid #40A9FF;\n      }\n      &:focus {\n        border: 1px solid #69C0FF;\n      }\n      &:checked {\n        border: 1px solid #096DD9;\n      }\n      &:disabled {\n        color: #BFBFBF;\n        background: #f5f5f5;\n        border: 1px solid #d9d9d9;\n      }\n    }\n    &.leftButton-small {\n      font-size: 14px;\n      padding: 7px;\n      border-radius: 4px 0px 0px 4px;\n    }\n    &.leftButton-medium {\n      font-size: 16px;\n      padding: 8px 12px;\n      border-radius: 8px 0px 0px 8px;\n    }\n    &.leftButton-large {\n      font-size: 16px;\n      padding: 12px 16px;\n      border-radius: 12px 0px 0px 12px;\n    }\n    &.button-small {\n      font-size: 14px;\n      padding: 7px;\n    }\n    &.button-medium {\n      font-size: 16px;\n      padding: 8px 12px;\n    }\n    &.button-large {\n      font-size: 16px;\n      padding: 12px 16px;\n    }\n    &.rightButton-small {\n      font-size: 14px;\n      padding: 7px;\n      border-radius: 0px 4px 4px 0px;\n    }\n    &.rightButton-medium {\n      font-size: 16px;\n      padding: 8px 12px;\n      border-radius: 0px 8px 8px 0px;\n    }\n    &.rightButton-large {\n      font-size: 16px;\n      padding: 12px 16px;\n      border-radius: 0px 12px 12px 0px;\n    }\n  }\n}\n",
                    "styleUrl": "./button-group.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "LeftClasses": {
                    "name": "LeftClasses",
                    "getSignature": {
                        "name": "LeftClasses",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 33
                    }
                },
                "centerClasses": {
                    "name": "centerClasses",
                    "getSignature": {
                        "name": "centerClasses",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 38
                    }
                },
                "rightClasses": {
                    "name": "rightClasses",
                    "getSignature": {
                        "name": "rightClasses",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            },
            "templateData": "<div class=\"grouped-btn\">\n  <button type=\"button\" [ngClass]=\"LeftClasses\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n    <svg *ngIf='icon' width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M12 12H0V14H12V12ZM12 4H0V6H12V4ZM0 10H18V8H0V10ZM0 18H18V16H0V18ZM0 0V2H18V0H0Z\"/>\n    </svg>\n    <span *ngIf='text'>{{ LeftLabel }}</span>\n  </button>\n\n  <button type=\"button\" [ngClass]=\"centerClasses\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n    <svg *ngIf='icon' width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M4 12V14H14V12H4ZM0 18H18V16H0V18ZM0 10H18V8H0V10ZM4 4V6H14V4H4ZM0 0V2H18V0H0Z\"/>\n    </svg>\n    <span *ngIf='text'>{{ centerLabel }}</span>\n  </button>\n\n  <button type=\"button\" [ngClass]=\"rightClasses\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n    <svg *ngIf='icon' width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M0 18H18V16H0V18ZM6 14H18V12H6V14ZM0 10H18V8H0V10ZM6 6H18V4H6V6ZM0 0V2H18V0H0Z\"/>\n    </svg>\n    <span *ngIf='text'>{{ rightLabel }}</span>\n  </button>\n</div>\n"
        },
        {
            "name": "ButtonIconComponent",
            "id": "component-ButtonIconComponent-c77c662b5df0f275867efb96a67f2c6b",
            "file": "src/app/button-icon/button-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-icon",
            "styleUrls": [
                "./button-icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "danger",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "dangerOutline",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "dashed",
                    "defaultValue": "false",
                    "line": 25
                },
                {
                    "name": "outline",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "primaryOutline",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 28,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-button-icon',\n  templateUrl: './button-icon.component.html',\n  styleUrls: ['./button-icon.component.scss']\n})\nexport class ButtonIconComponent implements OnInit {\n  @Input()\n  primary = false;\n\n  @Input()\n  primaryOutline = false;\n\n  @Input()\n  danger = false;\n\n  @Input()\n  dangerOutline  = false;\n\n  @Input()\n  outline = false;\n\n  @Input()\n  dashed = false;\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  @Input()\n  backgroundColor?: string;\n\n\n  public get classes(): string[]{\n    let mode = '';\n    if(this.primary){\n      mode = 'primary-button';\n    }else if(this.primaryOutline){\n      mode = 'primaryOutline-button';\n    }else if(this.danger){\n      mode = 'danger-button';\n    }else if(this.dangerOutline){\n      mode = 'dangerOutline-button';\n    }else if(this.outline){\n      mode = 'outline-button';\n    }else if(this.dashed){\n      mode = 'dashed-button';\n    }\n    return ['button', `button-${this.size}`, mode ]\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".button {\n  cursor: pointer;\n  border: 0;\n  outline: none;\n  margin: 0 5px;\n  border-radius: 50%;\n  box-shadow: 0px 2px 4px #BAE7FF, 0px 4px 8px #E6F7FF;\n  /* &::before {\n    content: \"\\f05a\";\n    font-family: \"Font Awesome 5 Free\";\n    font-weight: 900;\n    display: inline-block;\n    font-style: normal;\n    font-variant: normal;\n    text-rendering: auto;\n    -webkit-font-smoothing: antialiased;\n    color: #FFFFFF;\n  } */\n  &.button-small {\n    padding: 10px 10px 7px;\n  }\n  &.button-medium {\n    padding: 12px 12px 9px;\n  }\n  &.button-large {\n    padding: 14px 14px 11px;\n  }\n  &.danger-button {\n    color: white;\n    background-color: #F5222D;\n    &:hover{\n      background-color: #FF4D4F;\n      border: 1px solid #FF4D4F;\n    }\n    &:focus{\n      background-color: #FF7875;\n      border: 1px solid #FF7875;\n    }\n    &:active{\n      background-color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n  }\n  &.primary-button {\n    color: white;\n    background-color: #1890FF;\n    &:hover{\n      background-color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      background-color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      background-color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n  }\n  &.outline-button {\n    color: #595959;\n    background-color: transparent;\n    border: 1px solid #595959;\n    &:hover{\n      color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n    i{\n      color: #595959;\n    }\n  }\n  &.dashed-button {\n    color: #595959;\n    background-color: transparent;\n    border: 1px dashed #595959;\n    &:hover{\n      color: #40A9FF;\n      border: 1px dashed #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      border: 1px dashed #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      border: 1px dashed #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px dashed #D9D9D9;\n    }\n  }\n  &.primaryOutline-button{\n    color: #1890FF;\n    background-color: transparent;\n    border: 1px solid #1890FF;\n    &:hover{\n      color: #40A9FF;\n      background-color: transparent;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      background-color: transparent;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      background-color: transparent;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: transparent;\n      border: 1px solid #D9D9D9;\n    }\n  }\n  &.dangerOutline-button{\n    color: #F5222D;\n    background-color: transparent;\n    border: 1px solid #F5222D;\n    &:hover{\n      color: #FF4D4F;\n      background-color: transparent;\n      border: 1px solid #FF4D4F;\n    }\n    &:focus{\n      color: #FF7875;\n      background-color: transparent;\n      border: 1px solid #FF7875;\n    }\n    &:active{\n      color: #CF1322;\n      background-color: transparent;\n      border: 1px solid #CF1322;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: transparent;\n      border: 1px solid #D9D9D9;\n    }\n  }\n}\n",
                    "styleUrl": "./button-icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 50
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 34
                    }
                }
            },
            "templateData": "<button type=\"button\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-info-circle\" viewBox=\"0 0 16 16\">\n    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path d=\"M8.93 6.588l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\n  </svg>\n</button>\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-e636a5938628eaf4fae941fc838914b7",
            "file": "src/app/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "labelText",
                    "defaultValue": "'Label'",
                    "line": 13
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent{\n  @Input()\n  label = false;\n\n  @Input()\n  labelText = 'Label';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\n  display: block;\n  position: relative;\n  padding-left: 20px;\n  margin-bottom: 12px;\n  cursor: pointer;\n  font-size: 18px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n    &:checked ~ .checkmark {\n      background-color: #2196F3;\n    }\n    &:checked ~ .checkmark:after {\n      display: block;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #BFBFBF;\n    }\n  }\n  .checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 16px;\n    width: 16px;\n    background-color: #fff;\n    border: 1px solid #D9D9D9;\n    &:disabled{\n      background-color: #BFBFBF;\n    }\n    &:invalid{\n      border: 1px solid #F5222D;\n    }\n    &:after {\n      content: \"\";\n      position: absolute;\n      display: none;\n    }\n    &:after {\n      left: 4px;\n      top: 0px;\n      width: 5px;\n      height: 11px;\n      border: solid white;\n      border-width: 0 2px 2px 0;\n      -webkit-transform: rotate(45deg);\n      -ms-transform: rotate(45deg);\n      transform: rotate(45deg);\n    }\n  }\n  &:hover {\n    input ~ .checkmark {\n      border: 2px solid #1890ff;\n    }\n  }\n}\n",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<label class=\"container\">\n  <span *ngIf=\"Label\">{{ labelText }}</span>\n  <input type=\"checkbox\">\n  <span class=\"checkmark\"></span>\n</label>\n"
        },
        {
            "name": "ChipsComponent",
            "id": "component-ChipsComponent-76cf953b7d557127e8e8273c897c77c2",
            "file": "src/app/chips/chips.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chips",
            "styleUrls": [
                "./chips.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chips.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "addable",
                    "defaultValue": "false",
                    "line": 55
                },
                {
                    "name": "count",
                    "defaultValue": "25",
                    "line": 49
                },
                {
                    "name": "counter",
                    "defaultValue": "false",
                    "line": 46
                },
                {
                    "name": "default",
                    "defaultValue": "false",
                    "line": 24
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 61
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "line": 36
                },
                {
                    "name": "iconic",
                    "defaultValue": "false",
                    "line": 43
                },
                {
                    "name": "label",
                    "defaultValue": "'Default Chip'",
                    "line": 20
                },
                {
                    "name": "outline",
                    "defaultValue": "false",
                    "line": 14
                },
                {
                    "name": "positive",
                    "defaultValue": "false",
                    "line": 33
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "line": 27
                },
                {
                    "name": "removable",
                    "defaultValue": "false",
                    "line": 58
                },
                {
                    "name": "rounded",
                    "defaultValue": "false",
                    "line": 11
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "line": 40
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "line": 17,
                    "type": "\"small\" | \"large\""
                },
                {
                    "name": "userImage",
                    "defaultValue": "false",
                    "line": 52
                },
                {
                    "name": "warning",
                    "defaultValue": "false",
                    "line": 30
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-chips',\n  templateUrl: './chips.component.html',\n  styleUrls: ['./chips.component.scss']\n})\n\nexport class ChipsComponent {\n  @Input()\n  rounded = false;\n\n  @Input()\n  outline = false;\n\n  @Input()\n  size: 'small' | 'large' = 'large';\n\n  @Input()\n  label = 'Default Chip';\n\n  //Colors\n  @Input()\n  default = false;\n\n  @Input()\n  primary = false;\n\n  @Input()\n  warning = false;\n\n  @Input()\n  positive = false;\n\n  @Input()\n  error = false;\n\n  //Types\n  @Input()\n  selected = false;\n\n  @Input()\n  iconic = false;\n\n  @Input()\n  counter = false;\n\n  @Input()\n  count = 25;\n\n  @Input()\n  userImage = false;\n\n  @Input()\n  addable = false;\n\n  @Input()\n  removable = false;\n\n  @Input()\n  disabled = false;\n\n  public get classes(): string[] {\n    let mode = '';\n    if(this.default){\n      mode = 'default'\n    }else if(this.primary){\n      mode = 'primary'\n    }else if(this.warning){\n      mode = 'warning'\n    }else if(this.positive){\n      mode = 'positive'\n    }else if(this.error){\n      mode = 'error'\n    }\n\n    if(this.rounded){\n      mode += ' rounded'\n    }\n    if(this.outline){\n      mode += ' outline'\n    }\n    if(this.disabled){\n      mode += ' disabled'\n    }\n    return [`${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".chip {\n  margin: 0px 4px;\n  display: inline-block;\n  border-radius: 4px;\n  &.default {\n    color: #595959;\n    background: #f5f5f5;\n    &.selected {\n      background: #595959;\n      color: #ffffff;\n    }\n    &.outline {\n      box-shadow: inset 1px 0px 0px #d9d9d9, inset 0px 1px 0px #d9d9d9,\n        inset -1px 0px 0px #d9d9d9, inset 0px -1px 0px #d9d9d9;\n    }\n    .counter{\n      background-color: #8C8C8C;\n    }\n    &.disabled{\n      background: #F5F5F5;\n      color: #BFBFBF;\n    }\n  }\n  &.primary {\n    color: #1890ff;\n    background: #e6f7ff;\n    &.selected {\n      background: #595959;\n      color: #ffffff;\n    }\n    &.outline {\n      box-shadow: inset 1px 0px 0px #91d5ff, inset 0px 1px 0px #91d5ff,\n        inset -1px 0px 0px #91d5ff, inset 0px -1px 0px #91d5ff;\n    }\n    .counter{\n      background-color: #40A9FF;\n    }\n    &.disabled{\n      background: #E6F7FF;\n      color: #91D5FF;\n      svg{\n        margin: -2px 4px;\n      }\n    }\n  }\n  &.positive {\n    color: #52c41a;\n    background: #d9f7be;\n    &.selected {\n      background: #52c41a;\n      color: #ffffff;\n    }\n    &.outline {\n      box-shadow: inset 1px 0px 0px #b7eb8f, inset 0px 1px 0px #b7eb8f,\n        inset -1px 0px 0px #b7eb8f, inset 0px -1px 0px #b7eb8f;\n    }\n    &.disabled{\n      background: #D9F7BE;\n      color: #B7EB8F;\n    }\n    .counter{\n      background-color: #73D13D;\n    }\n  }\n  &.warning {\n    color: #fa8c16;\n    background: #fefee6;\n    &.selected {\n      background: #fa8c16;\n      color: #ffffff;\n    }\n    &.outline {\n      box-shadow: inset 1px 0px 0px #fff08f, inset 0px 1px 0px #fff08f,\n        inset -1px 0px 0px #fff08f, inset 0px -1px 0px #fff08f;\n    }\n    &.disabled{\n      background: #FEFEE6;\n      color: #FFD591;\n    }\n    .counter{\n      background-color: #FFA940;\n    }\n  }\n  &.error {\n    color: #f5222d;\n    background: #fff1f0;\n    &.selected {\n      background: #F5222D;\n      color: #ffffff;\n    }\n    &.outline {\n      box-shadow: inset 1px 0px 0px #ffa39e, inset 0px 1px 0px #ffa39e,\n        inset -1px 0px 0px #ffa39e, inset 0px -1px 0px #ffa39e;\n    }\n    &.disabled{\n      background: #FFF1F0;\n      color: #FFA39E;\n    }\n    .counter{\n      background-color: #FF4D4F;\n    }\n  }\n\n  &.rounded {\n    border-radius: 100px;\n    img{\n      border-radius: 50%;\n    }\n  }\n  &.outline {\n    border-radius: 100px;\n  }\n  &.small {\n    padding: 3px 6px;\n    font-size: 12px;\n    .counter{\n      font-size: 8px;\n      padding: 1px 2px ;\n      margin: 0px 2px 0px 0px;\n      border-radius: 100px;\n      color: #fff;\n    }\n  }\n  &.large {\n    padding: 6px 12px;\n    font-size: 16px;\n    .counter{\n      font-size: 12px;\n      padding: 1px 3px ;\n      margin: 0px 4px 0px 0px;\n      border-radius: 100px;\n      color: #fff;\n    }\n    img{\n      margin: -3px 4px;\n    }\n  }\n  svg{\n    margin: -3px 4px;\n  }\n  img{\n    margin: 0 4px;\n  }\n  .remove{\n    cursor: pointer;\n  }\n}\n",
                    "styleUrl": "./chips.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 63
                    }
                }
            },
            "templateData": "<div class=\"chip\" [ngClass]=\"classes\">\n  <svg *ngIf='selected' width=\"16\" height=\"13\" viewBox=\"0 0 16 13\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M5.24927 9.82344L2.06844 6.6426C1.71094 6.2851 1.13344 6.2851 0.775937 6.6426C0.418438 7.0001 0.418438 7.5776 0.775937 7.9351L4.6076 11.7668C4.9651 12.1243 5.5426 12.1243 5.9001 11.7668L15.5984 2.06844C15.9559 1.71094 15.9559 1.13344 15.5984 0.775937C15.2409 0.418438 14.6634 0.418438 14.3059 0.775937L5.24927 9.82344Z\"/>\n  </svg>\n  <svg *ngIf='iconic' width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M9.08398 5.41732H10.9173V7.25065H9.08398V5.41732ZM10.0007 14.584C10.5048 14.584 10.9173 14.1715 10.9173 13.6673V10.0007C10.9173 9.49648 10.5048 9.08398 10.0007 9.08398C9.49648 9.08398 9.08398 9.49648 9.08398 10.0007V13.6673C9.08398 14.1715 9.49648 14.584 10.0007 14.584ZM10.0007 0.833984C4.94065 0.833984 0.833984 4.94065 0.833984 10.0007C0.833984 15.0607 4.94065 19.1673 10.0007 19.1673C15.0607 19.1673 19.1673 15.0607 19.1673 10.0007C19.1673 4.94065 15.0607 0.833984 10.0007 0.833984ZM10.0007 17.334C5.95815 17.334 2.66732 14.0432 2.66732 10.0007C2.66732 5.95815 5.95815 2.66732 10.0007 2.66732C14.0432 2.66732 17.334 5.95815 17.334 10.0007C17.334 14.0432 14.0432 17.334 10.0007 17.334Z\"/>\n  </svg>\n  <span class=\"counter\" *ngIf='counter'>{{count}}</span>\n\n  <img *ngIf='userImage' src=\"./../../assets/Small (24 px).png\" alt=\"\">\n\n  <svg *ngIf='addable' width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M12.5007 7.91732H7.91732V12.5007C7.91732 13.0048 7.50482 13.4173 7.00065 13.4173C6.49649 13.4173 6.08399 13.0048 6.08399 12.5007V7.91732H1.50065C0.996484 7.91732 0.583984 7.50482 0.583984 7.00065C0.583984 6.49649 0.996484 6.08399 1.50065 6.08399H6.08399V1.50065C6.08399 0.996484 6.49649 0.583984 7.00065 0.583984C7.50482 0.583984 7.91732 0.996484 7.91732 1.50065V6.08399H12.5007C13.0048 6.08399 13.4173 6.49649 13.4173 7.00065C13.4173 7.50482 13.0048 7.91732 12.5007 7.91732Z\"/>\n  </svg>\n\n  <svg *ngIf='disabled' width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M10.0007 0.833984C4.95898 0.833984 0.833984 4.95898 0.833984 10.0007C0.833984 15.0423 4.95898 19.1673 10.0007 19.1673C15.0423 19.1673 19.1673 15.0423 19.1673 10.0007C19.1673 4.95898 15.0423 0.833984 10.0007 0.833984ZM2.66732 10.0007C2.66732 5.96732 5.96732 2.66732 10.0007 2.66732C11.6507 2.66732 13.209 3.21732 14.4923 4.22565L4.22565 14.4923C3.21732 13.209 2.66732 11.6507 2.66732 10.0007ZM10.0007 17.334C8.35065 17.334 6.79232 16.784 5.50898 15.7757L15.7757 5.50898C16.784 6.79232 17.334 8.35065 17.334 10.0007C17.334 14.034 14.034 17.334 10.0007 17.334Z\"/>\n  </svg>\n\n  <span>{{label}}</span>\n\n  <svg class=\"remove\" *ngIf='removable' onclick=\"this.parentElement.style.display='none'\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M12.7752 1.23432C12.4177 0.876823 11.8402 0.876823 11.4827 1.23432L7.00016 5.70766L2.51766 1.22516C2.16016 0.867656 1.58266 0.867656 1.22516 1.22516C0.867656 1.58266 0.867656 2.16016 1.22516 2.51766L5.70766 7.00016L1.22516 11.4827C0.867656 11.8402 0.867656 12.4177 1.22516 12.7752C1.58266 13.1327 2.16016 13.1327 2.51766 12.7752L7.00016 8.29265L11.4827 12.7752C11.8402 13.1327 12.4177 13.1327 12.7752 12.7752C13.1327 12.4177 13.1327 11.8402 12.7752 11.4827L8.29265 7.00016L12.7752 2.51766C13.1235 2.16932 13.1235 1.58266 12.7752 1.23432Z\"/>\n  </svg>\n\n</div>\n"
        },
        {
            "name": "CounterComponent",
            "id": "component-CounterComponent-2ff1c7e2833d215bd56df716f6df34d2",
            "file": "src/app/counter/counter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-counter",
            "styleUrls": [
                "./counter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./counter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "added",
                    "defaultValue": "false",
                    "line": 25
                },
                {
                    "name": "counter",
                    "defaultValue": "0",
                    "line": 10
                },
                {
                    "name": "important",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "primaryInverted",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "removed",
                    "defaultValue": "false",
                    "line": 28
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "line": 13,
                    "type": "\"small\" | \"large\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n})\nexport class CounterComponent {\n  @Input()\n  counter = 0;\n\n  @Input()\n  size: 'small' | 'large' = 'large';\n\n  @Input()\n  primary = false;\n\n  @Input()\n  primaryInverted = false;\n\n  @Input()\n  important = false;\n\n  @Input()\n  added = false;\n\n  @Input()\n  removed = false;\n\n  public get classes(): string[] {\n    let mode = '';\n    if (this.primary) {\n      mode = 'primary';\n    } else if (this.primaryInverted) {\n      mode = 'primaryInverted';\n    } else if (this.important) {\n      mode = 'important';\n    } else if (this.added) {\n      mode = 'added';\n    } else if (this.removed) {\n      mode = 'removed';\n    }\n    return ['counter', this.size, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".counter{\n  border-radius: 200px;\n  &.primary{\n    background: #0050B3;\n    color: #FFFFFF;\n  }\n  &.primaryInverted{\n    background: #FAFAFA;\n    color: #0050B3;\n  }\n  &.important{\n    background: #CF1322;\n    color: #FFFFFF;\n  }\n  &.added{\n    background: #E6F7FF;\n    color: #0050B3;\n  }\n  &.removed{\n    background: #FFF1F0;\n    color: #A8071A;\n  }\n  &.large{\n    padding: 3px 7px;\n    font-size: 14px;\n  }\n  &.small{\n    padding: 0px 5px;\n    font-size: 12px;\n  }\n}\n",
                    "styleUrl": "./counter.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 30
                    }
                }
            },
            "templateData": "<span [ngClass]='classes'>\n  {{counter}}\n</span>\n"
        },
        {
            "name": "DateComponent",
            "id": "component-DateComponent-67549915e80b5d46ee7f0aee57168164",
            "file": "src/app/date/date.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-date",
            "styleUrls": [
                "./date.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "false",
                    "line": 11
                },
                {
                    "name": "labelText",
                    "defaultValue": "'Label'",
                    "line": 14
                },
                {
                    "name": "message",
                    "defaultValue": "false",
                    "line": 17
                },
                {
                    "name": "messageText",
                    "defaultValue": "'Input caption message'",
                    "line": 21
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 24,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.scss']\n})\n\nexport class DateComponent {\n  @Input()\n  label = false;\n\n  @Input()\n  labelText = 'Label';\n\n  @Input()\n  message = false;\n\n\n  @Input()\n  messageText = 'Input caption message';\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  \n  public get classes(): string[] {\n\n    return [this.size]\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".hidden {\n  display: none;\n}\n.visibility {\n  display: block;\n}\nlabel {\n  color: #262626;\n  margin: 2px;\n  font-size: 14px;\n  line-height: 22px;\n  display: block;\n}\np {\n  font-size: 14px;\n  color: #8c8c8c;\n  margin: 2px 0px;\n  &.valid {\n    color: #52c41a;\n  }\n  &.invalid {\n    color: #f5222d;\n  }\n}\n.date {\n  input {\n    background: #ffffff;\n    border: 1px solid #bfbfbf;\n    box-sizing: border-box;\n    border-radius: 4px;\n    color: #595959;\n    &::placeholder {\n      color: #bfbfbf;\n      font-size: 16px;\n    }\n    &:hover {\n      box-shadow: inset 1px 0px 0px #40a9ff, inset 0px 1px 0px #40a9ff,\n        inset -1px 0px 0px #40a9ff, inset 0px -1px 0px #40a9ff;\n    }\n    &:invalid {\n      box-shadow: inset 1px 0px 0px #f5222d, inset 0px 1px 0px #f5222d,\n        inset -1px 0px 0px #f5222d, inset 0px -1px 0px #f5222d;\n    }\n    &:disabled{\n      background: #F5F5F5;\n    }\n    &:focus {\n      outline: none;\n      box-shadow: -1px -1px 3px rgba(64, 169, 255, 0.25),\n        1px 1px 3px rgba(64, 169, 255, 0.25), inset 1px 0px 0px #40a9ff,\n        inset 0px 1px 0px #40a9ff, inset -1px 0px 0px #40a9ff,\n        inset 0px -1px 0px #40a9ff;\n    }\n    &.small {\n      font-size: 14px;\n      padding: 5px 8px;\n    }\n    &.medium {\n      font-size: 14px;\n      padding: 9px 12px;\n    }\n    &.large {\n      font-size: 16px;\n      padding: 12px 14px;\n    }\n  }\n}\ninput[type=\"date\"]:not(.has-value):before{\n  color: #bfbfbf;\n  content: attr(placeholder);\n}\n\n\n",
                    "styleUrl": "./date.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 27
                    }
                }
            },
            "templateData": "<div class=\"date\">\n  <label *ngIf=\"label\">{{ labelText }}</label>\n  <input [ngClass]=\"classes\" type=\"date\" placeholder=\"Select Date:  \" />\n  <p *ngIf=\"message\">{{messageText}}</p>\n</div>\n\n"
        },
        {
            "name": "DropdownButtonComponent",
            "id": "component-DropdownButtonComponent-f465cd671d23bf4e7b006c2f486161c5",
            "file": "src/app/dropdown-button/dropdown-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dropdown-button",
            "styleUrls": [
                "./dropdown-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "danger",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "dangerOutline",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "dashed",
                    "defaultValue": "false",
                    "line": 25
                },
                {
                    "name": "label",
                    "defaultValue": "'Label'",
                    "line": 34
                },
                {
                    "name": "outline",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "primaryOutline",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 28,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dropdown-button',\n  templateUrl: './dropdown-button.component.html',\n  styleUrls: ['./dropdown-button.component.scss']\n})\nexport class DropdownButtonComponent implements OnInit {\n  @Input()\n  primary = false;\n\n  @Input()\n  primaryOutline = false;\n\n  @Input()\n  danger = false;\n\n  @Input()\n  dangerOutline  = false;\n\n  @Input()\n  outline = false;\n\n  @Input()\n  dashed = false;\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  @Input()\n  backgroundColor?: string;\n\n  @Input()\n  label = 'Label';\n\n  public get classes(): string[]{\n    let mode = '';\n    if(this.primary){\n      mode = 'primary-button';\n    }else if(this.primaryOutline){\n      mode = 'primaryOutline-button';\n    }else if(this.danger){\n      mode = 'danger-button';\n    }else if(this.dangerOutline){\n      mode = 'dangerOutline-button';\n    }else if(this.outline){\n      mode = 'outline-button';\n    }else if(this.dashed){\n      mode = 'dashed-button';\n    }\n    return ['button', `button-${this.size}`, mode ]\n  }\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".dropdown {\n  position: relative;\n  display: inline-block;\n  .button {\n    cursor: pointer;\n    border: 0;\n    outline: none;\n    margin: 0 5px;\n    font-size: 18px;\n    box-shadow: 0px 2px 4px #bae7ff, 0px 4px 8px #e6f7ff;\n\n    svg{\n      margin-left: 8px;\n    }\n    &.button-small {\n      padding: 5px 5px;\n      border-radius: 4px;\n      border-radius: 4px;\n    }\n    &.button-medium {\n      padding: 8px 12px;\n      border-radius: 8px;\n    }\n    &.button-large {\n      padding: 12px 16px;\n      border-radius: 12px;\n    }\n    &.danger-button {\n      color: white;\n      background-color: #f5222d;\n      &:hover {\n        background-color: #ff4d4f;\n        border: 1px solid #ff4d4f;\n      }\n      &:focus {\n        background-color: #ff7875;\n        border: 1px solid #ff7875;\n      }\n      &:active {\n        background-color: #40a9ff;\n        border: 1px solid #40a9ff;\n      }\n      &:disabled {\n        color: #bfbfbf;\n        background-color: #f5f5f5;\n        border: 1px solid #d9d9d9;\n      }\n      span{\n        padding-right: 8px;\n        border-right: 1px solid #fff;\n      }\n    }\n    &.primary-button {\n      color: white;\n      background-color: #1890ff;\n      &:hover {\n        background-color: #40a9ff;\n        border: 1px solid #40a9ff;\n      }\n      &:focus {\n        background-color: #69c0ff;\n        border: 1px solid #69c0ff;\n      }\n      &:active {\n        background-color: #69c0ff;\n        border: 1px solid #69c0ff;\n      }\n      &:disabled {\n        color: #bfbfbf;\n        background-color: #f5f5f5;\n        border: 1px solid #d9d9d9;\n      }\n      span{\n        padding-right: 8px;\n        border-right: 1px solid #fff;\n      }\n    }\n    &.outline-button {\n      color: #595959;\n      background-color: transparent;\n      border: 1px solid #595959;\n      &:hover {\n        color: #40a9ff;\n        border: 1px solid #40a9ff;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #40a9ff;\n        }\n      }\n      &:focus {\n        color: #69c0ff;\n        border: 1px solid #69c0ff;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #69c0ff;\n        }\n      }\n      &:active {\n        color: #69c0ff;\n        border: 1px solid #69c0ff;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #69c0ff;\n        }\n      }\n      &:disabled {\n        color: #bfbfbf;\n        background-color: #f5f5f5;\n        border: 1px solid #d9d9d9;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #bfbfbf;\n        }\n      }\n      span{\n        padding-right: 8px;\n        border-right: 1px solid #595959;\n      }\n    }\n    &.dashed-button {\n      color: #595959;\n      background-color: transparent;\n      border: 1px dashed #595959;\n      span{\n        padding-right: 8px;\n        border-right: 1px solid #595959;\n      }\n      &:hover {\n        color: #40a9ff;\n        border: 1px dashed #40a9ff;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #40a9ff;\n        }\n      }\n      &:focus {\n        color: #69c0ff;\n        border: 1px dashed #69c0ff;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #69c0ff;\n        }\n      }\n      &:active {\n        color: #69c0ff;\n        border: 1px dashed #69c0ff;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #69c0ff;\n        }\n      }\n      &:disabled {\n        color: #bfbfbf;\n        background-color: #f5f5f5;\n        border: 1px dashed #d9d9d9;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #bfbfbf;\n        }\n      }\n    }\n    &.primaryOutline-button {\n      color: #1890ff;\n      background-color: transparent;\n      border: 1px solid #1890ff;\n      span{\n        padding-right: 8px;\n        border-right: 1px solid #1890ff;\n      }\n      &:hover {\n        color: #40a9ff;\n        background-color: transparent;\n        border: 1px solid #40a9ff;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #40a9ff;\n        }\n      }\n      &:focus {\n        color: #69c0ff;\n        background-color: transparent;\n        border: 1px solid #69c0ff;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #69c0ff;\n        }\n      }\n      &:active {\n        color: #69c0ff;\n        background-color: transparent;\n        border: 1px solid #69c0ff;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #69c0ff;\n        }\n      }\n      &:disabled {\n        color: #bfbfbf;\n        background-color: transparent;\n        border: 1px solid #d9d9d9;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #bfbfbf;\n        }\n      }\n    }\n    &.dangerOutline-button {\n      color: #f5222d;\n      background-color: transparent;\n      border: 1px solid #f5222d;\n      span{\n        padding-right: 8px;\n        border-right: 1px solid #f5222d;\n      }\n      &:hover {\n        color: #ff4d4f;\n        background-color: transparent;\n        border: 1px solid #ff4d4f;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #ff4d4f;\n        }\n      }\n      &:focus {\n        color: #ff7875;\n        background-color: transparent;\n        border: 1px solid #ff7875;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #ff7875;\n        }\n      }\n      &:active {\n        color: #cf1322;\n        background-color: transparent;\n        border: 1px solid #cf1322;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #cf1322;\n        }\n      }\n      &:disabled {\n        color: #bfbfbf;\n        background-color: transparent;\n        border: 1px solid #d9d9d9;\n        span{\n          padding-right: 8px;\n          border-right: 1px solid #bfbfbf;\n        }\n      }\n    }\n  }\n  .dropdown-content {\n    display: none;\n    position: absolute;\n    background-color: #f9f9f9;\n    min-width: 120px;\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n    z-index: 1;\n    a {\n      color: black;\n      padding: 12px 16px;\n      text-decoration: none;\n      display: block;\n      &:hover {\n        background-color: #f1f1f1;\n      }\n    }\n  }\n  &:hover {\n    .dropdown-content {\n      display: block;\n    }\n  }\n}\n",
                    "styleUrl": "./dropdown-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 52
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 36
                    }
                }
            },
            "templateData": "<div class=\"dropdown\">\n  <button type=\"button\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n    <span>{{label}}</span>\n    <svg width=\"12\" height=\"10\" viewBox=\"0 0 12 8\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M10.2075 0.875L6 5.07333L1.7925 0.875L0.5 2.1675L6 7.6675L11.5 2.1675L10.2075 0.875Z\" />\n    </svg>\n  </button>\n  <div class=\"dropdown-content\">\n    <a href=\"#\">Link 1</a>\n    <a href=\"#\">Link 2</a>\n    <a href=\"#\">Link 3</a>\n  </div>\n</div>\n"
        },
        {
            "name": "ExtendedButtonComponent",
            "id": "component-ExtendedButtonComponent-60b3d336fabea2678684ab05c1783e83",
            "file": "src/app/extended-button/extended-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-extended-button",
            "styleUrls": [
                "./extended-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./extended-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "danger",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "dangerOutline",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "dashed",
                    "defaultValue": "false",
                    "line": 25
                },
                {
                    "name": "label",
                    "defaultValue": "'Label'",
                    "line": 34
                },
                {
                    "name": "outline",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "primaryOutline",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 28,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-extended-button',\n  templateUrl: './extended-button.component.html',\n  styleUrls: ['./extended-button.component.scss']\n})\nexport class ExtendedButtonComponent implements OnInit {\n  @Input()\n  primary = false;\n\n  @Input()\n  primaryOutline = false;\n\n  @Input()\n  danger = false;\n\n  @Input()\n  dangerOutline  = false;\n\n  @Input()\n  outline = false;\n\n  @Input()\n  dashed = false;\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  @Input()\n  backgroundColor?: string;\n\n  @Input()\n  label = 'Label';\n\n  public get classes(): string[]{\n    let mode = '';\n    if(this.primary){\n      mode = 'primary-button';\n    }else if(this.primaryOutline){\n      mode = 'primaryOutline-button';\n    }else if(this.danger){\n      mode = 'danger-button';\n    }else if(this.dangerOutline){\n      mode = 'dangerOutline-button';\n    }else if(this.outline){\n      mode = 'outline-button';\n    }else if(this.dashed){\n      mode = 'dashed-button';\n    }\n    return ['button', `button-${this.size}`, mode ]\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".button {\n  cursor: pointer;\n  border: 0;\n  outline: none;\n  margin: 0 5px;\n  font-size: 18px;\n  border-radius: 100px;\n  box-shadow: 0px 2px 4px #BAE7FF, 0px 4px 8px #E6F7FF;\n  &.button-small {\n    padding: 5px 5px;\n  }\n  &.button-medium {\n    padding: 8px 12px;\n  }\n  &.button-large {\n    padding: 12px 16px;\n  }\n  &.danger-button {\n    color: white;\n    background-color: #F5222D;\n    &:hover{\n      background-color: #FF4D4F;\n      border: 1px solid #FF4D4F;\n    }\n    &:focus{\n      background-color: #FF7875;\n      border: 1px solid #FF7875;\n    }\n    &:active{\n      background-color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n    svg{\n      color: white;\n    }\n  }\n  &.primary-button {\n    color: white;\n    background-color: #1890FF;\n    &:hover{\n      background-color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      background-color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      background-color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n    i{\n      color: white;\n    }\n  }\n  &.outline-button {\n    color: #595959;\n    background-color: transparent;\n    border: 1px solid #595959;\n    &:hover{\n      color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n    i{\n      color: #595959;\n    }\n  }\n  &.dashed-button {\n    color: #595959;\n    background-color: transparent;\n    border: 1px dashed #595959;\n    &:hover{\n      color: #40A9FF;\n      border: 1px dashed #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      border: 1px dashed #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      border: 1px dashed #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px dashed #D9D9D9;\n    }\n  }\n  &.primaryOutline-button{\n    color: #1890FF;\n    background-color: transparent;\n    border: 1px solid #1890FF;\n    &:hover{\n      color: #40A9FF;\n      background-color: transparent;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      background-color: transparent;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      background-color: transparent;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: transparent;\n      border: 1px solid #D9D9D9;\n    }\n  }\n  &.dangerOutline-button{\n    color: #F5222D;\n    background-color: transparent;\n    border: 1px solid #F5222D;\n    &:hover{\n      color: #FF4D4F;\n      background-color: transparent;\n      border: 1px solid #FF4D4F;\n    }\n    &:focus{\n      color: #FF7875;\n      background-color: transparent;\n      border: 1px solid #FF7875;\n    }\n    &:active{\n      color: #CF1322;\n      background-color: transparent;\n      border: 1px solid #CF1322;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: transparent;\n      border: 1px solid #D9D9D9;\n    }\n  }\n}\n\n",
                    "styleUrl": "./extended-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 52
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 36
                    }
                }
            },
            "templateData": "<button type=\"button\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n  <!-- <i class=\"fas fa-info-circle\"></i> -->\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" fill=\"currentColor\" class=\"bi bi-info-circle\" viewBox=\"0 0 16 16\">\n    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path d=\"M8.93 6.588l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\n  </svg>\n  {{ label }}\n</button>\n"
        },
        {
            "name": "FacialRateComponent",
            "id": "component-FacialRateComponent-6a50b01020a787a11d71d719c9b7e234",
            "file": "src/app/facial-rate/facial-rate.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-facial-rate",
            "styleUrls": [
                "./facial-rate.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./facial-rate.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-facial-rate',\n  templateUrl: './facial-rate.component.html',\n  styleUrls: ['./facial-rate.component.scss']\n})\nexport class FacialRateComponent{\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".rating {\n  input{\n    display: none;\n    &:hover + label,\n    &:checked + label{\n      filter: grayscale(0);\n      opacity: 1;\n      width: 160px;\n    }\n  }\n  label{\n    position: relative;\n    margin: 2px;\n    width: 0;\n    height: 128px;\n    cursor: pointer;\n    transition: 0.5s;\n    filter: grayscale(1);\n  }\n  &:hover{\n    label{\n      width: 160px;\n    }\n  }\n}\n",
                    "styleUrl": "./facial-rate.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"rating\">\n  <input type=\"radio\" name=\"star\" id=\"star1\" />\n  <label for=\"star1\">\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"16\" cy=\"16\" r=\"15\" fill=\"white\" stroke=\"#FF7875\" stroke-width=\"2\" />\n      <ellipse cx=\"10.3511\" cy=\"12.2359\" rx=\"1.88235\" ry=\"1.88235\" fill=\"#FF7875\" />\n      <ellipse cx=\"21.6441\" cy=\"12.2359\" rx=\"1.88235\" ry=\"1.88235\" fill=\"#FF7875\" />\n      <path\n        d=\"M10.6751 24.4707C10.4987 24.4707 10.3516 24.3334 10.3516 24.157C10.3516 21.2115 12.8798 18.8236 15.9986 18.8236C19.1174 18.8236 21.6457 21.2115 21.6457 24.157C21.6457 24.3334 21.4986 24.4707 21.3221 24.4707H10.6751Z\"\n        fill=\"#FF7875\" />\n    </svg>\n  </label>\n\n  <input type=\"radio\" name=\"star\" id=\"star2\" />\n  <label for=\"star2\">\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"16\" cy=\"16\" r=\"15\" fill=\"white\" stroke=\"#FFC069\" stroke-width=\"2\" />\n      <ellipse cx=\"10.3511\" cy=\"12.2359\" rx=\"1.88235\" ry=\"1.88235\" fill=\"#FFC069\" />\n      <ellipse cx=\"21.6441\" cy=\"12.2359\" rx=\"1.88235\" ry=\"1.88235\" fill=\"#FFC069\" />\n      <path\n        d=\"M11.3359 23.9318C11.7761 22.9819 13.354 21.082 16.1438 21.082C18.9335 21.082 20.3188 22.9819 20.6627 23.9318\"\n        stroke=\"#FFC069\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </svg>\n  </label>\n\n  <input type=\"radio\" name=\"star\" id=\"star3\" />\n  <label for=\"star3\">\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"16\" cy=\"16\" r=\"15\" fill=\"white\" stroke=\"#FFD666\" stroke-width=\"2\" />\n      <ellipse cx=\"10.3511\" cy=\"12.2359\" rx=\"1.88235\" ry=\"1.88235\" fill=\"#FFD666\" />\n      <ellipse cx=\"20.7027\" cy=\"12.2359\" rx=\"1.88235\" ry=\"1.88235\" fill=\"#FFD666\" />\n      <path d=\"M10.1172 20.4551L19.3012 23.3509\" stroke=\"#FFD666\" stroke-width=\"2\" stroke-linecap=\"round\"\n        stroke-linejoin=\"round\" />\n    </svg>\n  </label>\n\n  <input type=\"radio\" name=\"star\" id=\"star4\" />\n  <label for=\"star4\">\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"16\" cy=\"16\" r=\"15\" fill=\"white\" stroke=\"#69C0FF\" stroke-width=\"2\" />\n      <ellipse cx=\"10.3511\" cy=\"12.2359\" rx=\"1.88235\" ry=\"1.88235\" fill=\"#69C0FF\" />\n      <ellipse cx=\"21.6441\" cy=\"12.2359\" rx=\"1.88235\" ry=\"1.88235\" fill=\"#69C0FF\" />\n      <path\n        d=\"M11.3359 21.0819C11.7761 22.0318 13.354 23.9316 16.1438 23.9316C18.9335 23.9316 20.3188 22.0318 20.6627 21.0819\"\n        stroke=\"#69C0FF\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </svg>\n  </label>\n\n  <input type=\"radio\" name=\"star\" id=\"star5\" />\n  <label for=\"star5\">\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"16\" cy=\"16\" r=\"15\" fill=\"white\" stroke=\"#95DE64\" stroke-width=\"2\" />\n      <ellipse cx=\"10.3511\" cy=\"12.2359\" rx=\"1.88235\" ry=\"1.88235\" fill=\"#95DE64\" />\n      <ellipse cx=\"21.6441\" cy=\"12.2359\" rx=\"1.88235\" ry=\"1.88235\" fill=\"#95DE64\" />\n      <path\n        d=\"M10.6751 18.8242C10.4987 18.8242 10.3516 18.9615 10.3516 19.1379C10.3516 22.0835 12.8798 24.4713 15.9986 24.4713C19.1174 24.4713 21.6457 22.0835 21.6457 19.1379C21.6457 18.9615 21.4986 18.8242 21.3221 18.8242H10.6751Z\"\n        fill=\"#95DE64\" />\n    </svg>\n  </label>\n</div>\n"
        },
        {
            "name": "GlobalBannersAlertComponent",
            "id": "component-GlobalBannersAlertComponent-3b227d34a17aef7c26c811aa36c85598",
            "file": "src/app/global-banners-alert/global-banners-alert.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-global-banners-alert",
            "styleUrls": [
                "./global-banners-alert.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./global-banners-alert.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "change",
                    "defaultValue": "false",
                    "line": 38
                },
                {
                    "name": "closeIcon",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "default",
                    "defaultValue": "false",
                    "line": 23
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "line": 32
                },
                {
                    "name": "icon",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "info",
                    "defaultValue": "false",
                    "line": 26
                },
                {
                    "name": "label",
                    "defaultValue": "'Basic Alret'",
                    "line": 10
                },
                {
                    "name": "msgCaption",
                    "defaultValue": "'Basic Alert Content goes here and here and here and here and here and here and here and here'",
                    "line": 13
                },
                {
                    "name": "success",
                    "defaultValue": "false",
                    "line": 35
                },
                {
                    "name": "warning",
                    "defaultValue": "false",
                    "line": 29
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-global-banners-alert',\n  templateUrl: './global-banners-alert.component.html',\n  styleUrls: ['./global-banners-alert.component.scss']\n})\nexport class GlobalBannersAlertComponent {\n  @Input()\n  label = 'Basic Alret';\n\n  @Input()\n  msgCaption = 'Basic Alert Content goes here and here and here and here and here and here and here and here'\n\n  @Input()\n  closeIcon = false;\n\n  @Input()\n  icon = false;\n  \n  //Icons Type\n  @Input()\n  default = false;\n\n  @Input()\n  info = false;\n\n  @Input()\n  warning = false;\n\n  @Input()\n  error = false;\n\n  @Input()\n  success = false;\n\n  @Input()\n  change = false;\n\n  public get classes(): string[] {\n    let mode = '';\n    if (this.info) {\n      mode += ' info';\n    } else if (this.warning) {\n      mode += ' warning';\n    } else if (this.error) {\n      mode += ' error';\n    } else if (this.success) {\n      mode += ' success';\n    } else if (this.change) {\n      mode += ' change';\n    }\n    return [mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".banner-alert {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 16px;\n  background: #f5f5f5;\n  box-shadow: inset 1px 0px 0px #d9d9d9, inset 0px 1px 0px #d9d9d9,\n    inset -1px 0px 0px #d9d9d9, inset 0px -1px 0px #d9d9d9;\n  border-radius: 4px;\n  &.warning {\n    color: #faad14;\n    background: #fefae6;\n    box-shadow: inset 1px 0px 0px #fff08f, inset 0px 1px 0px #fff08f,\n      inset -1px 0px 0px #fff08f, inset 0px -1px 0px #fff08f;\n  }\n  &.error {\n    color: #f5222d;\n    background: #fff1f0;\n    box-shadow: inset 1px 0px 0px #ffa39e, inset 0px 1px 0px #ffa39e,\n      inset -1px 0px 0px #ffa39e, inset 0px -1px 0px #ffa39e;\n  }\n  &.success {\n    color: #52c41a;\n    background: #f6ffed;\n    box-shadow: inset 1px 0px 0px #b7eb8f, inset 0px 1px 0px #b7eb8f,\n      inset -1px 0px 0px #b7eb8f, inset 0px -1px 0px #b7eb8f;\n  }\n  &.change {\n    color: #722ed1;\n    background: #f3e4ff;\n    box-shadow: inset 1px 0px 0px #d9d9d9, inset 0px 1px 0px #d9d9d9,\n      inset -1px 0px 0px #d9d9d9, inset 0px -1px 0px #d9d9d9;\n  }\n  &.info {\n    color: #1890ff;\n    background: #e6f7ff;\n    box-shadow: inset 1px 0px 0px #d9d9d9, inset 0px 1px 0px #d9d9d9,\n      inset -1px 0px 0px #d9d9d9, inset 0px -1px 0px #d9d9d9;\n  }\n  .banner-icon{\n    display: flex;\n  flex-direction: row;\n    .body {\n      color: #595959;\n      margin: 0px 15px;\n      h3 {\n        font-size: 18px;\n        margin: 0;\n      }\n      p {\n        font-size: 14px;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./global-banners-alert.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 40
                    }
                }
            },
            "templateData": "<div class=\"banner-alert\" [ngClass]='classes'>\n  <div class=\"banner-icon\">\n    <svg *ngIf='icon && warning' width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M9.91699 14.2493H12.0837V16.416H9.91699V14.2493ZM9.91699 5.58268H12.0837V12.0827H9.91699V5.58268ZM10.9895 0.166016C5.00949 0.166016 0.166992 5.01935 0.166992 10.9993C0.166992 16.9793 5.00949 21.8327 10.9895 21.8327C16.9803 21.8327 21.8337 16.9793 21.8337 10.9993C21.8337 5.01935 16.9803 0.166016 10.9895 0.166016ZM11.0003 19.666C6.21199 19.666 2.33366 15.7877 2.33366 10.9993C2.33366 6.21102 6.21199 2.33268 11.0003 2.33268C15.7887 2.33268 19.667 6.21102 19.667 10.9993C19.667 15.7877 15.7887 19.666 11.0003 19.666Z\"\n        fill=\"#FAAD14\" />\n    </svg>\n    <svg *ngIf='icon && error' width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M11.0003 0.166016C5.00949 0.166016 0.166992 5.00852 0.166992 10.9993C0.166992 16.9902 5.00949 21.8327 11.0003 21.8327C16.9912 21.8327 21.8337 16.9902 21.8337 10.9993C21.8337 5.00852 16.9912 0.166016 11.0003 0.166016ZM11.0003 19.666C6.22283 19.666 2.33366 15.7768 2.33366 10.9993C2.33366 6.22185 6.22283 2.33268 11.0003 2.33268C15.7778 2.33268 19.667 6.22185 19.667 10.9993C19.667 15.7768 15.7778 19.666 11.0003 19.666ZM14.8895 5.58268L11.0003 9.47185L7.11116 5.58268L5.58366 7.11018L9.47283 10.9993L5.58366 14.8885L7.11116 16.416L11.0003 12.5268L14.8895 16.416L16.417 14.8885L12.5278 10.9993L16.417 7.11018L14.8895 5.58268Z\"\n        fill=\"#F5222D\" />\n    </svg>\n    <svg *ngIf='icon && success' width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M11.0003 0.166016C5.02033 0.166016 0.166992 5.01935 0.166992 10.9993C0.166992 16.9793 5.02033 21.8327 11.0003 21.8327C16.9803 21.8327 21.8337 16.9793 21.8337 10.9993C21.8337 5.01935 16.9803 0.166016 11.0003 0.166016ZM11.0003 19.666C6.22283 19.666 2.33366 15.7768 2.33366 10.9993C2.33366 6.22185 6.22283 2.33268 11.0003 2.33268C15.7778 2.33268 19.667 6.22185 19.667 10.9993C19.667 15.7768 15.7778 19.666 11.0003 19.666ZM15.9728 6.21102L8.83366 13.3502L6.02783 10.5552L4.50033 12.0827L8.83366 16.416L17.5003 7.74935L15.9728 6.21102Z\"\n        fill=\"#52C41A\" />\n    </svg>\n    <svg *ngIf='icon && change' width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M9.91699 17.4993H12.0837V15.3327H9.91699V17.4993ZM11.0003 0.166016C5.02033 0.166016 0.166992 5.01935 0.166992 10.9993C0.166992 16.9793 5.02033 21.8327 11.0003 21.8327C16.9803 21.8327 21.8337 16.9793 21.8337 10.9993C21.8337 5.01935 16.9803 0.166016 11.0003 0.166016ZM11.0003 19.666C6.22283 19.666 2.33366 15.7768 2.33366 10.9993C2.33366 6.22185 6.22283 2.33268 11.0003 2.33268C15.7778 2.33268 19.667 6.22185 19.667 10.9993C19.667 15.7768 15.7778 19.666 11.0003 19.666ZM11.0003 4.49935C8.60616 4.49935 6.66699 6.43852 6.66699 8.83268H8.83366C8.83366 7.64102 9.80866 6.66602 11.0003 6.66602C12.192 6.66602 13.167 7.64102 13.167 8.83268C13.167 10.9993 9.91699 10.7285 9.91699 14.2493H12.0837C12.0837 11.8118 15.3337 11.541 15.3337 8.83268C15.3337 6.43852 13.3945 4.49935 11.0003 4.49935Z\"\n        fill=\"#722ED1\" />\n    </svg>\n    <svg *ngIf='icon && info' width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M9.91699 5.58268H12.0837V7.74935H9.91699V5.58268ZM9.91699 9.91602H12.0837V16.416H9.91699V9.91602ZM11.0003 0.166016C5.02033 0.166016 0.166992 5.01935 0.166992 10.9993C0.166992 16.9793 5.02033 21.8327 11.0003 21.8327C16.9803 21.8327 21.8337 16.9793 21.8337 10.9993C21.8337 5.01935 16.9803 0.166016 11.0003 0.166016ZM11.0003 19.666C6.22283 19.666 2.33366 15.7768 2.33366 10.9993C2.33366 6.22185 6.22283 2.33268 11.0003 2.33268C15.7778 2.33268 19.667 6.22185 19.667 10.9993C19.667 15.7768 15.7778 19.666 11.0003 19.666Z\"\n        fill=\"#1890FF\" />\n    </svg>\n    <div class=\"body\">\n      <h3>{{ label }}</h3>\n      <p> {{ msgCaption }} </p>\n    </div>\n  </div>\n  <div class=\"close-icon\">\n    <svg *ngIf='closeIcon' onclick=\"this.parentElement.parentElement.style.display='none';\" width=\"14\" height=\"14\"\n      viewBox=\"0 0 14 14\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" />\n    </svg>\n  </div>\n</div>\n"
        },
        {
            "name": "GlobalBannersComponent",
            "id": "component-GlobalBannersComponent-bf8102c57bb6479ff71ec3c1c6af92a3",
            "file": "src/app/global-banners/global-banners.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-global-banners",
            "styleUrls": [
                "./global-banners.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./global-banners.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "default",
                    "defaultValue": "false",
                    "line": 15
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "line": 24
                },
                {
                    "name": "info",
                    "defaultValue": "false",
                    "line": 18
                },
                {
                    "name": "label",
                    "defaultValue": "'Global Banners'",
                    "line": 11
                },
                {
                    "name": "success",
                    "defaultValue": "false",
                    "line": 27
                },
                {
                    "name": "warning",
                    "defaultValue": "false",
                    "line": 21
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-global-banners',\n  templateUrl: './global-banners.component.html',\n  styleUrls: ['./global-banners.component.scss']\n})\n\nexport class GlobalBannersComponent {\n  @Input()\n  label = 'Global Banners';\n\n  //Icons Type\n  @Input()\n  default = false;\n\n  @Input()\n  info = false;\n\n  @Input()\n  warning = false;\n\n  @Input()\n  error = false;\n\n  @Input()\n  success = false;\n\n  public get classes(): string[] {\n    let mode = '';\n    if(this.info){\n      mode += ' info';\n    }else if(this.warning){\n      mode += ' warning';\n    }else if(this.error){\n      mode += ' error';\n    }else if(this.success){\n      mode += ' success';\n    }\n    return [mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".banner {\n  font-size: 18px;\n  color: #FFFFFF;\n  background: #BFBFBF;\n  margin: 0px 8px;\n  text-align: center;\n  padding: 20px;\n  &.success{\n    background: #52C41A;\n  }\n  &.info{\n    background: #1890FF;\n  }\n  &.warning{\n    background: #FAAD14;\n  }\n  &.error{\n    background: #F5222D;\n  }\n  svg{\n    margin: -3px 5px;\n  }\n}\n",
                    "styleUrl": "./global-banners.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 29
                    }
                }
            },
            "templateData": "<p class=\"banner\" [ngClass]='classes'>\n  <svg *ngIf='default' width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM11 15H9V9H11V15ZM11 7H9V5H11V7Z\"\n      fill=\"white\" />\n  </svg>\n  <svg *ngIf='success' width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM8 15L3 10L4.41 8.59L8 12.17L15.59 4.58L17 6L8 15Z\"\n      fill=\"white\" />\n  </svg>\n  <svg *ngIf='info' width=\"21\" height=\"20\" viewBox=\"0 0 21 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M10.5 0C4.98 0 0.5 4.48 0.5 10C0.5 15.52 4.98 20 10.5 20C16.02 20 20.5 15.52 20.5 10C20.5 4.48 16.02 0 10.5 0ZM11.5 15H9.5V9H11.5V15ZM11.5 7H9.5V5H11.5V7Z\"\n      fill=\"white\" />\n  </svg>\n  <svg *ngIf='warning' width=\"22\" height=\"19\" viewBox=\"0 0 22 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M1.73041 19.0005H20.2604C21.0304 19.0005 21.5104 18.1705 21.1304 17.5005L11.8604 1.50055C11.4704 0.830547 10.5104 0.830547 10.1304 1.50055L0.860411 17.5005C0.480411 18.1705 0.960411 19.0005 1.73041 19.0005ZM12.0004 16.0005H10.0004V14.0005H12.0004V16.0005ZM11.0004 12.0005C10.4504 12.0005 10.0004 11.5505 10.0004 11.0005V9.00055C10.0004 8.45055 10.4504 8.00055 11.0004 8.00055C11.5504 8.00055 12.0004 8.45055 12.0004 9.00055V11.0005C12.0004 11.5505 11.5504 12.0005 11.0004 12.0005Z\"\n      fill=\"white\" />\n  </svg>\n  <svg *ngIf='error' width=\"21\" height=\"20\" viewBox=\"0 0 21 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M10.5 0C4.97 0 0.5 4.47 0.5 10C0.5 15.53 4.97 20 10.5 20C16.03 20 20.5 15.53 20.5 10C20.5 4.47 16.03 0 10.5 0ZM15.5 13.59L14.09 15L10.5 11.41L6.91 15L5.5 13.59L9.09 10L5.5 6.41L6.91 5L10.5 8.59L14.09 5L15.5 6.41L11.91 10L15.5 13.59Z\"\n      fill=\"white\" />\n  </svg>\n  {{label}}\n</p>\n"
        },
        {
            "name": "GroupPaginationComponent",
            "id": "component-GroupPaginationComponent-ecb645fc74ec551099b183f446f05389",
            "file": "src/app/group-pagination/group-pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-group-pagination",
            "styleUrls": [
                "./group-pagination.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./group-pagination.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "label",
                    "defaultValue": "'55'",
                    "line": 13
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-group-pagination',\n  templateUrl: './group-pagination.component.html',\n  styleUrls: ['./group-pagination.component.scss']\n})\nexport class GroupPaginationComponent{\n  @Input()\n  active = false;\n\n  @Input()\n  label = '55';\n  public get classes(): string[] {\n    const mode = this.active ? 'active' : '';\n    return [mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".paginators {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  .paginator {\n    display: flex;\n    flex-direction: row;\n    &.paginatorIcons {\n      border: 1px solid #d9d9d9;\n      color: #595959;\n      box-sizing: border-box;\n      background: #ffffff;\n      padding: 12px 15px;\n      border-radius: 100px;\n      .icon{\n        margin: 0 5px;\n        cursor: pointer;\n        &:hover {\n          svg {\n            color: #40a9ff;\n          }\n        }\n        &:disabled {\n          svg {\n            color: #bfbfbf;\n          }\n        }\n      }\n    }\n    .lead {\n      margin: 5px;\n      font-size: 16px;\n      color: #8c8c8c;\n    }\n  }\n  p {\n    margin: 0 10px;\n  }\n  ul {\n    list-style: none;\n    margin: 0;\n    padding-inline-start: 0px;\n    margin-block-start: 0;\n    margin-block-end: 0;\n    li {\n      display: inline-block;\n      border: 1px solid #d9d9d9;\n      color: #595959;\n      box-sizing: border-box;\n      background: #ffffff;\n      padding: 5px;\n      margin: 0 5px;\n      border-radius: 50%;\n      cursor: pointer;\n      &:hover {\n        border: 1px solid #40a9ff;\n        color: #40a9ff;\n      }\n      &.active {\n        border: 1px solid #40a9ff;\n        color: #40a9ff;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./group-pagination.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 14
                    }
                }
            },
            "templateData": "<section class=\"paginators\">\n  <div class=\"paginator\">\n      <span class=\"lead\">Show</span>\n      <ul>\n        <li [ngClass]=\"classes\">{{label}}</li>\n        <li>{{label}}</li>\n        <li>{{label}}</li>\n      </ul>\n      <span class=\"lead\">Items Per Page</span>\n  </div>\n  <div class=\"paginator paginatorIcons\">\n    <div class=\"icon\">\n      <svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12.41 10.59L7.82 6L12.41 1.41L11 0L5 6L11 12L12.41 10.59ZM0 0H2V12H0V0Z\" />\n      </svg>\n    </div>\n    <div class=\"icon\">\n      <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M7.41 1.41L6 0L0 6L6 12L7.41 10.59L2.83 6L7.41 1.41Z\" />\n      </svg>\n    </div>\n    <p>\n      ( <span>Range Start</span> ) -\n      ( <span>Range End</span> ) of\n      ( <span>Total Items</span> )\n    </p>\n    <div class=\"icon\">\n      <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M1.99984 0L0.589844 1.41L5.16984 6L0.589844 10.59L1.99984 12L7.99984 6L1.99984 0Z\" />\n      </svg>\n    </div>\n    <div class=\"icon\">\n      <svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M0.589844 1.41L5.17984 6L0.589844 10.59L1.99984 12L7.99984 6L1.99984 0L0.589844 1.41ZM10.9998 0H12.9998V12H10.9998V0Z\" />\n      </svg>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-db00929fcab7bf2ec4d319b7c4f26ba6",
            "file": "src/app/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "false",
                    "line": 11
                },
                {
                    "name": "labelText",
                    "defaultValue": "'Input Label'",
                    "line": 14
                },
                {
                    "name": "leftIcon",
                    "defaultValue": "false",
                    "line": 20
                },
                {
                    "name": "message",
                    "defaultValue": "'Input caption message'",
                    "line": 17
                },
                {
                    "name": "rightIcon",
                    "defaultValue": "false",
                    "line": 23
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 26,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss']\n})\n\nexport class InputComponent{\n  @Input()\n  label = false;\n\n  @Input()\n  labelText = 'Input Label';\n\n  @Input()\n  message = 'Input caption message';\n\n  @Input()\n  leftIcon = false;\n\n  @Input()\n  rightIcon = false;\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  public get classes(): string[] {\n    //const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['', `${this.size}`];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form-control {\n  position: relative;\n  label {\n    display: block;\n    font-size: 14px;\n    color: #262626;\n    margin: 4px 2px;\n  }\n  input {\n    background: #ffffff;\n    box-shadow: inset 1px 0px 0px #d9d9d9, inset 0px 1px 0px #d9d9d9,\n      inset -1px 0px 0px #d9d9d9, inset 0px -1px 0px #d9d9d9;\n    border-radius: 4px;\n    outline: none;\n    border: none;\n    text-align: center;\n    &.large {\n      padding: 12px 16px;\n      ::placeholder {\n        font-size: 16px;\n      }\n    }\n    &.medium {\n      padding: 8px 12px;\n      ::placeholder {\n        font-size: 14px;\n      }\n    }\n    &.small {\n      padding: 5px 8px;\n      ::placeholder {\n        font-size: 12px;\n      }\n    }\n    &:hover {\n      box-shadow: inset 1px 0px 0px #40a9ff, inset 0px 1px 0px #40a9ff,\n        inset -1px 0px 0px #40a9ff, inset 0px -1px 0px #40a9ff;\n    }\n    &:focus {\n      box-shadow: -1px -1px 3px rgba(64, 169, 255, 0.25),\n        1px 1px 3px rgba(64, 169, 255, 0.25), inset 1px 0px 0px #40a9ff,\n        inset 0px 1px 0px #40a9ff, inset -1px 0px 0px #40a9ff,\n        inset 0px -1px 0px #40a9ff;\n    }\n    &:active {\n      box-shadow: -1px -1px 3px rgba(64, 169, 255, 0.25),\n        1px 1px 3px rgba(64, 169, 255, 0.25), inset 1px 0px 0px #40a9ff,\n        inset 0px 1px 0px #40a9ff, inset -1px 0px 0px #40a9ff,\n        inset 0px -1px 0px #40a9ff;\n    }\n    &:invalid {\n      box-shadow: inset 1px 0px 0px #f5222d, inset 0px 1px 0px #f5222d,\n        inset -1px 0px 0px #f5222d, inset 0px -1px 0px #f5222d;\n    }\n    ::placeholder {\n      color: #bfbfbf;\n    }\n  }\n  .rightIcon,\n  .leftIcon {\n    position: absolute;\n    margin: 6px 5px;\n  }\n  .rightIcon {\n    margin: 6px -22px;\n  }\n  .message{\n    color: #8C8C8C;\n    font-size: 14px;\n    margin: 2px;\n    &:invalid {\n      color: #f5222d;\n    }\n  }\n}\n",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 28
                    }
                }
            },
            "templateData": "<div class=\"form-control\">\n  <label *ngIf='label'>{{labelText}}</label>\n\n  <svg class=\"leftIcon\" *ngIf='leftIcon' width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M8.99935 0.666016C4.39935 0.666016 0.666016 4.39935 0.666016 8.99935C0.666016 13.5993 4.39935 17.3327 8.99935 17.3327C13.5993 17.3327 17.3327 13.5993 17.3327 8.99935C17.3327 4.39935 13.5993 0.666016 8.99935 0.666016ZM9.83268 13.166H8.16602V11.4993H9.83268V13.166ZM9.83268 9.83268H8.16602V4.83268H9.83268V9.83268Z\"/>\n  </svg>\n\n  <input [ngClass]='classes' type=\"text\" placeholder=\"Text field Placeholder\">\n\n  <svg class=\"rightIcon\" *ngIf='rightIcon' width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M8.99935 0.666016C4.39935 0.666016 0.666016 4.39935 0.666016 8.99935C0.666016 13.5993 4.39935 17.3327 8.99935 17.3327C13.5993 17.3327 17.3327 13.5993 17.3327 8.99935C17.3327 4.39935 13.5993 0.666016 8.99935 0.666016ZM9.83268 13.166H8.16602V11.4993H9.83268V13.166ZM9.83268 9.83268H8.16602V4.83268H9.83268V9.83268Z\"/>\n  </svg>\n\n  <p class=\"message\">{{message}}</p>\n</div>\n"
        },
        {
            "name": "LeftIconButtonComponent",
            "id": "component-LeftIconButtonComponent-a3fa4340ac20f1a5634b046c1dc7ecad",
            "file": "src/app/left-icon-button/left-icon-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-left-icon-button",
            "styleUrls": [
                "./left-icon-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./left-icon-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "danger",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "dangerOutline",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "dashed",
                    "defaultValue": "false",
                    "line": 25
                },
                {
                    "name": "label",
                    "defaultValue": "'Label'",
                    "line": 34
                },
                {
                    "name": "outline",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "primaryOutline",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 28,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-left-icon-button',\n  templateUrl: './left-icon-button.component.html',\n  styleUrls: ['./left-icon-button.component.scss']\n})\nexport class LeftIconButtonComponent implements OnInit {\n  @Input()\n  primary = false;\n\n  @Input()\n  primaryOutline = false;\n\n  @Input()\n  danger = false;\n\n  @Input()\n  dangerOutline  = false;\n\n  @Input()\n  outline = false;\n\n  @Input()\n  dashed = false;\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  @Input()\n  backgroundColor?: string;\n\n  @Input()\n  label = 'Label';\n\n  public get classes(): string[]{\n    let mode = '';\n    if(this.primary){\n      mode = 'primary-button';\n    }else if(this.primaryOutline){\n      mode = 'primaryOutline-button';\n    }else if(this.danger){\n      mode = 'danger-button';\n    }else if(this.dangerOutline){\n      mode = 'dangerOutline-button';\n    }else if(this.outline){\n      mode = 'outline-button';\n    }else if(this.dashed){\n      mode = 'dashed-button';\n    }\n    return ['button', `button-${this.size}`, mode ]\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".button {\n  cursor: pointer;\n  border: 0;\n  outline: none;\n  margin: 0 5px;\n  font-size: 18px;\n  box-shadow: 0px 2px 4px #BAE7FF, 0px 4px 8px #E6F7FF;\n  &.button-small {\n    padding: 5px 5px;\n    border-radius: 4px;\n  }\n  &.button-medium {\n    padding: 8px 12px;\n    border-radius: 8px;\n  }\n  &.button-large {\n    padding: 12px 16px;\n    border-radius: 12px;\n  }\n  &.danger-button {\n    color: white;\n    background-color: #F5222D;\n    &:hover{\n      background-color: #FF4D4F;\n      border: 1px solid #FF4D4F;\n    }\n    &:focus{\n      background-color: #FF7875;\n      border: 1px solid #FF7875;\n    }\n    &:active{\n      background-color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n    svg{\n      color: white;\n    }\n  }\n  &.primary-button {\n    color: white;\n    background-color: #1890FF;\n    &:hover{\n      background-color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      background-color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      background-color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n    i{\n      color: white;\n    }\n  }\n  &.outline-button {\n    color: #595959;\n    background-color: transparent;\n    border: 1px solid #595959;\n    &:hover{\n      color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n    i{\n      color: #595959;\n    }\n  }\n  &.dashed-button {\n    color: #595959;\n    background-color: transparent;\n    border: 1px dashed #595959;\n    &:hover{\n      color: #40A9FF;\n      border: 1px dashed #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      border: 1px dashed #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      border: 1px dashed #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px dashed #D9D9D9;\n    }\n  }\n  &.primaryOutline-button{\n    color: #1890FF;\n    background-color: transparent;\n    border: 1px solid #1890FF;\n    &:hover{\n      color: #40A9FF;\n      background-color: transparent;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      background-color: transparent;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      background-color: transparent;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: transparent;\n      border: 1px solid #D9D9D9;\n    }\n  }\n  &.dangerOutline-button{\n    color: #F5222D;\n    background-color: transparent;\n    border: 1px solid #F5222D;\n    &:hover{\n      color: #FF4D4F;\n      background-color: transparent;\n      border: 1px solid #FF4D4F;\n    }\n    &:focus{\n      color: #FF7875;\n      background-color: transparent;\n      border: 1px solid #FF7875;\n    }\n    &:active{\n      color: #CF1322;\n      background-color: transparent;\n      border: 1px solid #CF1322;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: transparent;\n      border: 1px solid #D9D9D9;\n    }\n  }\n}\n",
                    "styleUrl": "./left-icon-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 52
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 36
                    }
                }
            },
            "templateData": "<button type=\"button\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" fill=\"currentColor\" class=\"bi bi-info-circle\" viewBox=\"0 0 16 16\">\n    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path d=\"M8.93 6.588l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\n  </svg>\n  {{ label }}\n</button>\n"
        },
        {
            "name": "MenuBarItemComponent",
            "id": "component-MenuBarItemComponent-f8b99d499050960dc77eda5ce424c471",
            "file": "src/app/menu-bar-item/menu-bar-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu-bar-item",
            "styleUrls": [
                "./menu-bar-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./menu-bar-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "collapsed",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "label",
                    "defaultValue": "'Label'",
                    "line": 10
                },
                {
                    "name": "primaryItem",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "subItem",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "uncollapsed",
                    "defaultValue": "false",
                    "line": 25
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-bar-item',\n  templateUrl: './menu-bar-item.component.html',\n  styleUrls: ['./menu-bar-item.component.scss']\n})\nexport class MenuBarItemComponent{\n  @Input()\n  label = 'Label';\n\n  @Input()\n  primaryItem = false;\n\n  @Input()\n  subItem = false;\n\n  @Input()\n  active = false;\n\n  @Input()\n  collapsed = false;\n\n  @Input()\n  uncollapsed = false;\n\n  public get PrimaryItem(): string[]{\n    let mode = '';\n\n    if(this.primaryItem){\n      mode = 'visibility';\n    }else{\n      mode = 'hidden';\n    }\n    return [ mode ];\n  }\n\n  public get SubItem(): string[]{\n    let mode = '';\n\n    if(this.subItem){\n      mode = 'visibility';\n    }else{\n      mode = 'hidden';\n    }\n    return [ mode ];\n  }\n\n  public get Collapsed(): string[]{\n    let mode = '';\n    if(this.collapsed){\n      mode = 'visibility';\n    }else{\n      mode = 'hidden';\n    }\n    return [ mode ];\n  }\n\n  public get Uncollapsed(): string[]{\n    let mode = '';\n\n    if(this.uncollapsed){\n      mode = 'visibility';\n    }else{\n      mode = 'hidden';\n    }\n    return [ mode ];\n  }\n\n  public get Active(): string[]{\n    let mode = '';\n\n    if(this.active){\n      mode = 'active';\n    }\n    return [ mode ];\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ul {\n  list-style: none;\n  li {\n    margin: 10px 5px;\n    padding: 7px 0px;\n    a {\n      color: #595959;\n      font-size: 20px;\n      text-decoration: none;\n      background-color: transparent;\n      padding: 8px 20px;\n      border-radius: 4px;\n      &:hover {\n        background: #fafafa;\n      }\n      &.active {\n        background-color: #e6f7ff;\n        color: #096dd9;\n        border-left: 2px solid #096dd9;\n      }\n      svg{\n        margin: 0 10px;\n      }\n    }\n  }\n}\n.hidden {\n  display: none;\n}\n.visibility {\n  display: inline-block;\n}\n",
                    "styleUrl": "./menu-bar-item.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "PrimaryItem": {
                    "name": "PrimaryItem",
                    "getSignature": {
                        "name": "PrimaryItem",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 27
                    }
                },
                "SubItem": {
                    "name": "SubItem",
                    "getSignature": {
                        "name": "SubItem",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 38
                    }
                },
                "Collapsed": {
                    "name": "Collapsed",
                    "getSignature": {
                        "name": "Collapsed",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 49
                    }
                },
                "Uncollapsed": {
                    "name": "Uncollapsed",
                    "getSignature": {
                        "name": "Uncollapsed",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 59
                    }
                },
                "Active": {
                    "name": "Active",
                    "getSignature": {
                        "name": "Active",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 70
                    }
                }
            },
            "templateData": "<ul>\n  <li>\n    <a [ngClass]=\"Active\" href=\"#\">\n      <svg [ngClass]=\"PrimaryItem\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M17.5377 13.4862C17.5377 13.9925 17.1273 14.4029 16.6211 14.4029H3.4987C2.99244 14.4029 2.58203 13.9925 2.58203 13.4862V4.57971L10.0803 0.833984L17.5377 4.51173V13.4862Z\"\n          fill=\"#FAFAFA\" />\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n          d=\"M6.51149 8.87775C6.34867 8.9467 6.16963 8.98484 5.98168 8.98484C5.23079 8.98484 4.62207 8.37612 4.62207 7.62523C4.62207 6.87434 5.23079 6.26562 5.98168 6.26562C6.73257 6.26562 7.34129 6.87434 7.34129 7.62523C7.34129 7.85327 7.28515 8.06819 7.18594 8.25694L7.67802 8.79085C7.75603 8.87548 7.79933 8.98637 7.79933 9.10147V14.4039H6.88267V9.28047L6.51149 8.87775Z\" />\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n          d=\"M15.5467 7.62523C15.5467 8.37612 14.938 8.98484 14.1871 8.98484C13.9991 8.98484 13.8199 8.94667 13.6571 8.87766L13.2858 9.28047V14.4039H12.3691V9.10147C12.3691 8.98637 12.4124 8.87548 12.4905 8.79085L12.9827 8.25674C12.8836 8.06804 12.8275 7.85319 12.8275 7.62523C12.8275 6.87434 13.4362 6.26562 14.1871 6.26562C14.938 6.26562 15.5467 6.87434 15.5467 7.62523Z\" />\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n          d=\"M9.79117 0.423422C9.92019 0.358884 10.0721 0.358858 10.2011 0.423353L19.3717 5.00669C19.5981 5.11985 19.6899 5.39514 19.5767 5.62157C19.4636 5.848 19.1883 5.93981 18.9619 5.82665L9.9963 1.34577L1.03848 5.82658C0.812088 5.93982 0.536764 5.8481 0.423523 5.62171C0.310281 5.39532 0.402004 5.12 0.628391 5.00676L9.79117 0.423422Z\" />\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n          d=\"M0.245117 17.1198C0.245117 16.6135 0.655523 16.2031 1.16178 16.2031H18.8979C19.4041 16.2031 19.8145 16.6135 19.8145 17.1198C19.8145 17.6261 19.4041 18.0365 18.8979 18.0365H1.16178C0.655523 18.0365 0.245117 17.6261 0.245117 17.1198Z\" />\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n          d=\"M11.42 4.87719C11.42 5.46735 11.044 5.96969 10.5185 6.1577V15.1262C11.4283 15.334 12.1071 16.1483 12.1071 17.121C12.1071 18.2511 11.1909 19.1672 10.0609 19.1672C8.93077 19.1672 8.01465 18.2511 8.01465 17.121C8.01465 16.1488 8.69275 15.3349 9.60181 15.1265V6.15751C9.07656 5.96934 8.70081 5.46715 8.70081 4.87719C8.70081 4.1263 9.30952 3.51758 10.0604 3.51758C10.8113 3.51758 11.42 4.1263 11.42 4.87719Z\" />\n      </svg>\n      <svg [ngClass]=\"SubItem\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n          d=\"M10.265 3.95653C5.9037 3.95653 2.36797 7.49225 2.36797 11.8536C2.36797 12.562 2.46299 13.2494 2.63824 13.9035C2.01871 12.7385 1.66699 11.4093 1.66699 9.99873C1.66699 5.39673 5.39771 1.66602 9.99971 1.66602C14.6017 1.66602 18.3324 5.39673 18.3337 9.99873C18.3337 10.5837 18.2732 11.1539 18.1584 11.7043C18.0782 7.41204 14.5758 3.95653 10.265 3.95653ZM17.475 13.6814C16.115 16.4359 13.2802 18.3315 9.99997 18.3315C6.86039 18.3315 4.12683 16.5939 2.70637 14.0257C3.15682 13.98 3.87507 13.7678 4.67601 12.9965C4.88547 12.7826 5.14154 12.454 5.44631 12.0628C6.77739 10.3543 9.03751 7.45329 12.4015 7.7194C13.9059 7.88354 14.7772 9.02509 14.9944 9.58785C14.9944 9.58785 13.9787 8.5549 12.8545 9.42495C12.2288 9.8791 11.8042 11.2354 13.0174 12.3634C14.0849 13.3556 15.4831 13.8875 17.475 13.6814Z\"/>\n      </svg>\n      {{label}}\n      <svg [ngClass]=\"Collapsed\" width=\"6\" height=\"10\" viewBox=\"0 0 6 10\" fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M0.266515 8.46756L3.80182 4.99553L0.266514 1.52349C-0.0888387 1.1745 -0.0888387 0.610738 0.266514 0.261744C0.621867 -0.0872488 1.1959 -0.0872489 1.55125 0.261744L5.73348 4.36913C6.08884 4.71812 6.08884 5.28188 5.73349 5.63087L1.55125 9.73825C1.1959 10.0872 0.621868 10.0872 0.266515 9.73826C-0.0797267 9.38926 -0.0888383 8.81655 0.266515 8.46756Z\" />\n      </svg>\n      <svg [ngClass]=\"Uncollapsed\" width=\"10\" height=\"6\" viewBox=\"0 0 10 6\" fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M1.53244 0.266515L5.00447 3.80182L8.47651 0.266515C8.8255 -0.0888383 9.38926 -0.0888383 9.73826 0.266515C10.0872 0.621868 10.0872 1.1959 9.73826 1.55125L5.63087 5.73349C5.28188 6.08884 4.71812 6.08884 4.36913 5.73349L0.261745 1.55125C-0.0872483 1.1959 -0.0872483 0.621868 0.261745 0.266515C0.610738 -0.0797266 1.18345 -0.0888383 1.53244 0.266515Z\" />\n      </svg>\n    </a>\n  </li>\n</ul>\n"
        },
        {
            "name": "MessageComponent",
            "id": "component-MessageComponent-662f41651d6f49065a704def162cb512",
            "file": "src/app/message/message.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-message",
            "styleUrls": [
                "./message.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./message.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "error",
                    "defaultValue": "false",
                    "line": 20
                },
                {
                    "name": "info",
                    "defaultValue": "false",
                    "line": 14
                },
                {
                    "name": "label",
                    "defaultValue": "'This is Prompt Message'",
                    "line": 10
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "line": 26
                },
                {
                    "name": "success",
                    "defaultValue": "false",
                    "line": 23
                },
                {
                    "name": "warning",
                    "defaultValue": "false",
                    "line": 17
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss']\n})\nexport class MessageComponent {\n  @Input()\n  label = 'This is Prompt Message';\n\n  //Types\n  @Input()\n  info = false;\n\n  @Input()\n  warning = false;\n\n  @Input()\n  error = false;\n\n  @Input()\n  success = false;\n\n  @Input()\n  loading = false;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".message {\n  background: #ffffff;\n  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  padding: 13px 16px;\n  display: inline-block;\n  font-size: 18px;\n  color: #595959;\n  svg{\n    margin: -3px 5px;\n  }\n}\n",
                    "styleUrl": "./message.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p class=\"message\">\n  <svg *ngIf=\"success\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M10.0002 0.833984C4.94016 0.833984 0.833496 4.94065 0.833496 10.0007C0.833496 15.0607 4.94016 19.1673 10.0002 19.1673C15.0602 19.1673 19.1668 15.0607 19.1668 10.0007C19.1668 4.94065 15.0602 0.833984 10.0002 0.833984ZM8.16683 14.584L3.5835 10.0007L4.876 8.70815L8.16683 11.9898L15.1243 5.03232L16.4168 6.33398L8.16683 14.584Z\"\n      fill=\"#52C41A\" />\n  </svg>\n  <svg *ngIf=\"warning\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M10.0002 0.833984C4.94016 0.833984 0.833496 4.94065 0.833496 10.0007C0.833496 15.0607 4.94016 19.1673 10.0002 19.1673C15.0602 19.1673 19.1668 15.0607 19.1668 10.0007C19.1668 4.94065 15.0602 0.833984 10.0002 0.833984ZM10.9168 14.584H9.0835V12.7507H10.9168V14.584ZM10.9168 10.9173H9.0835V5.41732H10.9168V10.9173Z\"\n      fill=\"#FAAD14\" />\n  </svg>\n  <svg *ngIf=\"error\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n      d=\"M1.8335 11.0007C1.8335 5.93148 5.931 1.83398 11.0002 1.83398C16.0693 1.83398 20.1668 5.93148 20.1668 11.0007C20.1668 16.0698 16.0693 20.1673 11.0002 20.1673C5.931 20.1673 1.8335 16.0698 1.8335 11.0007ZM13.3743 7.33398L11.0002 9.70815L8.626 7.33398L7.3335 8.62648L9.70766 11.0007L7.3335 13.3748L8.626 14.6673L11.0002 12.2932L13.3743 14.6673L14.6668 13.3748L12.2927 11.0007L14.6668 8.62648L13.3743 7.33398Z\"\n      fill=\"#F5222D\" />\n  </svg>\n  <svg *ngIf=\"info\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M10.0002 0.833984C4.94016 0.833984 0.833496 4.94065 0.833496 10.0007C0.833496 15.0607 4.94016 19.1673 10.0002 19.1673C15.0602 19.1673 19.1668 15.0607 19.1668 10.0007C19.1668 4.94065 15.0602 0.833984 10.0002 0.833984ZM10.9168 14.584H9.0835V9.08398H10.9168V14.584ZM10.9168 7.25065H9.0835V5.41732H10.9168V7.25065Z\"\n      fill=\"#1890FF\" />\n  </svg>\n  <svg *ngIf=\"loading\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M21.0832 10.9993C21.0832 16.5682 16.5687 21.0827 10.9998 21.0827C5.43097 21.0827 0.916504 16.5682 0.916504 10.9993C0.916504 5.43048 5.43097 0.916016 10.9998 0.916016\"\n      stroke=\"#1890FF\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n\n  {{label}}\n\n</p>\n"
        },
        {
            "name": "ModelComponent",
            "id": "component-ModelComponent-b70b146e6c8968f71d5b33a054081b9d",
            "file": "src/app/model/model.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-model",
            "styleUrls": [
                "./model.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./model.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "defaultValue": "`This is placeholder text. The basic dialog for modals should contain only valuable and\n    relevant information.Simplify dialogs by removing unnecessary elements or content that does not\n    support user tasks. If you find that the number of required elements for your design is making\n    the dialog excessively large, then try a different design solution. `",
                    "line": 13
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "line": 36
                },
                {
                    "name": "icon",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "info",
                    "defaultValue": "false",
                    "line": 30
                },
                {
                    "name": "information",
                    "defaultValue": "false",
                    "line": 25
                },
                {
                    "name": "label",
                    "defaultValue": "'Button Label'",
                    "line": 19
                },
                {
                    "name": "success",
                    "defaultValue": "false",
                    "line": 39
                },
                {
                    "name": "title",
                    "defaultValue": "'Model Title'",
                    "line": 10
                },
                {
                    "name": "warning",
                    "defaultValue": "false",
                    "line": 33
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-model',\n  templateUrl: './model.component.html',\n  styleUrls: ['./model.component.scss']\n})\nexport class ModelComponent {\n  @Input()\n  title = 'Model Title';\n\n  @Input()\n  content = `This is placeholder text. The basic dialog for modals should contain only valuable and\n    relevant information.Simplify dialogs by removing unnecessary elements or content that does not\n    support user tasks. If you find that the number of required elements for your design is making\n    the dialog excessively large, then try a different design solution. `\n\n  @Input()\n  label = 'Button Label';\n  //Types\n  @Input()\n  icon = false;\n\n  @Input()\n  information = false;\n\n\n  //Icons Type\n  @Input()\n  info = false;\n\n  @Input()\n  warning = false;\n\n  @Input()\n  error = false;\n\n  @Input()\n  success = false;\n\n  public get classes(): string[] {\n    let mode = '';\n    if(this.info){\n      mode = ' info';\n    }else if(this.warning){\n      mode = ' warning';\n    }else if(this.error){\n      mode = ' error';\n    }else if(this.success){\n      mode = ' success';\n    }\n    return [ mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".model {\n  margin: 10px auto;\n  width: 752px;\n  padding: 24px;\n  background: #ffffff;\n  box-shadow: 0px 8px 16px #bfbfbf, 0px 16px 32px #d9d9d9;\n  border-radius: 12px;\n  .model-header {\n    h3 {\n      margin: 0px;\n      span{\n        margin: 0px 12px;\n      color: #262626;\n      font-size: 20px;\n      }\n      svg {\n        margin: -3px 0px;\n      }\n    }\n  }\n  .model-body {\n    font-size: 14px;\n    color: #595959;\n    margin: 0px 0px;\n    text-align: justify;\n    padding: 8px;\n  }\n  .model-btns {\n    display: flex;\n    flex-direction: row-reverse;\n    button {\n      padding: 5px 32px;\n      box-sizing: border-box;\n      border-radius: 4px;\n      margin: 10px 0px;\n      color: #ffffff;\n      margin: 0px 8px;\n      font-size: 14px;\n      outline: none;\n      background: #1890ff;\n      border: 1px solid #1890ff;\n      &.cancel-btn {\n        background: #ffffff;\n        border: 1px solid #d9d9d9;\n        color: #595959;\n      }\n      &.info,\n      &.success {\n        background: #1890ff;\n        border: 1px solid #1890ff;\n      }\n      &.warning {\n        background: #faad14;\n        border: 1px solid #faad14;\n      }\n      &.error {\n        background: #f5222d;\n        border: 1px solid #f5222d;\n      }\n      &.success {\n        background: #52C41A;\n        border: 1px solid #52C41A;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./model.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 41
                    }
                }
            },
            "templateData": "<div class=\"model\">\n  <div class=\"model-header\">\n    <h3>\n      <svg *ngIf=\"icon && info\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M9 5H11V7H9V5ZM9 9H11V15H9V9ZM10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18Z\"\n          fill=\"#1890FF\" />\n      </svg>\n      <svg *ngIf=\"icon && error\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M10 0C4.47 0 0 4.47 0 10C0 15.53 4.47 20 10 20C15.53 20 20 15.53 20 10C20 4.47 15.53 0 10 0ZM10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18ZM13.59 5L10 8.59L6.41 5L5 6.41L8.59 10L5 13.59L6.41 15L10 11.41L13.59 15L15 13.59L11.41 10L15 6.41L13.59 5Z\"\n          fill=\"#F5222D\" />\n      </svg>\n      <svg *ngIf=\"icon && warning\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M9 13H11V15H9V13ZM9 5H11V11H9V5ZM9.99 0C4.47 0 0 4.48 0 10C0 15.52 4.47 20 9.99 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 9.99 0ZM10 18C5.58 18 2 14.42 2 10C2 5.58 5.58 2 10 2C14.42 2 18 5.58 18 10C18 14.42 14.42 18 10 18Z\"\n          fill=\"#FAAD14\" />\n      </svg>\n      <svg *ngIf=\"icon && success\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18ZM14.59 5.58L8 12.17L5.41 9.59L4 11L8 15L16 7L14.59 5.58Z\"\n          fill=\"#52C41A\" />\n      </svg>\n      <span>{{title}}</span>\n    </h3>\n  </div>\n  <div class=\"model-body\">\n    <p> {{content}} </p>\n  </div>\n  <div class=\"model-btns\">\n    <button [ngClass]='classes'>{{label}}</button>\n    <button class=\"cancel-btn\" *ngIf='information'\n      onclick=\"this.parentElement.parentElement.parentElement.style.display='none';\">\n      Cancel\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "NotificationComponent",
            "id": "component-NotificationComponent-b3971f089759f660b5a02883ee101488",
            "file": "src/app/notification/notification.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notification",
            "styleUrls": [
                "./notification.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./notification.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "button",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "content",
                    "defaultValue": "`This is the content of the notification,\n    This is the content of the notification,\n    This is the content of the notification.`",
                    "line": 13
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "line": 32
                },
                {
                    "name": "icon",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "info",
                    "defaultValue": "false",
                    "line": 26
                },
                {
                    "name": "success",
                    "defaultValue": "false",
                    "line": 35
                },
                {
                    "name": "title",
                    "defaultValue": "'Notification Title'",
                    "line": 10
                },
                {
                    "name": "warning",
                    "defaultValue": "false",
                    "line": 29
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.scss']\n})\nexport class NotificationComponent {\n  @Input()\n  title = 'Notification Title';\n\n  @Input()\n  content = `This is the content of the notification,\n    This is the content of the notification,\n    This is the content of the notification.`\n\n  //Types\n  @Input()\n  icon = false;\n\n  @Input()\n  button = false;\n\n  //Icons Type\n  @Input()\n  info = false;\n\n  @Input()\n  warning = false;\n\n  @Input()\n  error = false;\n\n  @Input()\n  success = false;\n\n  public get classes(): string[] {\n    let mode = '';\n    if(this.info){\n      mode += ' info';\n    }else if(this.warning){\n      mode += ' warning';\n    }else if(this.error){\n      mode += ' error';\n    }else if(this.success){\n      mode += ' success';\n    }\n    return ['notification', mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".notification {\n  display: flex;\n  flex-direction: row;\n  margin: 0 auto;\n  width: 389px;\n  padding: 16px 24px;\n  background: #ffffff;\n  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  .notifi-icon{\n    margin: 3px 10px 3px 0px;\n    svg{\n      margin: -3px 5px -3px 0;\n    }\n  }\n  .notifi-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    h3 {\n      margin: 0;\n      color: #262626;\n      font-size: 18px;\n    }\n  }\n  .notifi-content {\n    font-size: 14px;\n    color: #595959;\n    text-align: justify;\n  }\n  .notifi-button {\n    display: flex;\n    flex-direction: row-reverse;\n    button {\n      padding: 5px 32px;\n      background: #1890ff;\n      border: 1px solid #1890ff;\n      box-sizing: border-box;\n      border-radius: 4px;\n      margin: 10px 0px;\n      color: #FFFFFF;\n      margin: 0px 8px;\n      font-size: 14px;\n    }\n  }\n}\n",
                    "styleUrl": "./notification.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 37
                    }
                }
            },
            "templateData": "<div [ngClass]=\"classes\">\n  <div class=\"notifi-icon \">\n    <svg *ngIf=\"icon && info\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M9.9165 5.58268H12.0832V7.74935H9.9165V5.58268ZM9.9165 9.91602H12.0832V16.416H9.9165V9.91602ZM10.9998 0.166016C5.01984 0.166016 0.166504 5.01935 0.166504 10.9993C0.166504 16.9793 5.01984 21.8327 10.9998 21.8327C16.9798 21.8327 21.8332 16.9793 21.8332 10.9993C21.8332 5.01935 16.9798 0.166016 10.9998 0.166016ZM10.9998 19.666C6.22234 19.666 2.33317 15.7768 2.33317 10.9993C2.33317 6.22185 6.22234 2.33268 10.9998 2.33268C15.7773 2.33268 19.6665 6.22185 19.6665 10.9993C19.6665 15.7768 15.7773 19.666 10.9998 19.666Z\"\n          fill=\"#1890FF\" />\n      </svg>\n      <svg *ngIf=\"icon && warning\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M9.9165 14.2493H12.0832V16.416H9.9165V14.2493ZM9.9165 5.58268H12.0832V12.0827H9.9165V5.58268ZM10.989 0.166016C5.009 0.166016 0.166504 5.01935 0.166504 10.9993C0.166504 16.9793 5.009 21.8327 10.989 21.8327C16.9798 21.8327 21.8332 16.9793 21.8332 10.9993C21.8332 5.01935 16.9798 0.166016 10.989 0.166016ZM10.9998 19.666C6.2115 19.666 2.33317 15.7877 2.33317 10.9993C2.33317 6.21102 6.2115 2.33268 10.9998 2.33268C15.7882 2.33268 19.6665 6.21102 19.6665 10.9993C19.6665 15.7877 15.7882 19.666 10.9998 19.666Z\"\n          fill=\"#FAAD14\" />\n      </svg>\n      <svg *ngIf=\"icon && error\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M10.9998 0.166016C5.009 0.166016 0.166504 5.00852 0.166504 10.9993C0.166504 16.9902 5.009 21.8327 10.9998 21.8327C16.9907 21.8327 21.8332 16.9902 21.8332 10.9993C21.8332 5.00852 16.9907 0.166016 10.9998 0.166016ZM10.9998 19.666C6.22234 19.666 2.33317 15.7768 2.33317 10.9993C2.33317 6.22185 6.22234 2.33268 10.9998 2.33268C15.7773 2.33268 19.6665 6.22185 19.6665 10.9993C19.6665 15.7768 15.7773 19.666 10.9998 19.666ZM14.889 5.58268L10.9998 9.47185L7.11067 5.58268L5.58317 7.11018L9.47234 10.9993L5.58317 14.8885L7.11067 16.416L10.9998 12.5268L14.889 16.416L16.4165 14.8885L12.5273 10.9993L16.4165 7.11018L14.889 5.58268Z\"\n          fill=\"#F5222D\" />\n      </svg>\n      <svg *ngIf=\"icon && success\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M10.9998 0.166016C5.01984 0.166016 0.166504 5.01935 0.166504 10.9993C0.166504 16.9793 5.01984 21.8327 10.9998 21.8327C16.9798 21.8327 21.8332 16.9793 21.8332 10.9993C21.8332 5.01935 16.9798 0.166016 10.9998 0.166016ZM10.9998 19.666C6.22234 19.666 2.33317 15.7768 2.33317 10.9993C2.33317 6.22185 6.22234 2.33268 10.9998 2.33268C15.7773 2.33268 19.6665 6.22185 19.6665 10.9993C19.6665 15.7768 15.7773 19.666 10.9998 19.666ZM15.9723 6.21102L8.83317 13.3502L6.02734 10.5552L4.49984 12.0827L8.83317 16.416L17.4998 7.74935L15.9723 6.21102Z\"\n          fill=\"#52C41A\" />\n      </svg>\n  </div>\n  <div class=\"notifi-body\">\n    <div class=\"notifi-header\">\n      <h3>\n        {{title}}\n      </h3>\n      <svg onclick=\"this.parentElement.parentElement.parentElement.style.display='none';\" width=\"14\" height=\"14\" viewBox=\"0 0 14 14\"\n        fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\" />\n      </svg>\n    </div>\n\n    <div class=\"notifi-content\">\n      <p> {{content}} </p>\n    </div>\n\n    <div class=\"notifi-button\">\n      <button *ngIf=\"button\" onclick=\"this.parentElement.parentElement.parentElement.style.display='none';\">\n        Confirm\n      </button>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-cca1a8911321fa17756ce90c90de65cc",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 66,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageHeaderComponent",
            "id": "component-PageHeaderComponent-3b78d49897441b5c63d1e01c89293ce9",
            "file": "src/app/page-header/page-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-header",
            "styleUrls": [
                "./page-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "breadcrumb",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "label",
                    "defaultValue": "'Breadcrumb Link'",
                    "line": 10
                },
                {
                    "name": "title",
                    "defaultValue": "false",
                    "line": 16
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.scss']\n})\nexport class PageHeaderComponent {\n  @Input()\n  label = 'Breadcrumb Link';\n\n  @Input()\n  breadcrumb = false;\n\n  @Input()\n  title = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".page-header {\n  background: #ffffff;\n  box-shadow: 0px 1px 2px #e8e8e8, 0px 2px 4px #f5f5f5;\n  padding: 2px 5px;\n  ul {\n    &.breadcrumb {\n      padding: 10px 16px;\n      list-style: none;\n      li {\n        display: inline;\n        font-size: 14px;\n        /*&.layer{\n          a{\n            color: #1890FF;\n          }\n        }*/\n        color: #595959;\n        a {\n          color: #8c8c8c;\n          text-decoration: none;\n          &:hover {\n            color: #1890ff;\n          }\n        }\n      }\n      li + li {\n        &:before {\n          padding: 8px;\n          color: #8c8c8c;\n          content: \"/\\00a0\";\n        }\n      }\n    }\n  }\n  .header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding:  8px;\n    .title {\n      color: #262626;\n      font-size: 20px;\n      h3{\n        margin: 0;\n      }\n    }\n    .btns {\n      .btn {\n        font-size: 16px;\n        border: 1px solid #d9d9d9;\n        box-sizing: border-box;\n        box-shadow: 0px 2px 4px #e8e8e8, 0px 4px 8px #f5f5f5;\n        border-radius: 8px;\n        padding: 8px 12px;\n        margin: 0 4px;\n        &.w-btn {\n          background: #ffffff;\n          color: #595959;\n        }\n        &.b-btn {\n          color: #ffffff;\n          background: #1890ff;\n        }\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./page-header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"page-header\">\n  <ul class=\"breadcrumb\" *ngIf='breadcrumb'>\n    <li>\n      <a href=\"#\">\n        <svg width=\"20\" height=\"17\" viewBox=\"0 0 20 17\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M9.99992 3.21583L14.5833 7.34083V14.5H12.7499V9H7.24992V14.5H5.41659V7.34083L9.99992 3.21583ZM9.99992 0.75L0.833252 9H3.58325V16.3333H9.08325V10.8333H10.9166V16.3333H16.4166V9H19.1666L9.99992 0.75Z\" />\n        </svg>\n      </a>\n    </li>\n    <li>\n      <a href=\"#\">{{label}}</a>\n    </li>\n    <li>\n      <a href=\"#\">{{label}}</a>\n    </li>\n    <li>{{label}}</li>\n  </ul>\n  <div class=\"header\" *ngIf='title'>\n    <div class=\"title\">\n      <h3>\n        <a href=\"#\">\n          <svg width=\"18\" height=\"12\" viewBox=\"0 0 18 12\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M18 5H3.83L7.41 1.41L6 0L0 6L6 12L7.41 10.59L3.83 7H18V5Z\" fill=\"black\" />\n          </svg>\n        </a>\n        Title\n      </h3>\n    </div>\n    <div class=\"btns\">\n      <button class=\"btn w-btn\">\n        Label\n      </button>\n      <button class=\"btn b-btn\">\n        Label\n      </button>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "PaginationComponent",
            "id": "component-PaginationComponent-d3c29cb77609f04aa29cf72976587519",
            "file": "src/app/pagination/pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pagination",
            "styleUrls": [
                "./pagination.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pagination.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "line": 11
                },
                {
                    "name": "label",
                    "defaultValue": "'55'",
                    "line": 14
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss']\n})\n\nexport class PaginationComponent{\n  @Input()\n  active = false;\n\n  @Input()\n  label = '55';\n\n  public get classes(): string[] {\n    const mode = this.active ? 'active' : '';\n    return [mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".paginators {\n  display: flex;\n  flex-direction: row;\n  .paginator {\n    border: 1px solid #d9d9d9;\n    box-sizing: border-box;\n    border-radius: 4px;\n    background: #ffffff;\n    padding: 10px;\n    margin: 10px 5px;\n    color: #595959;\n    &:hover {\n      svg {\n        color: #40a9ff;\n      }\n    }\n    &:disabled {\n      svg {\n        color: #bfbfbf;\n      }\n    }\n  }\n  ul {\n    list-style: none;\n    margin: 0;\n    padding-inline-start: 0px;\n    li {\n      display: inline-block;\n      border: 1px solid #d9d9d9;\n      color: #595959;\n      box-sizing: border-box;\n      border-radius: 4px;\n      background: #ffffff;\n      padding: 5px;\n      margin: 15px 5px;\n      &:hover {\n        border: 1px solid #40a9ff;\n        color: #40a9ff;\n      }\n      &.active{\n        border: 1px solid #40a9ff;\n        color: #40a9ff;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./pagination.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 16
                    }
                }
            },
            "templateData": "<div class=\"paginators\">\n  <div class=\"paginator\">\n    <svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M12.41 10.59L7.82 6L12.41 1.41L11 0L5 6L11 12L12.41 10.59ZM0 0H2V12H0V0Z\" />\n    </svg>\n  </div>\n  <div class=\"paginator\">\n    <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M7.41 1.41L6 0L0 6L6 12L7.41 10.59L2.83 6L7.41 1.41Z\" />\n    </svg>\n  </div>\n\n  <ul>\n    <li>{{label}}</li>\n    <li>{{label}}</li>\n    <li [ngClass]=\"classes\">{{label}}</li>\n    <li>{{label}}</li>\n    <li>{{label}}</li>\n    <li>{{label}}</li>\n  </ul>\n\n  <div class=\"paginator\">\n    <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M1.99984 0L0.589844 1.41L5.16984 6L0.589844 10.59L1.99984 12L7.99984 6L1.99984 0Z\"/>\n    </svg>\n  </div>\n  <div class=\"paginator\">\n    <svg width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M0.589844 1.41L5.17984 6L0.589844 10.59L1.99984 12L7.99984 6L1.99984 0L0.589844 1.41ZM10.9998 0H12.9998V12H10.9998V0Z\" />\n    </svg>\n  </div>\n</div>\n"
        },
        {
            "name": "PopConfirmComponent",
            "id": "component-PopConfirmComponent-ed90cde9f9a428adaae816acf1c7cff8",
            "file": "src/app/pop-confirm/pop-confirm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pop-confirm",
            "styleUrls": [
                "./pop-confirm.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pop-confirm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "caption",
                    "defaultValue": "'Are you sure to delete this task?'",
                    "line": 16
                },
                {
                    "name": "horizontal",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "vertical",
                    "defaultValue": "false",
                    "line": 10
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-pop-confirm',\n  templateUrl: './pop-confirm.component.html',\n  styleUrls: ['./pop-confirm.component.scss']\n})\nexport class PopConfirmComponent {\n  @Input()\n  vertical = false;\n\n  @Input()\n  horizontal = false;\n\n  @Input()\n  caption = 'Are you sure to delete this task?' \n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".popconfirm {\n  padding: 12px 16px;\n  width: 270px;\n  background: #ffffff;\n  border-radius: 4px;\n  position: relative;\n  margin: 2em auto;\n  h4 {\n    font-size: 16px;\n    font-weight: normal;\n    margin: 0px 8px;\n    display: inline-block;\n    color: #595959;\n  }\n  .btns {\n    display: flex;\n    flex-direction: row-reverse;\n    margin: 15px;\n    button {\n      padding: 5px 12px;\n      box-sizing: border-box;\n      border-radius: 4px;\n      margin: 0px 8px;\n      font-size: 14px;\n      &.b-btn {\n        color: #ffffff;\n        background: #1890ff;\n        border: 1px solid #1890ff;\n      }\n      &.w-btn {\n        color: #595959;\n        background: #ffffff;\n        border: 1px solid #d9d9d9;\n      }\n    }\n  }\n  &::before {\n    content: \"\";\n    position: absolute;\n    display: block;\n    width: 0px;\n    left: 0;\n    top: 50%;\n    border: 12px solid transparent;\n    border-left: 0;\n    border-right: 12px solid #5494db;\n    transform: translate(calc(-100% - 5px), -50%);\n  }\n}\n",
                    "styleUrl": "./pop-confirm.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"popconfirm\">\n  <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M6.99967 0.333984C3.31301 0.333984 0.333008 3.31398 0.333008 7.00065C0.333008 10.6873 3.31301 13.6673 6.99967 13.6673C10.6863 13.6673 13.6663 10.6873 13.6663 7.00065C13.6663 3.31398 10.6863 0.333984 6.99967 0.333984ZM9.86634 9.86732C9.60634 10.1273 9.18634 10.1273 8.92634 9.86732L6.99967 7.94065L5.07301 9.86732C4.81301 10.1273 4.39301 10.1273 4.13301 9.86732C3.87301 9.60732 3.87301 9.18732 4.13301 8.92732L6.05967 7.00065L4.13301 5.07398C3.87301 4.81398 3.87301 4.39398 4.13301 4.13398C4.39301 3.87398 4.81301 3.87398 5.07301 4.13398L6.99967 6.06065L8.92634 4.13398C9.18634 3.87398 9.60634 3.87398 9.86634 4.13398C10.1263 4.39398 10.1263 4.81398 9.86634 5.07398L7.93967 7.00065L9.86634 8.92732C10.1197 9.18065 10.1197 9.60732 9.86634 9.86732Z\"\n      fill=\"black\" />\n  </svg>\n  <h4>\n    {{caption}}\n  </h4>\n  <div class=\"btns\">\n    <button class=\"b-btn\">Yes</button>\n    <button class=\"w-btn\">No</button>\n  </div>\n</div>\n"
        },
        {
            "name": "PopoverComponent",
            "id": "component-PopoverComponent-cfe35f27f5e55c34c8678223d740415e",
            "file": "src/app/popover/popover.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-popover",
            "styleUrls": [
                "./popover.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./popover.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bottom",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "center",
                    "defaultValue": "false",
                    "line": 34
                },
                {
                    "name": "down",
                    "defaultValue": "false",
                    "line": 37
                },
                {
                    "name": "left",
                    "defaultValue": "false",
                    "line": 25
                },
                {
                    "name": "popover_content",
                    "defaultValue": "'Popover Content goes here and here and here'",
                    "line": 16
                },
                {
                    "name": "popover_title",
                    "defaultValue": "'Popover Title'",
                    "line": 13
                },
                {
                    "name": "right",
                    "defaultValue": "false",
                    "line": 28
                },
                {
                    "name": "title",
                    "defaultValue": "'Default Title'",
                    "line": 10
                },
                {
                    "name": "top",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "up",
                    "defaultValue": "false",
                    "line": 31
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-popover',\n  templateUrl: './popover.component.html',\n  styleUrls: ['./popover.component.scss']\n})\nexport class PopoverComponent {\n  @Input()\n  title = 'Default Title';\n\n  @Input()\n  popover_title = 'Popover Title';\n\n  @Input()\n  popover_content = 'Popover Content goes here and here and here';\n\n  @Input()\n  top = false;\n\n  @Input()\n  bottom = false;\n\n  @Input()\n  left = false;\n\n  @Input()\n  right = false;\n\n  @Input()\n  up = false;\n\n  @Input()\n  center = false;\n\n  @Input()\n  down = false;\n\n  public get Tooltip(): string[] {\n    let mode = '';\n    if (this.top) {\n      mode = 'top';\n    } else if (this.bottom) {\n      mode = 'bottom';\n    } else if (this.left) {\n      mode = 'left';\n    } else if (this.right) {\n      mode = 'right';\n    }\n    if (this.center) {\n      mode += ' center';\n    }else if (this.down) {\n      mode += ' down';\n    }else if (this.up) {\n      mode += ' up';\n    }\n    return [mode]\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".popover_wrapper {\n  position: relative;\n  text-align: center;\n  display: inline-block;\n  h2 {\n    color: #595959;\n    text-transform: capitalize;\n  }\n  .popover {\n    width: 100%;\n    position: absolute;\n    visibility: hidden;\n    display: inline-block;\n    background: #ffffff;\n    border-radius: 4px;\n    padding: 10px 0px;\n    transform: translate(0, 10px);\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n    z-index: 1;\n    &.top {\n      bottom: 100%;\n      left: 0%;\n      &.up {\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 100%;\n          left: 50%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color: #FFFFFF transparent transparent transparent;\n        }\n      }\n      &.center {\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 100%;\n          left: 50%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color: #FFFFFF transparent transparent transparent;\n        }\n      }\n      &.down {\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 100%;\n          left: 75%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color: #FFFFFF transparent transparent transparent;\n        }\n      }\n    }\n    &.bottom {\n      top: 110%;\n      left: 0%;\n      &.up {\n        &::after {\n          content: \"\";\n          position: absolute;\n          bottom: 100%;\n          left: 15%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color:  transparent transparent #FFFFFF transparent;\n        }\n      }\n      &.center {\n        &::after {\n          content: \"\";\n          position: absolute;\n          bottom: 100%;\n          left: 50%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color: transparent transparent #FFFFFF transparent;\n        }\n      }\n      &.down {\n        &::after {\n          content: \"\";\n          position: absolute;\n          bottom: 100%;\n          left: 80%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color: transparent transparent #FFFFFF transparent;\n        }\n      }\n    }\n    &.left {\n      right: 100%;\n      &.up {\n        top: 0%;\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 18%;\n          left: 100%;\n          margin-top: -5px;\n          border: 5px solid;\n          border-color:  transparent transparent transparent #FFFFFF;\n        }\n      }\n      &.center {\n        top: -25%;\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 50%;\n          left: 100%;\n          margin-top: -5px;\n          border: 5px solid;\n          border-color: transparent transparent transparent #FFFFFF;\n        }\n      }\n      &.down {\n        top: -30%;\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 70%;\n          left: 100%;\n          margin-top: -5px;\n          border: 5px solid;\n          border-color: transparent transparent transparent #FFFFFF;\n        }\n      }\n    }\n    &.right {\n      left: 100%;\n      &.up {\n        top: 0%;\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 15%;\n          right: 100%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color:  transparent #FFFFFF transparent transparent;\n        }\n      }\n      &.center {\n        top: -25%;\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 50%;\n          right: 100%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color: transparent #FFFFFF transparent transparent;\n        }\n      }\n      &.down {\n        top: -30%;\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 70%;\n          right: 100%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color: transparent #FFFFFF transparent transparent;\n        }\n      }\n    }\n    h3{\n      margin: 0;\n      padding: 15px 15px 20px;\n      font-size: 16px;\n      color: #595959;\n      text-transform: capitalize;\n      border-bottom: 1px solid #D9D9D9;;\n    }\n    p{\n      color: #8C8C8C;\n      font-size: 14px;\n      padding: 10px 15px;\n    }\n  }\n  &:hover{\n    .popover{\n      z-index: 10;\n      visibility: visible;\n      transform: translate(0, 0px);\n      transition: all 0.5s cubic-bezier(0.75, -0.02, 0.2, 0.97);\n    }\n  }\n}\n",
                    "styleUrl": "./popover.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "Tooltip": {
                    "name": "Tooltip",
                    "getSignature": {
                        "name": "Tooltip",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 39
                    }
                }
            },
            "templateData": "<div class=\"popover_wrapper\">\n  <h2>{{ title }}</h2>\n  <div class=\"popover\" [ngClass]='Tooltip'>\n    <h3 class=\"popover_tilte\"> {{ popover_title }} </h3>\n    <p class=\"popover_content\"> Popover Content goes here and here and here </p>\n  </div>\n</div>\n"
        },
        {
            "name": "RadioButtonComponent",
            "id": "component-RadioButtonComponent-f413a18eab78aaf2bfdb6e05021ddf8e",
            "file": "src/app/radio-button/radio-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-radio-button",
            "styleUrls": [
                "./radio-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radio-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "labelText",
                    "defaultValue": "'Label'",
                    "line": 13
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-radio-button',\n  templateUrl: './radio-button.component.html',\n  styleUrls: ['./radio-button.component.scss']\n})\nexport class RadioButtonComponent {\n  @Input()\n  label = false;\n\n  @Input()\n  labelText = 'Label';\n  \n  public get Label(): string[]{\n    let mode = '';\n    if(this.label){\n      mode = 'visibility';\n    }else{\n      mode = 'hidden';\n    }\n    return [ mode ];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\n  display: block;\n  position: relative;\n  padding-left: 25px;\n  margin-bottom: 12px;\n  cursor: pointer;\n  font-size: 18px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  color: #595959;\n  input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    &:checked {\n      ~ .checkmark {\n        background-color:white ;\n        &:after {\n          display: block;\n        }\n      }\n    }\n  }\n  .checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 16px;\n    width: 16px;\n    background-color: #fff;\n    border-radius: 50%;\n    border: 1px solid #1890FF;\n    &:after {\n      content: \"\";\n      position: absolute;\n      display: none;\n    }\n    &:after {\n      top: 4px;\n     left: 4px;\n     width: 8px;\n     height: 8px;\n     border-radius: 50%;\n     background: #1890FF;\n   }\n\n  }\n  &:hover {\n    input {\n      ~ .checkmark {\n        border: 1px solid #1890FF;\n      }\n    }\n  }\n  &:disabled{\n    color: #BFBFBF;\n  }\n}\n.hidden {\n  display: none;\n}\n.visibility {\n  display: block;\n}\n",
                    "styleUrl": "./radio-button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "Label": {
                    "name": "Label",
                    "getSignature": {
                        "name": "Label",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<label class=\"container\">\n  <span [ngClass]=\"Label\"> {{labelText}} </span>\n  <input type=\"radio\" name=\"radio\">\n  <span class=\"checkmark\"></span>\n</label>\n"
        },
        {
            "name": "RateComponent",
            "id": "component-RateComponent-0ff98bc9e61e5cc9493772338b8c1651",
            "file": "src/app/rate/rate.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-rate",
            "styleUrls": [
                "./rate.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./rate.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-rate',\n  templateUrl: './rate.component.html',\n  styleUrls: ['./rate.component.scss']\n})\nexport class RateComponent{\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import url(//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css);\n\n.rating {\n  border: none;\n  float: left;\n}\n.rating > input {\n  display: none;\n}\n.rating > label:before {\n  margin: 5px;\n  font-size: 1.25em;\n  font-family: \"FontAwesome\";\n  display: inline-block;\n  content: \"\\f005\";\n}\n.rating > .half:before {\n  content: \"\\f089\";\n  position: absolute;\n}\n.rating > label {\n  color: #d9d9d9;\n  float: right;\n}\n.rating > input:checked ~ label,\n.rating:not(:checked) > label:hover,\n.rating:not(:checked) > label:hover ~ label,\n.rating > input:checked + label:hover,\n.rating > input:checked ~ label:hover,\n.rating > label:hover ~ input:checked ~ label,\n.rating > input:checked ~ label:hover ~ label {\n  color: #faad14;\n}\n",
                    "styleUrl": "./rate.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<fieldset class=\"rating\">\n  <input type=\"radio\" id=\"star5\" name=\"rating\" value=\"5\" />\n  <label class=\"full\" for=\"star5\" title=\"Awesome - 5 stars\"></label>\n\n  <input type=\"radio\" id=\"star4half\" name=\"rating\" value=\"4 and a half\" />\n  <label class=\"half\" for=\"star4half\" title=\"Pretty good - 4.5 stars\"></label>\n\n  <input type=\"radio\" id=\"star4\" name=\"rating\" value=\"4\" />\n  <label class=\"full\" for=\"star4\" title=\"Pretty good - 4 stars\"></label>\n\n  <input type=\"radio\" id=\"star3half\" name=\"rating\" value=\"3 and a half\" />\n  <label class=\"half\" for=\"star3half\" title=\"Meh - 3.5 stars\"></label>\n\n  <input type=\"radio\" id=\"star3\" name=\"rating\" value=\"3\" />\n  <label class=\"full\" for=\"star3\" title=\"Meh - 3 stars\"></label>\n\n  <input type=\"radio\" id=\"star2half\" name=\"rating\" value=\"2 and a half\" />\n  <label class=\"half\" for=\"star2half\" title=\"Kinda bad - 2.5 stars\"></label>\n\n  <input type=\"radio\" id=\"star2\" name=\"rating\" value=\"2\" />\n  <label class=\"full\" for=\"star2\" title=\"Kinda bad - 2 stars\"></label>\n\n  <input type=\"radio\" id=\"star1half\" name=\"rating\" value=\"1 and a half\" />\n  <label class=\"half\" for=\"star1half\" title=\"Meh - 1.5 stars\"></label>\n\n  <input type=\"radio\" id=\"star1\" name=\"rating\" value=\"1\" />\n  <label class=\"full\" for=\"star1\" title=\"Sucks big time - 1 star\"></label>\n\n  <input type=\"radio\" id=\"starhalf\" name=\"rating\" value=\"half\" />\n  <label class=\"half\" for=\"starhalf\" title=\"Sucks big time - 0.5 stars\"></label>\n</fieldset>\n"
        },
        {
            "name": "ResultComponent",
            "id": "component-ResultComponent-a33726b98e86252a2d37376640a9e83b",
            "file": "src/app/result/result.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-result",
            "styleUrls": [
                "./result.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./result.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "caption",
                    "defaultValue": "'Lorem Ipsum is simply dummy text of the printing and typesetting'",
                    "line": 16
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "line": 26
                },
                {
                    "name": "header",
                    "defaultValue": "'Lorem Ipsum is simply dummy text of the printing and typesetting'",
                    "line": 13
                },
                {
                    "name": "info",
                    "defaultValue": "false",
                    "line": 20
                },
                {
                    "name": "label",
                    "defaultValue": "'Label'",
                    "line": 10
                },
                {
                    "name": "success",
                    "defaultValue": "false",
                    "line": 29
                },
                {
                    "name": "warning",
                    "defaultValue": "false",
                    "line": 23
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.scss']\n})\nexport class ResultComponent {\n  @Input()\n  label = 'Label';\n\n  @Input()\n  header = 'Lorem Ipsum is simply dummy text of the printing and typesetting';\n\n  @Input()\n  caption = 'Lorem Ipsum is simply dummy text of the printing and typesetting';\n  \n  //Icons Type\n  @Input()\n  info = false;\n\n  @Input()\n  warning = false;\n\n  @Input()\n  error = false;\n\n  @Input()\n  success = false;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".result {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  .caption{\n    margin:30px 0px 15px;\n    h3{\n      font-size: 20px;\n      margin: 4px 0px;\n    }\n    p{\n      margin: 4px 0px;\n      color: #595959;\n      font-size: 17px;\n    }\n  }\n  .error-msg{\n    padding: 24px 48px;\n    background: #F5F5F5;\n    margin: 20px 0px;\n    width: 592px;\n    text-align: left;\n    h4{\n      margin: 14px 0px;\n      color: #262626;\n      font-size: 16px;\n    }\n    ul{\n      list-style: none;\n      padding-left: 10px;\n      li{\n        font-size: 14px;\n        padding-left: 0;\n        margin: 15px 0;\n        a{\n          color: #1890FF;\n          text-decoration: none;\n        }\n      }\n    }\n  }\n  .btns {\n    button {\n      padding: 8px 12px;\n      box-shadow: 0px 2px 4px #e8e8e8, 0px 4px 8px #f5f5f5;\n      border-radius: 8px;\n      margin: 0px 5px;\n      font-size: 16px;\n      &.blue-btn {\n        color: #ffffff;\n        background: #1890ff;\n        border: 1px solid #1890ff;\n      }\n      &.white-btn {\n        color: #595959;\n        background: #ffffff;\n        border: 1px solid #d9d9d9;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./result.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"result\">\n  <div class=\"icons\">\n    <svg *ngIf='success' width=\"68\" height=\"68\" viewBox=\"0 0 68 68\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M34.0003 0.666016C15.6003 0.666016 0.666992 15.5993 0.666992 33.9994C0.666992 52.3994 15.6003 67.3327 34.0003 67.3327C52.4003 67.3327 67.3337 52.3994 67.3337 33.9994C67.3337 15.5993 52.4003 0.666016 34.0003 0.666016ZM24.967 48.2994L13.0003 36.3327C11.7003 35.0327 11.7003 32.9327 13.0003 31.6327C14.3003 30.3327 16.4003 30.3327 17.7003 31.6327L27.3337 41.2327L50.267 18.2993C51.567 16.9993 53.667 16.9993 54.967 18.2993C56.267 19.5993 56.267 21.6993 54.967 22.9993L29.667 48.2994C28.4003 49.5994 26.267 49.5994 24.967 48.2994Z\"\n        fill=\"#52C41A\" />\n    </svg>\n    <svg *ngIf='info' width=\"68\" height=\"68\" viewBox=\"0 0 68 68\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M34.0003 0.666016C15.6003 0.666016 0.666992 15.5993 0.666992 33.9994C0.666992 52.3994 15.6003 67.3327 34.0003 67.3327C52.4003 67.3327 67.3337 52.3994 67.3337 33.9994C67.3337 15.5993 52.4003 0.666016 34.0003 0.666016ZM34.0003 50.666C32.167 50.666 30.667 49.166 30.667 47.3327V33.9994C30.667 32.166 32.167 30.666 34.0003 30.666C35.8337 30.666 37.3337 32.166 37.3337 33.9994V47.3327C37.3337 49.166 35.8337 50.666 34.0003 50.666ZM37.3337 23.9993H30.667V17.3327H37.3337V23.9993Z\"\n        fill=\"#1890FF\" />\n    </svg>\n    <svg *ngIf='warning' width=\"70\" height=\"61\" viewBox=\"0 0 70 61\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M4.09974 61.0005H65.8664C68.4331 61.0005 70.0331 58.2339 68.7664 56.0005L37.8664 2.66719C36.5664 0.433854 33.3664 0.433854 32.0997 2.66719L1.19974 56.0005C-0.0669251 58.2339 1.53307 61.0005 4.09974 61.0005ZM38.3331 51.0005H31.6664V44.3338H38.3331V51.0005ZM34.9997 37.6672C33.1664 37.6672 31.6664 36.1672 31.6664 34.3339V27.6672C31.6664 25.8339 33.1664 24.3339 34.9997 24.3339C36.8331 24.3339 38.3331 25.8339 38.3331 27.6672V34.3339C38.3331 36.1672 36.8331 37.6672 34.9997 37.6672Z\"\n        fill=\"#FAAD14\" />\n    </svg>\n    <svg *ngIf='error' width=\"68\" height=\"68\" viewBox=\"0 0 68 68\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M34.0003 0.666016C15.567 0.666016 0.666992 15.566 0.666992 33.9994C0.666992 52.4327 15.567 67.3327 34.0003 67.3327C52.4337 67.3327 67.3337 52.4327 67.3337 33.9994C67.3337 15.566 52.4337 0.666016 34.0003 0.666016ZM50.667 45.966L45.967 50.666L34.0003 38.6993L22.0337 50.666L17.3337 45.966L29.3003 33.9994L17.3337 22.0327L22.0337 17.3327L34.0003 29.2994L45.967 17.3327L50.667 22.0327L38.7003 33.9994L50.667 45.966Z\"\n        fill=\"#F5222D\" />\n    </svg>\n  </div>\n  <div class=\"caption\">\n    <h3> {{header}} </h3>\n    <p> {{caption}} </p>\n  </div>\n  <div class=\"error-msg\" *ngIf='error'>\n    <h4>Lorem Ipsum is simply dummy text of the printing:</h4>\n    <ul>\n      <li>\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M6.99967 0.333984C3.31301 0.333984 0.333008 3.31398 0.333008 7.00065C0.333008 10.6873 3.31301 13.6673 6.99967 13.6673C10.6863 13.6673 13.6663 10.6873 13.6663 7.00065C13.6663 3.31398 10.6863 0.333984 6.99967 0.333984ZM6.99967 12.334C4.05967 12.334 1.66634 9.94065 1.66634 7.00065C1.66634 4.06065 4.05967 1.66732 6.99967 1.66732C9.93967 1.66732 12.333 4.06065 12.333 7.00065C12.333 9.94065 9.93967 12.334 6.99967 12.334ZM9.39301 3.66732L6.99967 6.06065L4.60634 3.66732L3.66634 4.60732L6.05967 7.00065L3.66634 9.39398L4.60634 10.334L6.99967 7.94065L9.39301 10.334L10.333 9.39398L7.93967 7.00065L10.333 4.60732L9.39301 3.66732Z\" fill=\"#F5222D\"/>\n        </svg>\n        Lorem Ipsum is simply dummy\n        <a>text of the printing ></a>\n      </li>\n      <li>\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M6.99967 0.333984C3.31301 0.333984 0.333008 3.31398 0.333008 7.00065C0.333008 10.6873 3.31301 13.6673 6.99967 13.6673C10.6863 13.6673 13.6663 10.6873 13.6663 7.00065C13.6663 3.31398 10.6863 0.333984 6.99967 0.333984ZM6.99967 12.334C4.05967 12.334 1.66634 9.94065 1.66634 7.00065C1.66634 4.06065 4.05967 1.66732 6.99967 1.66732C9.93967 1.66732 12.333 4.06065 12.333 7.00065C12.333 9.94065 9.93967 12.334 6.99967 12.334ZM9.39301 3.66732L6.99967 6.06065L4.60634 3.66732L3.66634 4.60732L6.05967 7.00065L3.66634 9.39398L4.60634 10.334L6.99967 7.94065L9.39301 10.334L10.333 9.39398L7.93967 7.00065L10.333 4.60732L9.39301 3.66732Z\" fill=\"#F5222D\"/>\n        </svg>\n        Lorem Ipsum is simply dummy\n        <a>text of the typesetting ></a>\n      </li>\n    </ul>\n  </div>\n  <div class=\"btns\">\n    <button class=\"blue-btn\">{{label}}</button>\n    <button *ngIf='error || success' class=\"white-btn\">{{label}}</button>\n  </div>\n</div>\n"
        },
        {
            "name": "RightIconButtonComponent",
            "id": "component-RightIconButtonComponent-0f5943dc2d72e474ad84a5d5d2dc5ff1",
            "file": "src/app/right-icon-button/right-icon-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-right-icon-button",
            "styleUrls": [
                "./right-icon-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./right-icon-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "danger",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "dangerOutline",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "dashed",
                    "defaultValue": "false",
                    "line": 25
                },
                {
                    "name": "label",
                    "defaultValue": "'Label'",
                    "line": 34
                },
                {
                    "name": "outline",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "primaryOutline",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 28,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-right-icon-button',\n  templateUrl: './right-icon-button.component.html',\n  styleUrls: ['./right-icon-button.component.scss']\n})\nexport class RightIconButtonComponent implements OnInit {\n  @Input()\n  primary = false;\n\n  @Input()\n  primaryOutline = false;\n\n  @Input()\n  danger = false;\n\n  @Input()\n  dangerOutline  = false;\n\n  @Input()\n  outline = false;\n\n  @Input()\n  dashed = false;\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  @Input()\n  backgroundColor?: string;\n\n  @Input()\n  label = 'Label';\n\n  public get classes(): string[]{\n    let mode = '';\n    if(this.primary){\n      mode = 'primary-button';\n    }else if(this.primaryOutline){\n      mode = 'primaryOutline-button';\n    }else if(this.danger){\n      mode = 'danger-button';\n    }else if(this.dangerOutline){\n      mode = 'dangerOutline-button';\n    }else if(this.outline){\n      mode = 'outline-button';\n    }else if(this.dashed){\n      mode = 'dashed-button';\n    }\n    return ['button', `button-${this.size}`, mode ]\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".button {\n  cursor: pointer;\n  border: 0;\n  outline: none;\n  margin: 0 5px;\n  font-size: 18px;\n  box-shadow: 0px 2px 4px #BAE7FF, 0px 4px 8px #E6F7FF;\n  &.button-small {\n    padding: 5px 5px;\n    border-radius: 4px;\n  }\n  &.button-medium {\n    padding: 8px 12px;\n    border-radius: 8px;\n  }\n  &.button-large {\n    padding: 12px 16px;\n    border-radius: 12px;\n  }\n  &.danger-button {\n    color: white;\n    background-color: #F5222D;\n    &:hover{\n      background-color: #FF4D4F;\n      border: 1px solid #FF4D4F;\n    }\n    &:focus{\n      background-color: #FF7875;\n      border: 1px solid #FF7875;\n    }\n    &:active{\n      background-color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n    svg{\n      color: white;\n    }\n  }\n  &.primary-button {\n    color: white;\n    background-color: #1890FF;\n    &:hover{\n      background-color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      background-color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      background-color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n    i{\n      color: white;\n    }\n  }\n  &.outline-button {\n    color: #595959;\n    background-color: transparent;\n    border: 1px solid #595959;\n    &:hover{\n      color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n    i{\n      color: #595959;\n    }\n  }\n  &.dashed-button {\n    color: #595959;\n    background-color: transparent;\n    border: 1px dashed #595959;\n    &:hover{\n      color: #40A9FF;\n      border: 1px dashed #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      border: 1px dashed #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      border: 1px dashed #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px dashed #D9D9D9;\n    }\n  }\n  &.primaryOutline-button{\n    color: #1890FF;\n    background-color: transparent;\n    border: 1px solid #1890FF;\n    &:hover{\n      color: #40A9FF;\n      background-color: transparent;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      background-color: transparent;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      background-color: transparent;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: transparent;\n      border: 1px solid #D9D9D9;\n    }\n  }\n  &.dangerOutline-button{\n    color: #F5222D;\n    background-color: transparent;\n    border: 1px solid #F5222D;\n    &:hover{\n      color: #FF4D4F;\n      background-color: transparent;\n      border: 1px solid #FF4D4F;\n    }\n    &:focus{\n      color: #FF7875;\n      background-color: transparent;\n      border: 1px solid #FF7875;\n    }\n    &:active{\n      color: #CF1322;\n      background-color: transparent;\n      border: 1px solid #CF1322;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: transparent;\n      border: 1px solid #D9D9D9;\n    }\n  }\n}\n",
                    "styleUrl": "./right-icon-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 52
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 36
                    }
                }
            },
            "templateData": "<button type=\"button\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n  {{ label }}\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" fill=\"currentColor\" class=\"bi bi-info-circle\" viewBox=\"0 0 16 16\">\n    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path d=\"M8.93 6.588l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\n  </svg>\n</button>\n"
        },
        {
            "name": "SelectButtonComponent",
            "id": "component-SelectButtonComponent-f32d3e43828bff795c9dc3d54b10ad16",
            "file": "src/app/select-button/select-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-button",
            "styleUrls": [
                "./select-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "labelText",
                    "defaultValue": "'Label'",
                    "line": 13
                },
                {
                    "name": "message",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "messageText",
                    "defaultValue": "'Input caption message'",
                    "line": 19
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 22,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-select-button',\n  templateUrl: './select-button.component.html',\n  styleUrls: ['./select-button.component.scss']\n})\nexport class SelectButtonComponent{\n  @Input()\n  label = false;\n\n  @Input()\n  labelText = 'Label';\n\n  @Input()\n  message = false;\n\n  @Input()\n  messageText = 'Input caption message';\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  public get Label(): string[]{\n    let mode = '';\n    if(this.label){\n      mode = 'visibility';\n    }else{\n      mode = 'hidden';\n    }\n    return [ mode ]\n  }\n\n  public get classes(): string[]{\n\n    return [ this.size  ]\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "body {\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Roboto\", sans-serif;\n}\n* {\n  box-sizing: border-box;\n}\n.hidden {\n  display: none;\n}\n.visibility {\n  display: block;\n}\nspan {\n  color: #262626;\n  margin: 2px 5px;\n  font-size: 14px;\n  line-height: 22px;\n}\n.select {\n  position: relative;\n  min-width: 200px;\n  select {\n    cursor: pointer;\n    -webkit-appearance: none;\n    border: 1px solid #d9d9d9;\n    border-radius: 4px;\n    background: #fff;\n    box-shadow: 0 1px 3px -2px #9098a9;\n    color: #595959;\n    font-family: inherit;\n    font-size: 16px;\n    transition: all 150ms ease;\n    box-shadow: inset 1px 0px 0px #d9d9d9, inset 0px 1px 0px #d9d9d9,\n      inset -1px 0px 0px #d9d9d9, inset 0px -1px 0px #d9d9d9;\n    &.small {\n      font-size: 14px;\n      padding: 5px 26px 5px 8px;\n    }\n    &.medium {\n      font-size: 14px;\n      padding: 9px 26px 9px 12px;\n    }\n    &.large {\n      font-size: 16px;\n      padding: 12px 26px 12px 14px;\n    }\n    &:hover {\n      box-shadow: inset 1px 0px 0px #40a9ff, inset 0px 1px 0px #40a9ff,\n        inset -1px 0px 0px #40a9ff, inset 0px -1px 0px #40a9ff;\n    }\n    &:focus {\n      box-shadow: -1px -1px 3px rgba(64, 169, 255, 0.25),\n        1px 1px 3px rgba(64, 169, 255, 0.25), inset 1px 0px 0px #40a9ff,\n        inset 0px 1px 0px #40a9ff, inset -1px 0px 0px #40a9ff,\n        inset 0px -1px 0px #40a9ff;\n      outline: none;\n    }\n    &:disabled {\n      background: #f5f5f5;\n      box-shadow: inset 1px 0px 0px #d9d9d9, inset 0px 1px 0px #d9d9d9,\n        inset -1px 0px 0px #d9d9d9, inset 0px -1px 0px #d9d9d9;\n      color: #bfbfbf;\n    }\n    &:required:invalid {\n      color: #5a667f;\n    }\n    option {\n      padding: 5px;\n      color: #595959;\n      font-size: 14px;\n      &:hover {\n        background-color: #e6f7ff;\n      }\n      &:disabled {\n        color: #bfbfbf;\n      }\n      &[value=\"\"][disabled] {\n        display: none;\n      }\n      &:checked {\n        color: #595959;\n        &:hover {\n          background-color: #e6f7ff;\n        }\n      }\n    }\n  }\n  p {\n    font-size: 14px;\n    color: #8c8c8c;\n    margin: 2px 4px;\n  }\n}\n.select svg {\n  position: absolute;\n  right: 12px;\n  top: calc(50% - 3px);\n  width: 10px;\n  height: 6px;\n  stroke-width: 2px;\n  stroke: #9098a9;\n  fill: none;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  pointer-events: none;\n}\n\n.select select option .select select:focus {\n  outline: none;\n  border-color: #07f;\n  box-shadow: 0 0 0 2px rgba(0, 119, 255, 0.2);\n}\n.select select:hover + svg {\n  stroke: #07f;\n}\n.sprites {\n  position: absolute;\n  width: 0;\n  height: 0;\n  pointer-events: none;\n  user-select: none;\n}\n",
                    "styleUrl": "./select-button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "Label": {
                    "name": "Label",
                    "getSignature": {
                        "name": "Label",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 24
                    }
                },
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 34
                    }
                }
            },
            "templateData": "<span [ngClass]=\"Label\">{{ labelText }}</span>\n<label class=\"select\" for=\"slct\">\n  <select id=\"slct\" required=\"required\" [ngClass]=\"classes\">\n    <option value=\"\" disabled=\"disabled\" selected=\"selected\">Select option</option>\n    <option value=\"#\">One</option>\n    <option value=\"#\">Two</option>\n    <option value=\"#\">Three</option>\n    <option value=\"#\">Four</option>\n    <option value=\"#\">Five</option>\n    <option value=\"#\">Six</option>\n    <option value=\"#\">Seven</option>\n  </select>\n  <svg>\n    <use xlink:href=\"#select-arrow-down\"></use>\n  </svg>\n  <p *ngIf=\"message\">{{messageText}}</p>\n</label>\n\n<svg class=\"sprites\">\n  <symbol id=\"select-arrow-down\" viewbox=\"0 0 10 6\">\n    <polyline points=\"1 1 5 5 9 1\"></polyline>\n  </symbol>\n</svg>\n\n\n"
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-42c2862822e9c725438b4e8417487e9d",
            "file": "src/app/stepper/stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stepper",
            "styleUrls": [
                "./stepper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "arrow",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "icon",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 22,
                    "type": "\"small\" | \"medium\" | \"large\""
                },
                {
                    "name": "vertical",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "verticalArrow",
                    "defaultValue": "false",
                    "line": 19
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "value",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "minus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70
                },
                {
                    "name": "plus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-stepper',\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.scss']\n})\nexport class StepperComponent{\n  @Input()\n  icon = false;\n\n  @Input()\n  arrow = false;\n\n  @Input()\n  vertical = false;\n\n  @Input()\n  verticalArrow = false;\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  value: number = 0;\n\n  public get Icon(): string[]{\n    let mode = '';\n    if(this.icon){\n      mode = 'visibility';\n    }else{\n      mode = 'hidden';\n    }\n    return [ mode ]\n  }\n  public get Arrow(): string[]{\n    let mode = '';\n    if(this.arrow){\n      mode = 'visibility ';\n    }else{\n      mode = 'hidden';\n    }\n    return [ mode ]\n  }\n  public get  VerticalArrow(): string[]{\n    let mode = '';\n    if(this.verticalArrow){\n      mode = 'visibility ';\n    }else{\n      mode = 'hidden';\n    }\n    return [ mode ]\n  }\n  public get classes(): string[]{\n    let mode = '';\n    if(this.vertical){\n      mode = 'vertical ';\n    }else{\n      mode = 'horizontal';\n    }\n    return [ this.size , mode ]\n  }\n  plus(){\n    let num  = parseInt((<HTMLInputElement>document.getElementById(\"no\")).value);\n    if(num >= 30){\n      this.value = num;\n    }else{\n      this.value = num + 1;\n    }\n  }\n  minus(){\n    let num  = parseInt((<HTMLInputElement>document.getElementById(\"no\")).value);\n    if(0 >= num){\n      this.value = num;\n    }else{\n      this.value = num - 1;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".stepper-input {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #ffffff;\n  border: 1px solid #d9d9d9;\n  &:disabled{\n    background: #F5F5F5;\n  }\n  &.small {\n    font-size: 14px;\n    padding: 8px;\n    border-radius: 4px;\n  }\n  &.medium {\n    font-size: 14px;\n    padding: 12px;\n    border-radius: 8px;\n  }\n  &.large {\n    font-size: 16px;\n    padding: 14px;\n    border-radius: 12px;\n  }\n  &.vertical{\n    flex-direction: column;\n    width: 2%;\n  }\n  &.horizontal{\n    flex-direction: row;\n    width: 8%;\n  }\n  button {\n    background: #fafafa;\n    border-radius: 100px;\n    margin: 0px 8px;\n    padding: 6px;\n    color: #595959;\n    outline: none;\n    border: none;\n    &:hover{\n      background: #E6F7FF;\n      color: #40A9FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n    }\n  }\n  input{\n    color: #595959;\n    outline: none;\n    border: none;\n    width: 40px;\n    text-align: center;\n    font-size: 16px;\n    margin: 5px;\n  }\n}\n.hidden {\n  display: none;\n}\n.visibility {\n  display: block;\n}\n",
                    "styleUrl": "./stepper.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "Icon": {
                    "name": "Icon",
                    "getSignature": {
                        "name": "Icon",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 26
                    }
                },
                "Arrow": {
                    "name": "Arrow",
                    "getSignature": {
                        "name": "Arrow",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 35
                    }
                },
                "VerticalArrow": {
                    "name": "VerticalArrow",
                    "getSignature": {
                        "name": "VerticalArrow",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 44
                    }
                },
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 53
                    }
                }
            },
            "templateData": "<div class=\"stepper-input\" [ngClass]=\"classes\">\n  <button class=\"btn btn-left\" (click)='minus()'>\n    <svg [ngClass]=\"Arrow\" width=\"6\" height=\"10\" viewBox=\"0 0 6 10\" fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M5.25742 8.23307L2.02409 4.99974L5.25742 1.76641C5.58242 1.44141 5.58242 0.916406 5.25742 0.591406C4.93242 0.266406 4.40742 0.266406 4.08242 0.591406L0.257422 4.41641C-0.0675781 4.74141 -0.0675781 5.26641 0.257422 5.59141L4.08242 9.41641C4.40742 9.74141 4.93242 9.74141 5.25742 9.41641C5.57409 9.09141 5.58242 8.55807 5.25742 8.23307Z\" />\n    </svg>\n    <svg [ngClass]=\"Icon\" width=\"12\" height=\"2\" viewBox=\"0 0 12 2\" fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M10.9994 1.83268H0.999349C0.541016 1.83268 0.166016 1.45768 0.166016 0.999349C0.166016 0.541016 0.541016 0.166016 0.999349 0.166016H10.9994C11.4577 0.166016 11.8327 0.541016 11.8327 0.999349C11.8327 1.45768 11.4577 1.83268 10.9994 1.83268Z\" />\n    </svg>\n    <svg [ngClass]=\"VerticalArrow\" width=\"10\" height=\"6\" viewBox=\"0 0 10 6\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M1.76693 5.25742L5.00026 2.02409L8.23359 5.25742C8.55859 5.58242 9.08359 5.58242 9.40859 5.25742C9.73359 4.93242 9.73359 4.40742 9.40859 4.08242L5.58359 0.257422C5.25859 -0.0675783 4.73359 -0.0675783 4.40859 0.257422L0.583594 4.08242C0.258594 4.40742 0.258594 4.93242 0.583594 5.25742C0.908594 5.57409 1.44193 5.58242 1.76693 5.25742Z\"/>\n    </svg>\n  </button>\n\n  <input id=\"no\" class=\"input-box\" type=\"text\" value=\"{{value}}\" placeholder=\"No.\" />\n\n  <button class=\"btn btn-right\" (click)='plus()'>\n    <svg [ngClass]=\"Arrow\" width=\"6\" height=\"10\" viewBox=\"0 0 6 10\" fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M0.741797 8.23307L3.97513 4.99974L0.741797 1.76641C0.416797 1.44141 0.416797 0.916406 0.741797 0.591406C1.0668 0.266406 1.5918 0.266406 1.9168 0.591406L5.7418 4.41641C6.0668 4.74141 6.0668 5.26641 5.7418 5.59141L1.9168 9.41641C1.5918 9.74141 1.0668 9.74141 0.741797 9.41641C0.42513 9.09141 0.416797 8.55807 0.741797 8.23307Z\" />\n    </svg>\n    <svg [ngClass]=\"Icon\" width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M10.9994 6.83268H6.83268V10.9994C6.83268 11.4577 6.45768 11.8327 5.99935 11.8327C5.54102 11.8327 5.16602 11.4577 5.16602 10.9994V6.83268H0.999349C0.541016 6.83268 0.166016 6.45768 0.166016 5.99935C0.166016 5.54102 0.541016 5.16602 0.999349 5.16602H5.16602V0.999349C5.16602 0.541016 5.54102 0.166016 5.99935 0.166016C6.45768 0.166016 6.83268 0.541016 6.83268 0.999349V5.16602H10.9994C11.4577 5.16602 11.8327 5.54102 11.8327 5.99935C11.8327 6.45768 11.4577 6.83268 10.9994 6.83268Z\" />\n    </svg>\n    <svg [ngClass]=\"VerticalArrow\" width=\"10\" height=\"6\" viewBox=\"0 0 10 6\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M1.76693 0.741797L5.00026 3.97513L8.23359 0.741797C8.55859 0.416797 9.08359 0.416797 9.40859 0.741797C9.73359 1.0668 9.73359 1.5918 9.40859 1.9168L5.58359 5.7418C5.25859 6.0668 4.73359 6.0668 4.40859 5.7418L0.583594 1.9168C0.258594 1.5918 0.258594 1.0668 0.583594 0.741796C0.908594 0.42513 1.44193 0.416797 1.76693 0.741797Z\"/>\n    </svg>\n  </button>\n</div>\n"
        },
        {
            "name": "SwitchButtonComponent",
            "id": "component-SwitchButtonComponent-bf812ad58d3aa579f3872a17c42bf203",
            "file": "src/app/switch-button/switch-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-switch-button",
            "styleUrls": [
                "./switch-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./switch-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 10,
                    "type": ""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-switch-button',\n  templateUrl: './switch-button.component.html',\n  styleUrls: ['./switch-button.component.scss']\n})\nexport class SwitchButtonComponent{\n  @Input()\n  size:  'medium' = 'medium';\n\n  @Input()\n  label= false;\n  /*\n  public get classes(): string[]{\n    //let mode = this.label ? ':before :after' : '';\n    return [`${this.size}`]\n  }*/\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".onoffswitch {\n  position: relative;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  width: 50px;\n  .onoffswitch-checkbox {\n    position: absolute;\n    opacity: 0;\n    pointer-events: none;\n    &:checked + .onoffswitch-label .onoffswitch-inner {\n      margin-left: 0;\n    }\n    &:checked + .onoffswitch-label .onoffswitch-switch {\n      right: 0px;\n    }\n  }\n  .onoffswitch-label {\n    display: block;\n    overflow: hidden;\n    cursor: pointer;\n    border: none;\n    border-radius: 100px;\n    .onoffswitch-inner {\n      display: block;\n      width: 200%;\n      margin-left: -100%;\n      transition: margin 0.3s ease-in 0s;\n      &:before , &:after{\n        display: block;\n        float: left;\n        width: 50%;\n        height: 30px;\n        padding: 0;\n        line-height: 30px;\n        font-size: 12px;\n        color: white;\n        font-family: Trebuchet, Arial, sans-serif;\n        font-weight: bold;\n        box-sizing: border-box;\n      }\n      &:before {\n        content: \"\";\n        padding-left: 8px;\n        background-color: #1890ff;\n        color: #ffffff;\n        &:disabled{\n          background-color: #BAE7FF;\n        }\n      }\n      &:after {\n        content: \"\";\n        padding-right: 8px;\n        background-color: #bfbfbf;\n        color: #ffffff;\n        text-align: right;\n        &:disabled{\n          background-color: #E8E8E8;\n        }\n      }\n    }\n    .onoffswitch-switch {\n      display: block;\n      width: 18px;\n      margin: 6px;\n      background: #ffffff;\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 20px;\n      border: none;\n      border-radius: 20px;\n      transition: all 0.3s ease-in 0s;\n    }\n  }\n}\n",
                    "styleUrl": "./switch-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"onoffswitch\">\n  <input type=\"checkbox\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"myonoffswitch\" tabindex=\"0\" checked>\n  <label class=\"onoffswitch-label\" for=\"myonoffswitch\">\n      <span class=\"onoffswitch-inner\"></span>\n      <span class=\"onoffswitch-switch\"></span>\n  </label>\n</div>\n"
        },
        {
            "name": "TabComponent",
            "id": "component-TabComponent-46067d8784e50d5541482568bdd65992",
            "file": "src/app/tab/tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab",
            "styleUrls": [
                "./tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "closable",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "icon",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "label",
                    "defaultValue": "'Tab'",
                    "line": 10
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 19,
                    "type": "\"small\" | \"medium\" | \"large\" | \"pane\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.scss']\n})\nexport class TabComponent {\n  @Input()\n  label = 'Tab';\n\n  @Input()\n  closable = false;\n\n  @Input()\n  icon = false;\n\n  @Input()\n  size: 'small' | 'medium' | 'large' | 'pane' = 'medium';\n\n  @Input()\n  active = false\n  public get classes(): string[] {\n    let mode = this.active ? 'active' : 'inactive';\n    return ['tab', this.size, mode]\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".tab{\n  font-size: 16px;\n  background: #FFF;\n  text-align: center;\n  display: inline-block;\n  outline: none;\n  border: none;\n  &.pane{\n    padding: 13px 16px;\n    box-shadow: inset 1px 0px 0px #D9D9D9, inset 0px 1px 0px #D9D9D9, inset -1px 0px 0px #D9D9D9;\n    &.inactive{\n      color: #595959;\n      background: #F5F5F5;\n      &:hover{\n        color: #40A9FF;\n      }\n      &:checked{\n        color: #096DD9;\n      }\n      &:disabled{\n        color: #BFBFBF;\n      }\n    }\n    &.active{\n      color: #1890FF;\n      background: #FFFFFF;\n      &:hover{\n        color: #40A9FF;\n      }\n      &:checked{\n        color: #096DD9;\n      }\n    }\n  }\n  &.small{\n    padding: 6px 6px 6px 12px;\n    box-shadow: inset 0px -1px 0px #D9D9D9;\n    &.inactive{\n      color: #595959;\n      &:hover{\n        color: #40A9FF;\n      }\n      &:checked{\n        color: #096DD9;\n      }\n      &:disabled{\n        color: #BFBFBF;\n      }\n    }\n    &.active{\n      color: #1890FF;\n      box-shadow: inset 0px -2px 0px #1890FF;\n      &:hover{\n        color: #40A9FF;\n        box-shadow: inset 0px -2px 0px #1890FF;\n      }\n      &:checked{\n        color: #096DD9;\n        box-shadow: inset 0px -2px 0px #1890FF;\n      }\n    }\n  }\n  &.medium{\n    padding: 12px 12px 12px 15px;\n    box-shadow: inset 0px -1px 0px #D9D9D9;\n    &.inactive{\n      color: #595959;\n      &:hover{\n        color: #40A9FF;\n      }\n      &:checked{\n        color: #096DD9;\n      }\n      &:disabled{\n        color: #BFBFBF;\n      }\n    }\n    &.active{\n      color: #1890FF;\n      box-shadow: inset 0px -2px 0px #1890FF;\n      &:hover{\n        color: #40A9FF;\n        box-shadow: inset 0px -2px 0px #1890FF;\n      }\n      &:checked{\n        color: #096DD9;\n        box-shadow: inset 0px -2px 0px #1890FF;\n      }\n    }\n  }\n  &.large{\n    padding: 13px 13px 13px 18px;\n    box-shadow: inset 0px -1px 0px #D9D9D9;\n    &.inactive{\n      color: #595959;\n      &:hover{\n        color: #40A9FF;\n      }\n      &:checked{\n        color: #096DD9;\n      }\n      &:disabled{\n        color: #BFBFBF;\n      }\n    }\n    &.active{\n      color: #1890FF;\n      box-shadow: inset 0px -2px 0px #1890FF;\n      &:hover{\n        color: #40A9FF;\n        box-shadow: inset 0px -2px 0px #1890FF;\n      }\n      &:checked{\n        color: #096DD9;\n        box-shadow: inset 0px -2px 0px #1890FF;\n      }\n    }\n  }\n  svg{\n    margin: 0px  0px 0px 12px;\n    &.icon{\n      margin: -3px 0px;\n    }\n  }\n  span{\n    margin: 0px 4px;\n  }\n}\n",
                    "styleUrl": "./tab.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 23
                    }
                }
            },
            "templateData": "<button [ngClass]='classes'>\n  <svg class=\"icon\" *ngIf='icon' width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M8.16699 4.83268H9.83366V6.49935H8.16699V4.83268ZM8.16699 8.16602H9.83366V13.166H8.16699V8.16602ZM9.00033 0.666016C4.40033 0.666016 0.666992 4.39935 0.666992 8.99935C0.666992 13.5993 4.40033 17.3327 9.00033 17.3327C13.6003 17.3327 17.3337 13.5993 17.3337 8.99935C17.3337 4.39935 13.6003 0.666016 9.00033 0.666016ZM9.00033 15.666C5.32533 15.666 2.33366 12.6743 2.33366 8.99935C2.33366 5.32435 5.32533 2.33268 9.00033 2.33268C12.6753 2.33268 15.667 5.32435 15.667 8.99935C15.667 12.6743 12.6753 15.666 9.00033 15.666Z\" />\n  </svg>\n  <span>{{label}}</span>\n  <svg *ngIf='closable' (click)=\"this.parentElement.style.display='none'\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M9.66634 1.27398L8.72634 0.333984L4.99967 4.06065L1.27301 0.333984L0.333008 1.27398L4.05967 5.00065L0.333008 8.72732L1.27301 9.66732L4.99967 5.94065L8.72634 9.66732L9.66634 8.72732L5.93967 5.00065L9.66634 1.27398Z\"\n      fill=\"#595959\" />\n  </svg>\n</button>\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-313cbf3fb4355d691102292549fb068e",
            "file": "src/app/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "border",
                    "defaultValue": "false",
                    "line": 12
                },
                {
                    "name": "order_base",
                    "defaultValue": "false",
                    "line": 15
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "line": 18
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 22,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checked",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "items",
                    "defaultValue": "[0, 1, 2]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "toggleEvent",
                    "defaultValue": "new EventEmitter()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "selectAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n})\nexport class TableComponent {\n  toggleEvent = new EventEmitter();\n  items = [0, 1, 2];\n  @Input()\n  border = false;\n\n  @Input()\n  order_base = false;\n\n  @Input()\n  selected = false;\n\n  checked = true;\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  public get classes(): string[] {\n    let mode = this.border ? 'border' : '';\n    let order = this.order_base ? 'order-base' : '';\n    let select = this.selected ? 'selected' : '';\n    return [this.size, mode, order, select];\n  }\n\n  selectAll() {\n    let items = document.getElementsByName('item');\n    console.log(items);\n    for(let item in items){\n      /*if(item.type = 'checkbox'){\n        item.checked = true;\n      }*/\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table{\n  th, td{\n    border-spacing: 0;\n    font-size: 14px;\n    &.small{\n      padding: 8px 24px;\n    }\n    &.medium{\n      padding: 12px 24px;\n    }\n    &.large{\n      padding: 16px 24px;\n    }\n  }\n  th{\n    color: #8C8C8C;\n    background: #FAFAFA;\n    svg{\n      color: #85A5FF;\n      margin-left: 6px;\n    }\n    &.border{\n      box-shadow: inset 1px 0px 0px #D9D9D9, inset 0px 1px 0px #D9D9D9, inset -1px 0px 0px #D9D9D9, inset 0px -1px 0px #D9D9D9;\n      /*\n      &.order-base{\n        box-shadow: inset 1px 0px 0px #D9D9D9, inset 0px 1px 0px #D9D9D9, inset -1px 0px 0px #D9D9D9, inset 0px -1px 0px #40A9FF;\n      }*/\n    }\n    /*\n    &.order-base{\n      box-shadow: inset 1px 0px 0px #D9D9D9, inset 0px 1px 0px #D9D9D9, inset -1px 0px 0px #D9D9D9, inset 0px -1px 0px #40A9FF;\n    }*/\n    &.selected{\n      background: #69C0FF;\n      color: #FFFFFF;\n      &.border{\n        box-shadow: inset 1px 0px 0px #40A9FF, inset 0px 1px 0px #40A9FF, inset -1px 0px 0px #40A9FF, inset 0px -1px 0px #40A9FF;\n      }\n      svg{\n        color: #FFFFFF;\n      }\n    }\n  }\n  td{\n    color: #595959;\n    background: #FFFFFF;\n    box-shadow: inset 0px 1px 0px #D9D9D9, inset 0px -1px 0px #D9D9D9;\n    &.border{\n      box-shadow: inset 1px 0px 0px #D9D9D9, inset 0px 1px 0px #D9D9D9, inset -1px 0px 0px #D9D9D9, inset 0px -1px 0px #D9D9D9;\n    }\n    &.selected{\n      background: #BAE7FF;\n      color:  #595959;;\n      box-shadow: inset 0px 1px 0px #40A9FF, inset 0px -1px 0px #40A9FF;\n      svg{\n        color: #FFFFFF;\n      }\n    }\n    &:hover{\n      background: #E6F7FF;\n      box-shadow: inset 0px 1px 0px #91D5FF, inset 0px -1px 0px #91D5FF;\n    }\n  }\n}\n\n",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 24
                    }
                }
            },
            "templateData": "<table CELLSPACING=0>\n  <thead>\n    <tr>\n      <th [ngClass]='classes'><input type=\"checkbox\" (click)='selectAll(this)'></th>\n      <th [ngClass]='classes'>\n        Table Header\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M4.41691 0.917318V7.43315L1.57025 4.58648C1.34275 4.35898 0.969414 4.35898 0.741914 4.58648C0.514414 4.81398 0.514414 5.18148 0.741914 5.40898L4.58608 9.25315C4.81358 9.48065 5.18108 9.48065 5.40858 9.25315L9.25275 5.40898C9.48025 5.18148 9.48025 4.81398 9.25275 4.58648C9.02525 4.35898 8.65775 4.35898 8.43025 4.58648L5.58358 7.43315V0.917318C5.58358 0.596484 5.32108 0.333984 5.00025 0.333984C4.67941 0.333984 4.41691 0.596484 4.41691 0.917318Z\" />\n        </svg>\n      </th>\n      <th [ngClass]='classes'>\n        Table Header\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M4.41691 0.917318V7.43315L1.57025 4.58648C1.34275 4.35898 0.969414 4.35898 0.741914 4.58648C0.514414 4.81398 0.514414 5.18148 0.741914 5.40898L4.58608 9.25315C4.81358 9.48065 5.18108 9.48065 5.40858 9.25315L9.25275 5.40898C9.48025 5.18148 9.48025 4.81398 9.25275 4.58648C9.02525 4.35898 8.65775 4.35898 8.43025 4.58648L5.58358 7.43315V0.917318C5.58358 0.596484 5.32108 0.333984 5.00025 0.333984C4.67941 0.333984 4.41691 0.596484 4.41691 0.917318Z\" />\n        </svg>\n      </th>\n      <th [ngClass]='classes'>\n        Table Header\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M4.41691 0.917318V7.43315L1.57025 4.58648C1.34275 4.35898 0.969414 4.35898 0.741914 4.58648C0.514414 4.81398 0.514414 5.18148 0.741914 5.40898L4.58608 9.25315C4.81358 9.48065 5.18108 9.48065 5.40858 9.25315L9.25275 5.40898C9.48025 5.18148 9.48025 4.81398 9.25275 4.58648C9.02525 4.35898 8.65775 4.35898 8.43025 4.58648L5.58358 7.43315V0.917318C5.58358 0.596484 5.32108 0.333984 5.00025 0.333984C4.67941 0.333984 4.41691 0.596484 4.41691 0.917318Z\" />\n        </svg>\n      </th>\n      <th [ngClass]='classes'>\n        Table Header\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M4.41691 0.917318V7.43315L1.57025 4.58648C1.34275 4.35898 0.969414 4.35898 0.741914 4.58648C0.514414 4.81398 0.514414 5.18148 0.741914 5.40898L4.58608 9.25315C4.81358 9.48065 5.18108 9.48065 5.40858 9.25315L9.25275 5.40898C9.48025 5.18148 9.48025 4.81398 9.25275 4.58648C9.02525 4.35898 8.65775 4.35898 8.43025 4.58648L5.58358 7.43315V0.917318C5.58358 0.596484 5.32108 0.333984 5.00025 0.333984C4.67941 0.333984 4.41691 0.596484 4.41691 0.917318Z\" />\n        </svg>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor='let x of items'>\n      <td [ngClass]='classes'><input type=\"checkbox\" id=\"test\" name='item'></td>\n      <td [ngClass]='classes'>Table Row</td>\n      <td [ngClass]='classes'>Table Row</td>\n      <td [ngClass]='classes'>Table Row</td>\n      <td [ngClass]='classes'>Table Row</td>\n    </tr>\n  </tbody>\n</table>\n\n"
        },
        {
            "name": "TableeComponent",
            "id": "component-TableeComponent-d8b9888a9951d5f05ca7efc9d1328352",
            "file": "src/app/tablee/tablee.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tablee",
            "styleUrls": [
                "./tablee.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tablee.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "border",
                    "defaultValue": "false",
                    "line": 12
                },
                {
                    "name": "order_base",
                    "defaultValue": "false",
                    "line": 15
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "line": 18
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 22,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checked",
                    "defaultValue": "this.onChecked()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "items",
                    "defaultValue": "[0, 1, 2]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "onChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                },
                {
                    "name": "selectAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tablee',\n  templateUrl: './tablee.component.html',\n  styleUrls: ['./tablee.component.scss']\n})\nexport class TableeComponent {\n  items = [0, 1, 2];\n  \n  @Input()\n  border = false;\n\n  @Input()\n  order_base = false;\n\n  @Input()\n  selected = false;\n\n  checked = this.onChecked();\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  public get classes(): string[] {\n    let mode = this.border ? 'border' : '';\n    let order = this.order_base ? 'order-base' : '';\n    let select = this.selected ? 'selected' : '';\n    return [this.size, mode, order, select];\n  }\n\n  onChecked() {\n    /*let checkBox = parseInt((<HTMLInputElement>document.getElementById(\"test\")).value);\n    console.log(checkBox);\n    return true;*/\n  }\n\n  selectAll() {\n    /*let items = document.getElementsByName('item');\n    console.log(items);\n    for(let item in items){\n      //item = true;\n    }\n\n    for(let i = 0; i< items.length; i++){\n      if(items[i].type = 'checkbox'){\n        items[i].checked = true;\n      }\n    }\n    */\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./tablee.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 24
                    }
                }
            },
            "templateData": "<table CELLSPACING=0>\n  <thead>\n    <tr>\n      <th [ngClass]='classes'><input type=\"checkbox\" (click)='selectAll(this)'></th>\n      <th [ngClass]='classes'>\n        Table Header\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M4.41691 0.917318V7.43315L1.57025 4.58648C1.34275 4.35898 0.969414 4.35898 0.741914 4.58648C0.514414 4.81398 0.514414 5.18148 0.741914 5.40898L4.58608 9.25315C4.81358 9.48065 5.18108 9.48065 5.40858 9.25315L9.25275 5.40898C9.48025 5.18148 9.48025 4.81398 9.25275 4.58648C9.02525 4.35898 8.65775 4.35898 8.43025 4.58648L5.58358 7.43315V0.917318C5.58358 0.596484 5.32108 0.333984 5.00025 0.333984C4.67941 0.333984 4.41691 0.596484 4.41691 0.917318Z\" />\n        </svg>\n      </th>\n      <th [ngClass]='classes'>\n        Table Header\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M4.41691 0.917318V7.43315L1.57025 4.58648C1.34275 4.35898 0.969414 4.35898 0.741914 4.58648C0.514414 4.81398 0.514414 5.18148 0.741914 5.40898L4.58608 9.25315C4.81358 9.48065 5.18108 9.48065 5.40858 9.25315L9.25275 5.40898C9.48025 5.18148 9.48025 4.81398 9.25275 4.58648C9.02525 4.35898 8.65775 4.35898 8.43025 4.58648L5.58358 7.43315V0.917318C5.58358 0.596484 5.32108 0.333984 5.00025 0.333984C4.67941 0.333984 4.41691 0.596484 4.41691 0.917318Z\" />\n        </svg>\n      </th>\n      <th [ngClass]='classes'>\n        Table Header\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M4.41691 0.917318V7.43315L1.57025 4.58648C1.34275 4.35898 0.969414 4.35898 0.741914 4.58648C0.514414 4.81398 0.514414 5.18148 0.741914 5.40898L4.58608 9.25315C4.81358 9.48065 5.18108 9.48065 5.40858 9.25315L9.25275 5.40898C9.48025 5.18148 9.48025 4.81398 9.25275 4.58648C9.02525 4.35898 8.65775 4.35898 8.43025 4.58648L5.58358 7.43315V0.917318C5.58358 0.596484 5.32108 0.333984 5.00025 0.333984C4.67941 0.333984 4.41691 0.596484 4.41691 0.917318Z\" />\n        </svg>\n      </th>\n      <th [ngClass]='classes'>\n        Table Header\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M4.41691 0.917318V7.43315L1.57025 4.58648C1.34275 4.35898 0.969414 4.35898 0.741914 4.58648C0.514414 4.81398 0.514414 5.18148 0.741914 5.40898L4.58608 9.25315C4.81358 9.48065 5.18108 9.48065 5.40858 9.25315L9.25275 5.40898C9.48025 5.18148 9.48025 4.81398 9.25275 4.58648C9.02525 4.35898 8.65775 4.35898 8.43025 4.58648L5.58358 7.43315V0.917318C5.58358 0.596484 5.32108 0.333984 5.00025 0.333984C4.67941 0.333984 4.41691 0.596484 4.41691 0.917318Z\" />\n        </svg>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor='let x of items'>\n      <td [ngClass]='classes'><input type=\"checkbox\" (click)='onChecked()' id=\"test\" name='item'></td>\n      <td [ngClass]='classes'>Table Row</td>\n      <td [ngClass]='classes'>Table Row</td>\n      <td [ngClass]='classes'>Table Row</td>\n      <td [ngClass]='classes'>Table Row</td>\n    </tr>\n  </tbody>\n</table>\n\n"
        },
        {
            "name": "TextareaComponent",
            "id": "component-TextareaComponent-c146dedc915afaf73a7e8d0deb07abed",
            "file": "src/app/textarea/textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-textarea",
            "styleUrls": [
                "./textarea.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./textarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "false",
                    "line": 11
                },
                {
                    "name": "labelText",
                    "defaultValue": "'Label'",
                    "line": 14
                },
                {
                    "name": "message",
                    "defaultValue": "false",
                    "line": 17
                },
                {
                    "name": "messageText",
                    "defaultValue": "'Input caption message'",
                    "line": 23
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 26,
                    "type": "\"small\" | \"medium\" | \"large\""
                },
                {
                    "name": "valid",
                    "defaultValue": "false",
                    "line": 20
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.scss']\n})\n\nexport class TextareaComponent{\n  @Input()\n  label = false;\n\n  @Input()\n  labelText = 'Label';\n\n  @Input()\n  message = false;\n\n  @Input()\n  valid = false;\n\n  @Input()\n  messageText = 'Input caption message';\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  public get Message(): string[]{\n    let mode = '';\n    if(this.message){\n      mode = 'visibility ';\n      if(this.valid){\n        mode += ' valid';\n      }else{\n        mode += ' invalid';\n      }\n    }else{\n      mode = 'hidden';\n    }\n    return [ mode ]\n  }\n\n  public get classes(): string[]{\n    return [ this.size  ]\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "label {\n  color: #262626;\n  margin: 2px;\n  font-size: 14px;\n  line-height: 22px;\n  display: block;\n}\n.valid{\n  color: #52C41A;\n}\n.invalid{\n  color: #F5222D;\n}\np {\n  font-size: 14px;\n  color: #8c8c8c;\n  margin: 2px 0px;\n  &.valid{\n    color: #52C41A;\n  }\n  &.invalid{\n    color: #F5222D;\n  }\n}\n.textarea {\n  textarea {\n    background: #fafafa;\n    border: 1px solid #d9d9d9;\n    border-radius: 4px;\n    margin: 2px 0px;\n    color: #595959;\n    &::placeholder {\n      color: #bfbfbf;\n      font-size: 16px;\n    }\n    &:hover {\n      box-shadow: inset 1px 0px 0px #40a9ff, inset 0px 1px 0px #40a9ff,\n        inset -1px 0px 0px #40a9ff, inset 0px -1px 0px #40a9ff;\n    }\n    &:focus {\n      box-shadow: -1px -1px 3px rgba(64, 169, 255, 0.25),\n        1px 1px 3px rgba(64, 169, 255, 0.25), inset 1px 0px 0px #40a9ff,\n        inset 0px 1px 0px #40a9ff, inset -1px 0px 0px #40a9ff,\n        inset 0px -1px 0px #40a9ff;\n      outline: none;\n    }\n    &:invalid {\n      box-shadow: inset 1px 0px 0px #f5222d, inset 0px 1px 0px #f5222d,\n        inset -1px 0px 0px #f5222d, inset 0px -1px 0px #f5222d;\n    }\n    &:disabled{\n      background: #F5F5F5;\n    }\n    &.small {\n      font-size: 14px;\n      padding: 5px 8px;\n    }\n    &.medium {\n      font-size: 14px;\n      padding: 9px 12px;\n    }\n    &.large {\n      font-size: 16px;\n      padding: 12px 14px;\n    }\n  }\n}\n",
                    "styleUrl": "./textarea.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "Message": {
                    "name": "Message",
                    "getSignature": {
                        "name": "Message",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 28
                    }
                },
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            },
            "templateData": "<div class=\"textarea\">\n  <label *ngIf=\"label\">{{ labelText }}</label>\n  <textarea [ngClass]=\"classes\" name=\"\" id=\"\" cols=\"25\" rows=\"7\" placeholder=\"Textarea Placeholder\"></textarea>\n  <p [ngClass]=\"Message\"> {{messageText}} </p>\n</div>\n"
        },
        {
            "name": "TextButtonComponent",
            "id": "component-TextButtonComponent-9bf6b2f04b8594710eea68a21afa1c62",
            "file": "src/app/text-button/text-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text-button",
            "styleUrls": [
                "./text-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "danger",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "dangerOutline",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "dashed",
                    "defaultValue": "false",
                    "line": 25
                },
                {
                    "name": "label",
                    "defaultValue": "'Label'",
                    "line": 34
                },
                {
                    "name": "outline",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "primaryOutline",
                    "defaultValue": "false",
                    "line": 13
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 28,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-text-button',\n  templateUrl: './text-button.component.html',\n  styleUrls: ['./text-button.component.scss']\n})\nexport class TextButtonComponent implements OnInit {\n  @Input()\n  primary = false;\n\n  @Input()\n  primaryOutline = false;\n\n  @Input()\n  danger = false;\n\n  @Input()\n  dangerOutline  = false;\n\n  @Input()\n  outline = false;\n\n  @Input()\n  dashed = false;\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  @Input()\n  backgroundColor?: string;\n\n  @Input()\n  label = 'Label';\n\n  public get classes(): string[]{\n    let mode = '';\n    if(this.primary){\n      mode = 'primary-button';\n    }else if(this.primaryOutline){\n      mode = 'primaryOutline-button';\n    }else if(this.danger){\n      mode = 'danger-button';\n    }else if(this.dangerOutline){\n      mode = 'dangerOutline-button';\n    }else if(this.outline){\n      mode = 'outline-button';\n    }else if(this.dashed){\n      mode = 'dashed-button';\n    }\n    return ['button', `button-${this.size}`, mode ]\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".button {\n  cursor: pointer;\n  border: 0;\n  outline: none;\n  margin: 0 5px;\n  font-size: 18px;\n  box-shadow: 0px 2px 4px #BAE7FF, 0px 4px 8px #E6F7FF;\n  &.button-small {\n    padding: 5px 5px;\n    border-radius: 4px;\n  }\n  &.button-medium {\n    padding: 8px 12px;\n    border-radius: 8px;\n  }\n  &.button-large {\n    padding: 12px 16px;\n    border-radius: 12px;\n  }\n  &.danger-button {\n    color: white;\n    background-color: #F5222D;\n    &:hover{\n      background-color: #FF4D4F;\n      border: 1px solid #FF4D4F;\n    }\n    &:focus{\n      background-color: #FF7875;\n      border: 1px solid #FF7875;\n    }\n    &:active{\n      background-color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n    svg{\n      color: white;\n    }\n  }\n  &.primary-button {\n    color: white;\n    background-color: #1890FF;\n    &:hover{\n      background-color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      background-color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      background-color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n    i{\n      color: white;\n    }\n  }\n  &.outline-button {\n    color: #595959;\n    background-color: transparent;\n    border: 1px solid #595959;\n    &:hover{\n      color: #40A9FF;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px solid #D9D9D9;\n    }\n    i{\n      color: #595959;\n    }\n  }\n  &.dashed-button {\n    color: #595959;\n    background-color: transparent;\n    border: 1px dashed #595959;\n    &:hover{\n      color: #40A9FF;\n      border: 1px dashed #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      border: 1px dashed #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      border: 1px dashed #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: #F5F5F5;\n      border: 1px dashed #D9D9D9;\n    }\n  }\n  &.primaryOutline-button{\n    color: #1890FF;\n    background-color: transparent;\n    border: 1px solid #1890FF;\n    &:hover{\n      color: #40A9FF;\n      background-color: transparent;\n      border: 1px solid #40A9FF;\n    }\n    &:focus{\n      color: #69C0FF;\n      background-color: transparent;\n      border: 1px solid #69C0FF;\n    }\n    &:active{\n      color: #69C0FF;\n      background-color: transparent;\n      border: 1px solid #69C0FF;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: transparent;\n      border: 1px solid #D9D9D9;\n    }\n  }\n  &.dangerOutline-button{\n    color: #F5222D;\n    background-color: transparent;\n    border: 1px solid #F5222D;\n    &:hover{\n      color: #FF4D4F;\n      background-color: transparent;\n      border: 1px solid #FF4D4F;\n    }\n    &:focus{\n      color: #FF7875;\n      background-color: transparent;\n      border: 1px solid #FF7875;\n    }\n    &:active{\n      color: #CF1322;\n      background-color: transparent;\n      border: 1px solid #CF1322;\n    }\n    &:disabled{\n      color: #BFBFBF;\n      background-color: transparent;\n      border: 1px solid #D9D9D9;\n    }\n  }\n}\n",
                    "styleUrl": "./text-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 52
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 36
                    }
                }
            },
            "templateData": "<button type=\"button\" [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n  {{ label }}\n</button>\n"
        },
        {
            "name": "TimeComponent",
            "id": "component-TimeComponent-407089ea2f54fc3534df743b295f1a2c",
            "file": "src/app/time/time.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-time",
            "styleUrls": [
                "./time.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./time.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "false",
                    "line": 10
                },
                {
                    "name": "labelText",
                    "defaultValue": "'Label'",
                    "line": 13
                },
                {
                    "name": "message",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "messageText",
                    "defaultValue": "'Input caption message'",
                    "line": 19
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "line": 22,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-time',\n  templateUrl: './time.component.html',\n  styleUrls: ['./time.component.scss']\n})\nexport class TimeComponent{\n  @Input()\n  label = false;\n\n  @Input()\n  labelText = 'Label';\n\n  @Input()\n  message = false;\n\n  @Input()\n  messageText = 'Input caption message';\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n\n  public get classes(): string[] {\n    return [this.size]\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".hidden {\n  display: none;\n}\n.visibility {\n  display: block;\n}\nlabel {\n  color: #262626;\n  margin: 2px;\n  font-size: 14px;\n  line-height: 22px;\n  display: block;\n}\np {\n  font-size: 14px;\n  color: #8c8c8c;\n  margin: 2px 0px;\n  &.valid {\n    color: #52c41a;\n  }\n  &.invalid {\n    color: #f5222d;\n  }\n}\n.time {\n  input {\n    background: #ffffff;\n    border: 1px solid #bfbfbf;\n    box-sizing: border-box;\n    border-radius: 4px;\n    color: #595959;\n    &::placeholder {\n      color: #bfbfbf;\n      font-size: 16px;\n    }\n    &:hover {\n      box-shadow: inset 1px 0px 0px #40a9ff, inset 0px 1px 0px #40a9ff,\n        inset -1px 0px 0px #40a9ff, inset 0px -1px 0px #40a9ff;\n    }\n    &:invalid {\n      box-shadow: inset 1px 0px 0px #f5222d, inset 0px 1px 0px #f5222d,\n        inset -1px 0px 0px #f5222d, inset 0px -1px 0px #f5222d;\n    }\n    &:disabled{\n      background: #F5F5F5;\n    }\n    &:focus {\n      outline: none;\n      box-shadow: -1px -1px 3px rgba(64, 169, 255, 0.25),\n        1px 1px 3px rgba(64, 169, 255, 0.25), inset 1px 0px 0px #40a9ff,\n        inset 0px 1px 0px #40a9ff, inset -1px 0px 0px #40a9ff,\n        inset 0px -1px 0px #40a9ff;\n    }\n    &.small {\n      font-size: 14px;\n      padding: 5px 8px;\n    }\n    &.medium {\n      font-size: 14px;\n      padding: 9px 12px;\n    }\n    &.large {\n      font-size: 16px;\n      padding: 12px 14px;\n    }\n  }\n}\ninput[type=\"time\"]:not(.has-value):before{\n  color: #bfbfbf;\n  content: attr(placeholder);\n}\n\n\ninput[type=time]::-webkit-datetime-edit-text {\n  -webkit-appearance: none;\n  display: none;\n}\ninput[type=time]::-webkit-datetime-edit-month-field{\n  -webkit-appearance: none;\n  display: none;\n}\ninput[type=time]::-webkit-datetime-edit-day-field {\n  -webkit-appearance: none;\n  display: none;\n}\ninput[type=time]::-webkit-datetime-edit-year-field {\n  -webkit-appearance: none;\n  display: none;\n}\n",
                    "styleUrl": "./time.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 25
                    }
                }
            },
            "templateData": "<div class=\"time\">\n  <label *ngIf=\"label\">{{ labelText }}</label>\n  <input [ngClass]=\"classes\" type=\"time\" placeholder=\"Select Time: \" />\n  <p *ngIf=\"message\">{{messageText}}</p>\n</div>\n"
        },
        {
            "name": "TooltipComponent",
            "id": "component-TooltipComponent-060984a0bf8e961bb34d62b27e89396c",
            "file": "src/app/tooltip/tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tooltip",
            "styleUrls": [
                "./tooltip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tooltip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bottom",
                    "defaultValue": "false",
                    "line": 19
                },
                {
                    "name": "center",
                    "defaultValue": "false",
                    "line": 32
                },
                {
                    "name": "down",
                    "defaultValue": "false",
                    "line": 35
                },
                {
                    "name": "hover_text",
                    "defaultValue": "'Tooltip Text'",
                    "line": 13
                },
                {
                    "name": "left",
                    "defaultValue": "false",
                    "line": 22
                },
                {
                    "name": "main_text",
                    "defaultValue": "'Tooltip Hover'",
                    "line": 10
                },
                {
                    "name": "right",
                    "defaultValue": "false",
                    "line": 25
                },
                {
                    "name": "top",
                    "defaultValue": "false",
                    "line": 16
                },
                {
                    "name": "up",
                    "defaultValue": "false",
                    "line": 29
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.scss']\n})\nexport class TooltipComponent {\n  @Input()\n  main_text = 'Tooltip Hover';\n\n  @Input()\n  hover_text = 'Tooltip Text';\n\n  @Input()\n  top = false;\n\n  @Input()\n  bottom = false;\n\n  @Input()\n  left = false;\n\n  @Input()\n  right = false;\n\n\n  @Input()\n  up = false;\n\n  @Input()\n  center = false;\n\n  @Input()\n  down = false;\n\n  public get Tooltip(): string[] {\n    let mode = '';\n    if (this.top) {\n      mode = 'top';\n    } else if (this.bottom) {\n      mode = 'bottom';\n    } else if (this.left) {\n      mode = 'left';\n    } else if (this.right) {\n      mode = 'right';\n    }\n    if (this.center) {\n      mode += ' center';\n    }else if (this.down) {\n      mode += ' down';\n    }else if (this.up) {\n      mode += ' up';\n    }\n    return [mode]\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": " .tooltip {\n  position: relative;\n  text-align: center;\n  display: inline-block;\n  padding: 10px ;\n  .tooltiptext {\n    width: 100%;\n    visibility: hidden;\n    position: absolute;\n    background: #000000;\n    border-radius: 4px;\n    padding: 5px 8px;\n    z-index: 1;\n    font-size: 14px;\n    color: #fff;\n    transform: translate(0, 10px);\n    &.top {\n      bottom: 100%;\n      left: 0%;\n      &.up {\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 100%;\n          left: 50%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color: #000 transparent transparent transparent;\n        }\n      }\n      &.center {\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 100%;\n          left: 50%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color: #000 transparent transparent transparent;\n        }\n      }\n      &.down {\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 100%;\n          left: 75%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color: #000 transparent transparent transparent;\n        }\n      }\n    }\n    &.bottom {\n      top: 110%;\n      left: 0%;\n      &.up {\n        &::after {\n          content: \"\";\n          position: absolute;\n          bottom: 100%;\n          left: 15%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color:  transparent transparent #000 transparent;\n        }\n      }\n      &.center {\n        &::after {\n          content: \"\";\n          position: absolute;\n          bottom: 100%;\n          left: 50%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color: transparent transparent #000 transparent;\n        }\n      }\n      &.down {\n        &::after {\n          content: \"\";\n          position: absolute;\n          bottom: 100%;\n          left: 80%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color: transparent transparent #000 transparent;\n        }\n      }\n    }\n    &.left {\n      right: 100%;\n      &.up {\n        top: 0%;\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 18%;\n          left: 100%;\n          margin-top: -5px;\n          border: 5px solid;\n          border-color:  transparent transparent transparent #000;\n        }\n      }\n      &.center {\n        top: 10%;\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 50%;\n          left: 100%;\n          margin-top: -5px;\n          border: 5px solid;\n          border-color: transparent transparent transparent #000;\n        }\n      }\n      &.down {\n        top: 10%;\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 70%;\n          left: 100%;\n          margin-top: -5px;\n          border: 5px solid;\n          border-color: transparent transparent transparent #000;\n        }\n      }\n    }\n    &.right {\n      left: 100%;\n      &.up {\n        top: 0%;\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 15%;\n          right: 100%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color:  transparent #000 transparent transparent;\n        }\n      }\n      &.center {\n        top: -25%;\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 35%;\n          right: 100%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color: transparent #000 transparent transparent;\n        }\n      }\n      &.down {\n        top: -30%;\n        &::after {\n          content: \"\";\n          position: absolute;\n          top: 50%;\n          right: 100%;\n          margin-left: -5px;\n          border: 5px solid;\n          border-color: transparent #000 transparent transparent;\n        }\n      }\n    }\n  }\n  &:hover {\n    .tooltiptext {\n      visibility: visible;\n      z-index: 10;\n      transform: translate(0, 0px);\n      transition: all 0.5s cubic-bezier(0.75, -0.02, 0.2, 0.97);\n    }\n  }\n}\n",
                    "styleUrl": "./tooltip.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "Tooltip": {
                    "name": "Tooltip",
                    "getSignature": {
                        "name": "Tooltip",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 37
                    }
                }
            },
            "templateData": "<div class=\"tooltip\"> {{main_text}}\n  <span [ngClass]='Tooltip' class=\"tooltiptext\">\n    {{hover_text}}\n  </span>\n</div>\n\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AlertComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "AppTopbarComponent"
                        },
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "BadgesComponent"
                        },
                        {
                            "name": "BreadcrumbComponent"
                        },
                        {
                            "name": "ButtonGroupComponent"
                        },
                        {
                            "name": "ButtonIconComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "ChipsComponent"
                        },
                        {
                            "name": "CounterComponent"
                        },
                        {
                            "name": "DateComponent"
                        },
                        {
                            "name": "DropdownButtonComponent"
                        },
                        {
                            "name": "ExtendedButtonComponent"
                        },
                        {
                            "name": "FacialRateComponent"
                        },
                        {
                            "name": "GlobalBannersAlertComponent"
                        },
                        {
                            "name": "GlobalBannersComponent"
                        },
                        {
                            "name": "GroupPaginationComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "LeftIconButtonComponent"
                        },
                        {
                            "name": "MenuBarItemComponent"
                        },
                        {
                            "name": "MessageComponent"
                        },
                        {
                            "name": "ModelComponent"
                        },
                        {
                            "name": "NotificationComponent"
                        },
                        {
                            "name": "PageHeaderComponent"
                        },
                        {
                            "name": "PaginationComponent"
                        },
                        {
                            "name": "PopConfirmComponent"
                        },
                        {
                            "name": "PopoverComponent"
                        },
                        {
                            "name": "RadioButtonComponent"
                        },
                        {
                            "name": "RateComponent"
                        },
                        {
                            "name": "ResultComponent"
                        },
                        {
                            "name": "RightIconButtonComponent"
                        },
                        {
                            "name": "SelectButtonComponent"
                        },
                        {
                            "name": "StepperComponent"
                        },
                        {
                            "name": "SwitchButtonComponent"
                        },
                        {
                            "name": "TabComponent"
                        },
                        {
                            "name": "TableComponent"
                        },
                        {
                            "name": "TableeComponent"
                        },
                        {
                            "name": "TextButtonComponent"
                        },
                        {
                            "name": "TextareaComponent"
                        },
                        {
                            "name": "TimeComponent"
                        },
                        {
                            "name": "TooltipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Active",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tab.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ActiveNormal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Menu-Bar-Item.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Addable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chips.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Added",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Counter.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Arrow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Stepper.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Banner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Notification.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BasicChange",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BasicConfermation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BasicInformation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Border",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Table.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BottomCenterTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Popover.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BottomCenterTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BottomDownTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Popover.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BottomDownTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BottomUpTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Popover.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BottomUpTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Breadcrumb",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page-Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Notification.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Change",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Closable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tab.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ClosableWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tab.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CloseText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Collapsed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Menu-Bar-Item.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Counter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chips.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Extended-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Left-Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Right-Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Text-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerDropdown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Dropdown-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerOutline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Extended-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerOutline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Left-Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerOutline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Right-Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerOutline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Text-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerOutlineDropdown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Dropdown-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerOutlineIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dashed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Extended-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dashed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Left-Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dashed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Right-Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dashed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Text-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DashedDropdown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Dropdown-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DashedIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chips.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Facial-Rate.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Global-Banners.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Rate.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Table.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Badges.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chips.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DoubleIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DoubleIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Dropdown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Breadcrumb.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Erorr",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Erorr",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Global-Banners.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Erorr",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Result.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Badges.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chips.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Message.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ErrorConfermation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ErrorConfermationWithoutIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ErrorIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Notification.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ErrorInformation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ErrorInformationWithoutIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FullPageHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page-Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Breadcrumb.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Stepper.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "IconChange",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Iconic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chips.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "IconText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Badges.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ImageAvatar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Avatar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ImageAvatarCheck",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Avatar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ImageAvatarClose",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Avatar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ImageAvatarMore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Avatar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ImageAvatarPresence",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Avatar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Important",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Counter.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Global-Banners.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Message.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Result.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "InfoConfermation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "InfoConfermationWithoutIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "InfoIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Notification.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "InfoInformation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "InfoInformationWithoutIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "InvalidMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Date.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "InvalidMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Textarea.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "InvalidMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Time.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Label",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Checkbox.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Label",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Date.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Label",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Pop-Confirm.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Label",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Radio-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Label",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Select-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Label",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Textarea.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Label",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Time.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LeftCenterTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Popover.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LeftCenterTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LeftDownTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Popover.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LeftDownTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LeftIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LeftIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LeftUpTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Popover.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LeftUpTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Link",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Breadcrumb.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LinkIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Breadcrumb.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LinkIconActive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Breadcrumb.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Message.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Logo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Top-Bar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Message",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Date.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Message",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Select-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Message",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Textarea.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Message",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Time.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Checkbox.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Date.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Radio-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Select-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Textarea.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Time.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Normal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Menu-Bar-Item.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OrderBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Table.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OrderBaseWithBorder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Table.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Extended-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Left-Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Right-Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Text-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OutlineDropdown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Dropdown-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OutlineIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button-Group.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OutlineIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OutlineText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button-Group.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Paginator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Group-Paginator.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Paginator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Pagintors.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Positive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chips.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chips.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Counter.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Extended-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Left-Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Right-Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Switch-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Text-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrimaryDropdown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Dropdown-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrimaryIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button-Group.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrimaryIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrimaryInverted",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Counter.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrimaryOutline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Extended-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrimaryOutline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Left-Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrimaryOutline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Right-Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrimaryOutline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Text-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrimaryOutlineDropdown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Dropdown-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrimaryOutlineIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Icon-Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrimaryText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button-Group.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Proccessing",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Badges.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Removable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chips.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Removed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Counter.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "RightCenterTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Popover.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RightCenterTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RightDownTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Popover.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RightDownTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RightIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RightIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RightUpTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Popover.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RightUpTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SearchIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Top-Bar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SearchInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Top-Bar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Selected",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chips.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Selected",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Table.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SubItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Menu-Bar-Item.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Badges.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Global-Banners.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Message.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Result.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessConfermation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessConfermationWithoutIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Notification.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessInformation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessInformationWithoutIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Alert.stories.ts",
                "type": "Story<AlertComponent>",
                "defaultValue": "(args: AlertComponent) => ({\n  component: AlertComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Avatar.stories.ts",
                "type": "Story<AvatarComponent>",
                "defaultValue": "(args: AvatarComponent) => ({\n  component: AvatarComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Badges.stories.ts",
                "type": "Story<BadgesComponent>",
                "defaultValue": "(args: BadgesComponent) => ({\n  component: BadgesComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Breadcrumb.stories.ts",
                "type": "Story<BreadcrumbComponent>",
                "defaultValue": "(args: BreadcrumbComponent) => ({\n  component: BreadcrumbComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button-Group.stories.ts",
                "type": "Story<ButtonGroupComponent>",
                "defaultValue": "(args: ButtonGroupComponent) => ({\n  component: ButtonGroupComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Checkbox.stories.ts",
                "type": "Story<CheckboxComponent>",
                "defaultValue": "(args: CheckboxComponent) => ({\n  component: CheckboxComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chips.stories.ts",
                "type": "Story<ChipsComponent>",
                "defaultValue": "(args: ChipsComponent) => ({\n  component: ChipsComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Counter.stories.ts",
                "type": "Story<CounterComponent>",
                "defaultValue": "(args: CounterComponent) => ({\n  component: CounterComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Date.stories.ts",
                "type": "Story<DateComponent>",
                "defaultValue": "(args: DateComponent) => ({\n  component: DateComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Dropdown-Button.stories.ts",
                "type": "Story<DropdownButtonComponent>",
                "defaultValue": "(args: DropdownButtonComponent) => ({\n  component: DropdownButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Extended-Button.stories.ts",
                "type": "Story<ExtendedButtonComponent>",
                "defaultValue": "(args: ExtendedButtonComponent) => ({\n  component: ExtendedButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Facial-Rate.stories.ts",
                "type": "Story<FacialRateComponent>",
                "defaultValue": "(args: FacialRateComponent) => ({\n  component: FacialRateComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "Story<GlobalBannersAlertComponent>",
                "defaultValue": "(args: GlobalBannersAlertComponent) => ({\n  component: GlobalBannersAlertComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Global-Banners.stories.ts",
                "type": "Story<GlobalBannersComponent>",
                "defaultValue": "(args: GlobalBannersComponent) => ({\n  component: GlobalBannersComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Group-Paginator.stories.ts",
                "type": "Story<GroupPaginationComponent>",
                "defaultValue": "(args: GroupPaginationComponent) => ({\n  component: GroupPaginationComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Icon-Button.stories.ts",
                "type": "Story<ButtonIconComponent>",
                "defaultValue": "(args: ButtonIconComponent) => ({\n  component: ButtonIconComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Input.stories.ts",
                "type": "Story<InputComponent>",
                "defaultValue": "(args: InputComponent) => ({\n  component: InputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Left-Icon-Button.stories.ts",
                "type": "Story<LeftIconButtonComponent>",
                "defaultValue": "(args: LeftIconButtonComponent) => ({\n  component: LeftIconButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Menu-Bar-Item.stories.ts",
                "type": "Story<MenuBarItemComponent>",
                "defaultValue": "(args: MenuBarItemComponent) => ({\n  component: MenuBarItemComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Message.stories.ts",
                "type": "Story<MessageComponent>",
                "defaultValue": "(args: MessageComponent) => ({\n  component: MessageComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "Story<ModelComponent>",
                "defaultValue": "(args: ModelComponent) => ({\n  component: ModelComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Notification.stories.ts",
                "type": "Story<NotificationComponent>",
                "defaultValue": "(args: NotificationComponent) => ({\n  component: NotificationComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page-Header.stories.ts",
                "type": "Story<PageHeaderComponent>",
                "defaultValue": "(args: PageHeaderComponent) => ({\n  component: PageHeaderComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Pagintors.stories.ts",
                "type": "Story<PaginationComponent>",
                "defaultValue": "(args: PaginationComponent) => ({\n  component: PaginationComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Pop-Confirm.stories.ts",
                "type": "Story<PopConfirmComponent>",
                "defaultValue": "(args: PopConfirmComponent) => ({\n  component: PopConfirmComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Popover.stories.ts",
                "type": "Story<PopoverComponent>",
                "defaultValue": "(args: PopoverComponent) => ({\n  component: PopoverComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Radio-Button.stories.ts",
                "type": "Story<RadioButtonComponent>",
                "defaultValue": "(args: RadioButtonComponent) => ({\n  component: RadioButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Rate.stories.ts",
                "type": "Story<RateComponent>",
                "defaultValue": "(args: RateComponent) => ({\n  component: RateComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Result.stories.ts",
                "type": "Story<ResultComponent>",
                "defaultValue": "(args: ResultComponent) => ({\n  component: ResultComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Right-Icon-Button.stories.ts",
                "type": "Story<RightIconButtonComponent>",
                "defaultValue": "(args: RightIconButtonComponent) => ({\n  component: RightIconButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Select-Button.stories.ts",
                "type": "Story<SelectButtonComponent>",
                "defaultValue": "(args: SelectButtonComponent) => ({\n  component: SelectButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Stepper.stories.ts",
                "type": "Story<StepperComponent>",
                "defaultValue": "(args: StepperComponent) => ({\n  component: StepperComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Switch-Button.stories.ts",
                "type": "Story<SwitchButtonComponent>",
                "defaultValue": "(args: SwitchButtonComponent) => ({\n  component: SwitchButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tab.stories.ts",
                "type": "Story<TabComponent>",
                "defaultValue": "(args: TabComponent) => ({\n  component: TabComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Table.stories.ts",
                "type": "Story<TableComponent>",
                "defaultValue": "(args: TableComponent) => ({\n  component: TableComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Text-Button.stories.ts",
                "type": "Story<TextButtonComponent>",
                "defaultValue": "(args: TextButtonComponent) => ({\n  component: TextButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Textarea.stories.ts",
                "type": "Story<TextareaComponent>",
                "defaultValue": "(args: TextareaComponent) => ({\n  component: TextareaComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Time.stories.ts",
                "type": "Story<TimeComponent>",
                "defaultValue": "(args: TimeComponent) => ({\n  component: TimeComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "type": "Story<TooltipComponent>",
                "defaultValue": "(args: TooltipComponent) => ({\n  component: TooltipComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Top-Bar.stories.ts",
                "type": "Story<AppTopbarComponent>",
                "defaultValue": "(args: AppTopbarComponent) => ({\n  component: AppTopbarComponent,\n  props: args,\n})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Badges.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TextAvatar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Avatar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Title",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page-Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TopCenterTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Popover.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TopCenterTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TopDownTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Popover.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TopDownTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TopUpTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Popover.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TopUpTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Unclosable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tab.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "UnclosableWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tab.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Uncollapsed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Menu-Bar-Item.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "UserImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chips.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ValidMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Date.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ValidMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Textarea.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ValidMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Time.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "VerticalArrow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Stepper.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "VerticalIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Stepper.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Badges.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chips.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Global-Banners.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Message.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Result.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WarningConfermation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WarningConfermationWithoutIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WarningIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Notification.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WarningInformation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WarningInformationWithoutIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Model.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithoutLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/Tab.stories.ts": [
                {
                    "name": "Active",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tab.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Closable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tab.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ClosableWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tab.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tab.stories.ts",
                    "type": "Story<TabComponent>",
                    "defaultValue": "(args: TabComponent) => ({\n  component: TabComponent,\n  props: args,\n})"
                },
                {
                    "name": "Unclosable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tab.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "UnclosableWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tab.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Menu-Bar-Item.stories.ts": [
                {
                    "name": "ActiveNormal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Menu-Bar-Item.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Collapsed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Menu-Bar-Item.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Normal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Menu-Bar-Item.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SubItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Menu-Bar-Item.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Menu-Bar-Item.stories.ts",
                    "type": "Story<MenuBarItemComponent>",
                    "defaultValue": "(args: MenuBarItemComponent) => ({\n  component: MenuBarItemComponent,\n  props: args,\n})"
                },
                {
                    "name": "Uncollapsed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Menu-Bar-Item.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Chips.stories.ts": [
                {
                    "name": "Addable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chips.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Counter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chips.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chips.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chips.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chips.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Iconic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chips.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Positive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chips.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chips.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Removable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chips.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Selected",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chips.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chips.stories.ts",
                    "type": "Story<ChipsComponent>",
                    "defaultValue": "(args: ChipsComponent) => ({\n  component: ChipsComponent,\n  props: args,\n})"
                },
                {
                    "name": "UserImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chips.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chips.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Counter.stories.ts": [
                {
                    "name": "Added",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Counter.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Important",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Counter.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Counter.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrimaryInverted",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Counter.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Removed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Counter.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Counter.stories.ts",
                    "type": "Story<CounterComponent>",
                    "defaultValue": "(args: CounterComponent) => ({\n  component: CounterComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Stepper.stories.ts": [
                {
                    "name": "Arrow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Stepper.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Stepper.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Stepper.stories.ts",
                    "type": "Story<StepperComponent>",
                    "defaultValue": "(args: StepperComponent) => ({\n  component: StepperComponent,\n  props: args,\n})"
                },
                {
                    "name": "VerticalArrow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Stepper.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "VerticalIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Stepper.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Alert.stories.ts": [
                {
                    "name": "Banner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CloseText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DoubleIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LeftIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "RightIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Alert.stories.ts",
                    "type": "Story<AlertComponent>",
                    "defaultValue": "(args: AlertComponent) => ({\n  component: AlertComponent,\n  props: args,\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Notification.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Notification.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Notification.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ErrorIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Notification.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "InfoIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Notification.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Notification.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Notification.stories.ts",
                    "type": "Story<NotificationComponent>",
                    "defaultValue": "(args: NotificationComponent) => ({\n  component: NotificationComponent,\n  props: args,\n})"
                },
                {
                    "name": "WarningIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Notification.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Global-Banner-Alert.stories.ts": [
                {
                    "name": "BasicChange",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Global-Banner-Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Change",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Global-Banner-Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Erorr",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Global-Banner-Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "IconChange",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Global-Banner-Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Global-Banner-Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Global-Banner-Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Global-Banner-Alert.stories.ts",
                    "type": "Story<GlobalBannersAlertComponent>",
                    "defaultValue": "(args: GlobalBannersAlertComponent) => ({\n  component: GlobalBannersAlertComponent,\n  props: args,\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Global-Banner-Alert.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Model.stories.ts": [
                {
                    "name": "BasicConfermation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BasicInformation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ErrorConfermation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ErrorConfermationWithoutIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ErrorInformation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ErrorInformationWithoutIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "InfoConfermation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "InfoConfermationWithoutIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "InfoInformation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "InfoInformationWithoutIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessConfermation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessConfermationWithoutIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessInformation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessInformationWithoutIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "Story<ModelComponent>",
                    "defaultValue": "(args: ModelComponent) => ({\n  component: ModelComponent,\n  props: args,\n})"
                },
                {
                    "name": "WarningConfermation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WarningConfermationWithoutIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WarningInformation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WarningInformationWithoutIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Model.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Table.stories.ts": [
                {
                    "name": "Border",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Table.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Table.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OrderBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Table.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OrderBaseWithBorder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Table.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Selected",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Table.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Table.stories.ts",
                    "type": "Story<TableComponent>",
                    "defaultValue": "(args: TableComponent) => ({\n  component: TableComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Popover.stories.ts": [
                {
                    "name": "BottomCenterTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Popover.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BottomDownTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Popover.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BottomUpTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Popover.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LeftCenterTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Popover.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LeftDownTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Popover.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LeftUpTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Popover.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "RightCenterTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Popover.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "RightDownTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Popover.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "RightUpTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Popover.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Popover.stories.ts",
                    "type": "Story<PopoverComponent>",
                    "defaultValue": "(args: PopoverComponent) => ({\n  component: PopoverComponent,\n  props: args,\n})"
                },
                {
                    "name": "TopCenterTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Popover.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TopDownTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Popover.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TopUpTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Popover.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Tooltip.stories.ts": [
                {
                    "name": "BottomCenterTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BottomDownTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BottomUpTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LeftCenterTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LeftDownTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LeftUpTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "RightCenterTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "RightDownTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "RightUpTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "type": "Story<TooltipComponent>",
                    "defaultValue": "(args: TooltipComponent) => ({\n  component: TooltipComponent,\n  props: args,\n})"
                },
                {
                    "name": "TopCenterTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TopDownTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TopUpTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Page-Header.stories.ts": [
                {
                    "name": "Breadcrumb",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page-Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "FullPageHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page-Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page-Header.stories.ts",
                    "type": "Story<PageHeaderComponent>",
                    "defaultValue": "(args: PageHeaderComponent) => ({\n  component: PageHeaderComponent,\n  props: args,\n})"
                },
                {
                    "name": "Title",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page-Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/stories/Extended-Button.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Extended-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DangerOutline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Extended-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Dashed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Extended-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Extended-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Extended-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrimaryOutline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Extended-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Extended-Button.stories.ts",
                    "type": "Story<ExtendedButtonComponent>",
                    "defaultValue": "(args: ExtendedButtonComponent) => ({\n  component: ExtendedButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Left-Icon-Button.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Left-Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DangerOutline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Left-Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Dashed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Left-Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Left-Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Left-Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrimaryOutline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Left-Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Left-Icon-Button.stories.ts",
                    "type": "Story<LeftIconButtonComponent>",
                    "defaultValue": "(args: LeftIconButtonComponent) => ({\n  component: LeftIconButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Right-Icon-Button.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Right-Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DangerOutline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Right-Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Dashed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Right-Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Right-Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Right-Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrimaryOutline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Right-Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Right-Icon-Button.stories.ts",
                    "type": "Story<RightIconButtonComponent>",
                    "defaultValue": "(args: RightIconButtonComponent) => ({\n  component: RightIconButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Text-Button.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Text-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DangerOutline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Text-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Dashed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Text-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Text-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Text-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrimaryOutline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Text-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Text-Button.stories.ts",
                    "type": "Story<TextButtonComponent>",
                    "defaultValue": "(args: TextButtonComponent) => ({\n  component: TextButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Dropdown-Button.stories.ts": [
                {
                    "name": "DangerDropdown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Dropdown-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DangerOutlineDropdown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Dropdown-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DashedDropdown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Dropdown-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OutlineDropdown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Dropdown-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrimaryDropdown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Dropdown-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrimaryOutlineDropdown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Dropdown-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Dropdown-Button.stories.ts",
                    "type": "Story<DropdownButtonComponent>",
                    "defaultValue": "(args: DropdownButtonComponent) => ({\n  component: DropdownButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Icon-Button.stories.ts": [
                {
                    "name": "DangerIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DangerOutlineIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DashedIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OutlineIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrimaryIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrimaryOutlineIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Icon-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Icon-Button.stories.ts",
                    "type": "Story<ButtonIconComponent>",
                    "defaultValue": "(args: ButtonIconComponent) => ({\n  component: ButtonIconComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Facial-Rate.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Facial-Rate.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Facial-Rate.stories.ts",
                    "type": "Story<FacialRateComponent>",
                    "defaultValue": "(args: FacialRateComponent) => ({\n  component: FacialRateComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Global-Banners.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Global-Banners.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Erorr",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Global-Banners.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Global-Banners.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Global-Banners.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Global-Banners.stories.ts",
                    "type": "Story<GlobalBannersComponent>",
                    "defaultValue": "(args: GlobalBannersComponent) => ({\n  component: GlobalBannersComponent,\n  props: args,\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Global-Banners.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Rate.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Rate.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Rate.stories.ts",
                    "type": "Story<RateComponent>",
                    "defaultValue": "(args: RateComponent) => ({\n  component: RateComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Badges.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Badges.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Badges.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "IconText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Badges.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Proccessing",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Badges.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Badges.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Badges.stories.ts",
                    "type": "Story<BadgesComponent>",
                    "defaultValue": "(args: BadgesComponent) => ({\n  component: BadgesComponent,\n  props: args,\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Badges.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Badges.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Input.stories.ts": [
                {
                    "name": "DoubleIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LeftIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "RightIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Input.stories.ts",
                    "type": "Story<InputComponent>",
                    "defaultValue": "(args: InputComponent) => ({\n  component: InputComponent,\n  props: args,\n})"
                },
                {
                    "name": "WithLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithoutLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Breadcrumb.stories.ts": [
                {
                    "name": "Dropdown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Breadcrumb.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Breadcrumb.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Link",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Breadcrumb.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LinkIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Breadcrumb.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LinkIconActive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Breadcrumb.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Breadcrumb.stories.ts",
                    "type": "Story<BreadcrumbComponent>",
                    "defaultValue": "(args: BreadcrumbComponent) => ({\n  component: BreadcrumbComponent,\n  props: args,\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Result.stories.ts": [
                {
                    "name": "Erorr",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Result.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Result.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Result.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Result.stories.ts",
                    "type": "Story<ResultComponent>",
                    "defaultValue": "(args: ResultComponent) => ({\n  component: ResultComponent,\n  props: args,\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Result.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Message.stories.ts": [
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Message.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Message.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Message.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Message.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Message.stories.ts",
                    "type": "Story<MessageComponent>",
                    "defaultValue": "(args: MessageComponent) => ({\n  component: MessageComponent,\n  props: args,\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Message.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Avatar.stories.ts": [
                {
                    "name": "ImageAvatar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Avatar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ImageAvatarCheck",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Avatar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ImageAvatarClose",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Avatar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ImageAvatarMore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Avatar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ImageAvatarPresence",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Avatar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Avatar.stories.ts",
                    "type": "Story<AvatarComponent>",
                    "defaultValue": "(args: AvatarComponent) => ({\n  component: AvatarComponent,\n  props: args,\n})"
                },
                {
                    "name": "TextAvatar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Avatar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Date.stories.ts": [
                {
                    "name": "InvalidMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Date.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Label",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Date.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Message",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Date.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Date.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Date.stories.ts",
                    "type": "Story<DateComponent>",
                    "defaultValue": "(args: DateComponent) => ({\n  component: DateComponent,\n  props: args,\n})"
                },
                {
                    "name": "ValidMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Date.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Textarea.stories.ts": [
                {
                    "name": "InvalidMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Textarea.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Label",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Textarea.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Message",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Textarea.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Textarea.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Textarea.stories.ts",
                    "type": "Story<TextareaComponent>",
                    "defaultValue": "(args: TextareaComponent) => ({\n  component: TextareaComponent,\n  props: args,\n})"
                },
                {
                    "name": "ValidMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Textarea.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Time.stories.ts": [
                {
                    "name": "InvalidMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Time.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Label",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Time.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Message",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Time.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Time.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Time.stories.ts",
                    "type": "Story<TimeComponent>",
                    "defaultValue": "(args: TimeComponent) => ({\n  component: TimeComponent,\n  props: args,\n})"
                },
                {
                    "name": "ValidMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Time.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Checkbox.stories.ts": [
                {
                    "name": "Label",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Checkbox.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Checkbox.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Checkbox.stories.ts",
                    "type": "Story<CheckboxComponent>",
                    "defaultValue": "(args: CheckboxComponent) => ({\n  component: CheckboxComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Pop-Confirm.stories.ts": [
                {
                    "name": "Label",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Pop-Confirm.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Pop-Confirm.stories.ts",
                    "type": "Story<PopConfirmComponent>",
                    "defaultValue": "(args: PopConfirmComponent) => ({\n  component: PopConfirmComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Radio-Button.stories.ts": [
                {
                    "name": "Label",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Radio-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Radio-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Radio-Button.stories.ts",
                    "type": "Story<RadioButtonComponent>",
                    "defaultValue": "(args: RadioButtonComponent) => ({\n  component: RadioButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Select-Button.stories.ts": [
                {
                    "name": "Label",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Select-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Message",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Select-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Select-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Select-Button.stories.ts",
                    "type": "Story<SelectButtonComponent>",
                    "defaultValue": "(args: SelectButtonComponent) => ({\n  component: SelectButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
                }
            ],
            "src/stories/Top-Bar.stories.ts": [
                {
                    "name": "Logo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Top-Bar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SearchIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Top-Bar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SearchInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Top-Bar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Top-Bar.stories.ts",
                    "type": "Story<AppTopbarComponent>",
                    "defaultValue": "(args: AppTopbarComponent) => ({\n  component: AppTopbarComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Button-Group.stories.ts": [
                {
                    "name": "OutlineIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button-Group.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OutlineText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button-Group.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrimaryIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button-Group.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrimaryText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button-Group.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button-Group.stories.ts",
                    "type": "Story<ButtonGroupComponent>",
                    "defaultValue": "(args: ButtonGroupComponent) => ({\n  component: ButtonGroupComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Group-Paginator.stories.ts": [
                {
                    "name": "Paginator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Group-Paginator.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Group-Paginator.stories.ts",
                    "type": "Story<GroupPaginationComponent>",
                    "defaultValue": "(args: GroupPaginationComponent) => ({\n  component: GroupPaginationComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Pagintors.stories.ts": [
                {
                    "name": "Paginator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Pagintors.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Pagintors.stories.ts",
                    "type": "Story<PaginationComponent>",
                    "defaultValue": "(args: PaginationComponent) => ({\n  component: PaginationComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/Switch-Button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Switch-Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Switch-Button.stories.ts",
                    "type": "Story<SwitchButtonComponent>",
                    "defaultValue": "(args: SwitchButtonComponent) => ({\n  component: SwitchButtonComponent,\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/alert/alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/app-topbar/app-topbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppTopbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/badges/badges.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/breadcrumb/breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/button-group/button-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/button-icon/button-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/chips/chips.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/date/date.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/dropdown-button/dropdown-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/extended-button/extended-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExtendedButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/facial-rate/facial-rate.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FacialRateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/global-banners-alert/global-banners-alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GlobalBannersAlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/global-banners/global-banners.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GlobalBannersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/group-pagination/group-pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GroupPaginationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/left-icon-button/left-icon-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LeftIconButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/menu-bar-item/menu-bar-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuBarItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/message/message.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MessageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/model/model.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/notification/notification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/page-header/page-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pagination/pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pop-confirm/pop-confirm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PopConfirmComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/popover/popover.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PopoverComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/radio-button/radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/rate/rate.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/result/result.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResultComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/right-icon-button/right-icon-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RightIconButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/select-button/select-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/switch-button/switch-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SwitchButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/tablee/tablee.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/text-button/text-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/time/time.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/tooltip/tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Banner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CloseText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DoubleIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RightIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ImageAvatar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ImageAvatarCheck",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ImageAvatarClose",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ImageAvatarMore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ImageAvatarPresence",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextAvatar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Badges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Badges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Badges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Badges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Proccessing",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Badges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Badges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Badges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Badges.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Link",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LinkIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LinkIconActive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button-Group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlineIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button-Group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlineText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button-Group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button-Group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button-Group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Label",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Addable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Counter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Iconic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Positive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Removable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Selected",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chips.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Added",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Important",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryInverted",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Removed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Date.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InvalidMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Date.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Label",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Date.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Message",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Date.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Date.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Date.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ValidMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Dropdown-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Dropdown-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerOutlineDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Dropdown-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DashedDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Dropdown-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlineDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Dropdown-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Dropdown-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryOutlineDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Dropdown-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Extended-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Extended-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerOutline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Extended-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dashed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Extended-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Extended-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Extended-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryOutline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Extended-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Facial-Rate.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Facial-Rate.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicChange",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Change",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Erorr",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconChange",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Global-Banner-Alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Global-Banners.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Global-Banners.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Erorr",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Global-Banners.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Global-Banners.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Global-Banners.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Global-Banners.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Group-Paginator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Paginator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Group-Paginator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerOutlineIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DashedIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlineIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryOutlineIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DoubleIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RightIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Left-Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Left-Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerOutline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Left-Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dashed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Left-Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Left-Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Left-Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryOutline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Left-Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Menu-Bar-Item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ActiveNormal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Menu-Bar-Item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Collapsed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Menu-Bar-Item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Normal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Menu-Bar-Item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SubItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Menu-Bar-Item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Menu-Bar-Item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Uncollapsed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Message.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Message.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Message.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Message.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Message.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Message.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicConfermation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicInformation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorConfermation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorConfermationWithoutIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorInformation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorInformationWithoutIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InfoConfermation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InfoConfermationWithoutIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InfoInformation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InfoInformationWithoutIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessConfermation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessConfermationWithoutIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessInformation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessInformationWithoutIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WarningConfermation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WarningConfermationWithoutIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WarningInformation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Model.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WarningInformationWithoutIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Notification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Notification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Notification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Notification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InfoIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Notification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Notification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Notification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WarningIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page-Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Breadcrumb",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page-Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FullPageHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page-Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page-Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Title",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Pagintors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Paginator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Pagintors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Pop-Confirm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Label",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Pop-Confirm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomCenterTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomDownTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomUpTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftCenterTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftDownTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftUpTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RightCenterTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RightDownTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RightUpTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TopCenterTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TopDownTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TopUpTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Radio-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Label",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Radio-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Radio-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Rate.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Rate.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Result.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Erorr",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Result.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Result.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Result.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Result.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Right-Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Right-Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerOutline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Right-Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dashed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Right-Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Right-Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Right-Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryOutline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Right-Icon-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Select-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Label",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Select-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Message",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Select-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Select-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Arrow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VerticalArrow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VerticalIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Switch-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Switch-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Active",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Closable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ClosableWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Unclosable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UnclosableWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Border",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OrderBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OrderBaseWithBorder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Selected",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Text-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Text-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerOutline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Text-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dashed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Text-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Text-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Text-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrimaryOutline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Text-Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InvalidMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Label",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Message",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ValidMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Time.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InvalidMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Time.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Label",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Time.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Message",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Time.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Time.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Time.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ValidMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomCenterTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomDownTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomUpTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftCenterTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftDownTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftUpTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RightCenterTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RightDownTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RightUpTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TopCenterTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TopDownTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TopUpTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Top-Bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Logo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Top-Bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Top-Bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Top-Bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}